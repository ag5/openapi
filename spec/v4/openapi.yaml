components:
    parameters:
        cursor:
            description: |
                Cursor for pagination. This should be the `nextCursor` value from a previous response.
                Leave empty to start from the beginning.
            in: query
            name: cursor
            schema:
                format: byte
                type: string
        limit:
            description: Maximum number of items to return (1-1000)
            in: query
            name: limit
            schema:
                default: 10
                maximum: 1000
                minimum: 1
                type: integer
        orgID:
            description: |
                Organization:
                - OrgKeep UUID (e.g., `123e4567-e89b-12d3-a456-426614174000`)
            examples:
                uuid:
                    summary: Organization UUID
                    value: 123e4567-e89b-12d3-a456-426614174000
            in: path
            name: orgID
            required: true
            schema:
                type: string
    responses:
        BadRequest:
            content:
                application/json:
                    examples:
                        invalidInput:
                            summary: Invalid input data
                            value:
                                code: INVALID_INPUT
                                details:
                                    field: email
                                    reason: Invalid email format
                                message: The provided input data is invalid
                    schema:
                        $ref: '#/components/schemas/Error'
            description: Bad request
        InternalError:
            content:
                application/json:
                    examples:
                        internalError:
                            summary: Internal server error
                            value:
                                code: INTERNAL_ERROR
                                message: An unexpected error occurred
                    schema:
                        $ref: '#/components/schemas/Error'
            description: Internal server error
        NotFound:
            content:
                application/json:
                    examples:
                        resourceNotFound:
                            summary: Resource not found
                            value:
                                code: NOT_FOUND
                                details:
                                    id: 123e4567-e89b-12d3-a456-426614174000
                                    resource: employee
                                message: The requested resource was not found
                    schema:
                        $ref: '#/components/schemas/Error'
            description: Not found
        RateLimitExceeded:
            content:
                application/json:
                    examples:
                        rateLimitExceeded:
                            summary: Rate limit exceeded
                            value:
                                code: RATE_LIMIT_EXCEEDED
                                message: Too many requests. Please retry after some time.
                    schema:
                        $ref: '#/components/schemas/Error'
            description: Rate limit exceeded
            headers:
                X-RateLimit-Limit:
                    description: The rate limit ceiling for the current period
                    schema:
                        type: integer
                X-RateLimit-Remaining:
                    description: The number of requests remaining in the current period
                    schema:
                        type: integer
                X-RateLimit-Reset:
                    description: The time at which the current period resets
                    schema:
                        type: integer
        Unauthorized:
            content:
                application/json:
                    examples:
                        invalidApiKey:
                            summary: Invalid API key
                            value:
                                code: INVALID_TOKEN
                                message: The provided API key is invalid or expired
                        missingApiKey:
                            summary: Missing API key
                            value:
                                code: MISSING_AUTH
                                message: API key is required. Please provide the X-API-Key header
                    schema:
                        $ref: '#/components/schemas/Error'
            description: Unauthorized
    schemas:
        CreateCreateCustomFieldDefinitionRequest:
            properties:
                code:
                    type: string
                entityDefinitionID:
                    format: uuid
                    type: string
                name:
                    type: object
                repositoryID:
                    format: uuid
                    type: string
            required:
                - repositoryID
                - code
                - name
                - entityDefinitionID
            type: object
        CreateCreateEmployeeRequest:
            properties:
                birthDate:
                    format: date
                    type: string
                customValues:
                    type: object
                email:
                    format: email
                    type: string
                employeeNumber:
                    type: string
                firstName:
                    type: string
                initials:
                    type: string
                remark:
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                surname:
                    type: string
            required:
                - repositoryID
                - surname
            type: object
        CreateCreateEmployeeUnavailabilityRequest:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                employeeID:
                    format: uuid
                    type: string
                reason:
                    type: string
                repositoryID:
                    format: uuid
                    type: string
            required:
                - repositoryID
                - activePeriod
                - employeeID
            type: object
        CreateCreateEmploymentContractRequest:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                contractTypeID:
                    format: uuid
                    type: string
                employeeID:
                    format: uuid
                    type: string
                repositoryID:
                    format: uuid
                    type: string
            required:
                - repositoryID
                - activePeriod
                - employeeID
            type: object
        CreateCreateEmploymentContractTypeRequest:
            properties:
                code:
                    type: string
                name:
                    type: object
                repositoryID:
                    format: uuid
                    type: string
            required:
                - repositoryID
                - code
                - name
            type: object
        CreateCreateEmploymentRelationRequest:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                fromEmployeeID:
                    format: uuid
                    type: string
                relationTypeID:
                    format: uuid
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                toEmployeeID:
                    format: uuid
                    type: string
            required:
                - repositoryID
                - activePeriod
                - toEmployeeID
                - fromEmployeeID
                - relationTypeID
            type: object
        CreateCreateEmploymentRelationTypeRequest:
            properties:
                code:
                    type: string
                name:
                    type: object
                repositoryID:
                    format: uuid
                    type: string
            required:
                - repositoryID
                - code
                - name
            type: object
        CreateCreateGroupingRequest:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                code:
                    type: string
                customValues:
                    type: object
                definedInGroupingID:
                    format: uuid
                    type: string
                description:
                    type: object
                name:
                    type: object
                repositoryID:
                    format: uuid
                    type: string
                typeID:
                    format: uuid
                    type: string
            required:
                - repositoryID
                - code
                - name
                - activePeriod
            type: object
        CreateCreateGroupingTypeRequest:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                code:
                    type: string
                customValues:
                    type: object
                name:
                    type: object
                repositoryID:
                    format: uuid
                    type: string
            required:
                - repositoryID
                - code
                - name
                - activePeriod
            type: object
        CreateCreateMonitoringTraceRequest:
            properties:
                executedAt:
                    format: date-time
                    type: string
                remark:
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestedAt:
                    format: date-time
                    type: string
            required:
                - repositoryID
            type: object
        CreateCreatePositionAssignmentRequest:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                employeeID:
                    format: uuid
                    type: string
                remark:
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                tagIDs:
                    items:
                        format: uuid
                        type: string
                    type: array
            required:
                - repositoryID
                - employeeID
                - activePeriod
                - tagIDs
            type: object
        CreateCreateRatingScaleLevelDescriptorRequest:
            properties:
                description:
                    type: object
                ratingScaleLevelID:
                    format: uuid
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                skillDefinitionID:
                    format: uuid
                    type: string
            required:
                - repositoryID
                - ratingScaleLevelID
                - skillDefinitionID
                - description
            type: object
        CreateCreateRatingScaleLevelRequest:
            properties:
                code:
                    type: string
                customValues:
                    type: object
                description:
                    type: object
                name:
                    type: object
                ratingScaleID:
                    format: uuid
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                scoreOrder:
                    format: int32
                    type: integer
            required:
                - repositoryID
                - ratingScaleID
                - scoreOrder
                - code
                - name
            type: object
        CreateCreateRatingScaleRequest:
            properties:
                code:
                    type: string
                customValues:
                    type: object
                name:
                    type: object
                repositoryID:
                    format: uuid
                    type: string
            required:
                - repositoryID
                - code
                - name
            type: object
        CreateCreateSkillDefinitionRequest:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                code:
                    type: string
                customValues:
                    type: object
                description:
                    type: object
                name:
                    type: object
                ratingScaleID:
                    format: uuid
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                typeID:
                    format: uuid
                    type: string
            required:
                - repositoryID
                - name
                - ratingScaleID
                - activePeriod
            type: object
        CreateCreateSkillDefinitionTypeRequest:
            properties:
                code:
                    type: string
                customValues:
                    type: object
                name:
                    type: object
                repositoryID:
                    format: uuid
                    type: string
            required:
                - repositoryID
                - code
                - name
            type: object
        CreateCreateSkillPlanningRequest:
            properties:
                closeDate:
                    format: date
                    type: string
                customValues:
                    type: object
                deadlineDate:
                    format: date
                    type: string
                employeeID:
                    format: uuid
                    type: string
                fromDate:
                    format: date
                    type: string
                remark:
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                skillDefinitionID:
                    format: uuid
                    type: string
                typeOfProofID:
                    format: uuid
                    type: string
            required:
                - repositoryID
                - employeeID
                - typeOfProofID
                - fromDate
                - skillDefinitionID
            type: object
        CreateCreateSkillResultRequest:
            properties:
                customValues:
                    type: object
                employeeID:
                    format: uuid
                    type: string
                expirationDate:
                    format: date
                    type: string
                issueDate:
                    format: date
                    type: string
                remark:
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                scoreID:
                    format: uuid
                    type: string
                typeOfProofID:
                    format: uuid
                    type: string
            required:
                - repositoryID
                - employeeID
                - issueDate
                - typeOfProofID
            type: object
        CreateCreateTypesOfProofRequest:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                code:
                    type: string
                customValues:
                    type: object
                description:
                    type: string
                name:
                    type: object
                repositoryID:
                    format: uuid
                    type: string
                skillDefinitionID:
                    format: uuid
                    type: string
            required:
                - repositoryID
                - name
                - skillDefinitionID
                - activePeriod
            type: object
        CreateCustomFieldDefinition:
            properties:
                code:
                    type: string
                entityDefinitionID:
                    format: uuid
                    type: string
                isProposalExecutionFailed:
                    readOnly: true
                    type: boolean
                isProposalResolved:
                    readOnly: true
                    type: boolean
                name:
                    type: object
                proposalExecutionErrorText:
                    readOnly: true
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestID:
                    format: uuid
                    readOnly: true
                    type: string
                subjectID:
                    format: uuid
                    readOnly: true
                    type: string
            required:
                - requestID
                - isProposalResolved
                - isProposalExecutionFailed
                - subjectID
                - repositoryID
                - code
                - name
                - entityDefinitionID
            type: object
        CreateCustomFieldDefinitionRequest:
            properties:
                code:
                    type: string
                createdAt:
                    format: date-time
                    type: string
                entityDefinitionID:
                    format: uuid
                    type: string
                lastModifiedAt:
                    format: date-time
                    type: string
                name:
                    type: object
                repositoryID:
                    format: uuid
                    type: string
            required:
                - createdAt
                - lastModifiedAt
                - repositoryID
                - code
                - name
                - entityDefinitionID
            type: object
        CreateDeleteCustomFieldDefinitionRequest:
            properties:
                id:
                    format: uuid
                    type: string
                repositoryID:
                    format: uuid
                    type: string
            required:
                - id
                - repositoryID
            type: object
        CreateDeleteEmployeeRequest:
            properties:
                id:
                    format: uuid
                    type: string
                repositoryID:
                    format: uuid
                    type: string
            required:
                - id
                - repositoryID
            type: object
        CreateDeleteEmployeeUnavailabilityRequest:
            properties:
                id:
                    format: uuid
                    type: string
                repositoryID:
                    format: uuid
                    type: string
            required:
                - id
                - repositoryID
            type: object
        CreateDeleteEmploymentContractRequest:
            properties:
                id:
                    format: uuid
                    type: string
                repositoryID:
                    format: uuid
                    type: string
            required:
                - id
                - repositoryID
            type: object
        CreateDeleteEmploymentContractTypeRequest:
            properties:
                id:
                    format: uuid
                    type: string
                repositoryID:
                    format: uuid
                    type: string
            required:
                - id
                - repositoryID
            type: object
        CreateDeleteEmploymentRelationRequest:
            properties:
                id:
                    format: uuid
                    type: string
                repositoryID:
                    format: uuid
                    type: string
            required:
                - id
                - repositoryID
            type: object
        CreateDeleteEmploymentRelationTypeRequest:
            properties:
                id:
                    format: uuid
                    type: string
                repositoryID:
                    format: uuid
                    type: string
            required:
                - id
                - repositoryID
            type: object
        CreateDeleteGroupingRequest:
            properties:
                id:
                    format: uuid
                    type: string
                repositoryID:
                    format: uuid
                    type: string
            required:
                - id
                - repositoryID
            type: object
        CreateDeleteGroupingTypeRequest:
            properties:
                id:
                    format: uuid
                    type: string
                repositoryID:
                    format: uuid
                    type: string
            required:
                - id
                - repositoryID
            type: object
        CreateDeleteMonitoringTraceRequest:
            properties:
                id:
                    format: uuid
                    type: string
                repositoryID:
                    format: uuid
                    type: string
            required:
                - id
                - repositoryID
            type: object
        CreateDeletePositionAssignmentRequest:
            properties:
                id:
                    format: uuid
                    type: string
                repositoryID:
                    format: uuid
                    type: string
            required:
                - id
                - repositoryID
            type: object
        CreateDeleteRatingScaleLevelDescriptorRequest:
            properties:
                id:
                    format: uuid
                    type: string
                repositoryID:
                    format: uuid
                    type: string
            required:
                - id
                - repositoryID
            type: object
        CreateDeleteRatingScaleLevelRequest:
            properties:
                id:
                    format: uuid
                    type: string
                repositoryID:
                    format: uuid
                    type: string
            required:
                - id
                - repositoryID
            type: object
        CreateDeleteRatingScaleRequest:
            properties:
                id:
                    format: uuid
                    type: string
                repositoryID:
                    format: uuid
                    type: string
            required:
                - id
                - repositoryID
            type: object
        CreateDeleteSkillDefinitionRequest:
            properties:
                id:
                    format: uuid
                    type: string
                repositoryID:
                    format: uuid
                    type: string
            required:
                - id
                - repositoryID
            type: object
        CreateDeleteSkillDefinitionTypeRequest:
            properties:
                id:
                    format: uuid
                    type: string
                repositoryID:
                    format: uuid
                    type: string
            required:
                - id
                - repositoryID
            type: object
        CreateDeleteSkillPlanningRequest:
            properties:
                id:
                    format: uuid
                    type: string
                repositoryID:
                    format: uuid
                    type: string
            required:
                - id
                - repositoryID
            type: object
        CreateDeleteSkillResultRequest:
            properties:
                id:
                    format: uuid
                    type: string
                repositoryID:
                    format: uuid
                    type: string
            required:
                - id
                - repositoryID
            type: object
        CreateDeleteTypesOfProofRequest:
            properties:
                id:
                    format: uuid
                    type: string
                repositoryID:
                    format: uuid
                    type: string
            required:
                - id
                - repositoryID
            type: object
        CreateEmployee:
            properties:
                birthDate:
                    format: date
                    type: string
                customValues:
                    type: object
                email:
                    format: email
                    type: string
                employeeNumber:
                    type: string
                firstName:
                    type: string
                initials:
                    type: string
                isProposalExecutionFailed:
                    readOnly: true
                    type: boolean
                isProposalResolved:
                    readOnly: true
                    type: boolean
                proposalExecutionErrorText:
                    readOnly: true
                    type: string
                remark:
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestID:
                    format: uuid
                    readOnly: true
                    type: string
                subjectID:
                    format: uuid
                    readOnly: true
                    type: string
                surname:
                    type: string
            required:
                - requestID
                - isProposalResolved
                - isProposalExecutionFailed
                - subjectID
                - repositoryID
                - surname
            type: object
        CreateEmployeeRequest:
            properties:
                birthDate:
                    format: date
                    type: string
                createdAt:
                    format: date-time
                    type: string
                customValues:
                    type: object
                email:
                    format: email
                    type: string
                employeeNumber:
                    type: string
                firstName:
                    type: string
                initials:
                    type: string
                lastModifiedAt:
                    format: date-time
                    type: string
                remark:
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                surname:
                    type: string
            required:
                - createdAt
                - lastModifiedAt
                - repositoryID
                - surname
            type: object
        CreateEmployeeUnavailability:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                employeeID:
                    format: uuid
                    type: string
                isProposalExecutionFailed:
                    readOnly: true
                    type: boolean
                isProposalResolved:
                    readOnly: true
                    type: boolean
                proposalExecutionErrorText:
                    readOnly: true
                    type: string
                reason:
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestID:
                    format: uuid
                    readOnly: true
                    type: string
                subjectID:
                    format: uuid
                    readOnly: true
                    type: string
            required:
                - requestID
                - isProposalResolved
                - isProposalExecutionFailed
                - subjectID
                - repositoryID
                - activePeriod
                - employeeID
            type: object
        CreateEmployeeUnavailabilityRequest:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                createdAt:
                    format: date-time
                    type: string
                employeeID:
                    format: uuid
                    type: string
                lastModifiedAt:
                    format: date-time
                    type: string
                reason:
                    type: string
                repositoryID:
                    format: uuid
                    type: string
            required:
                - createdAt
                - lastModifiedAt
                - repositoryID
                - activePeriod
                - employeeID
            type: object
        CreateEmploymentContract:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                contractTypeID:
                    format: uuid
                    type: string
                employeeID:
                    format: uuid
                    type: string
                isProposalExecutionFailed:
                    readOnly: true
                    type: boolean
                isProposalResolved:
                    readOnly: true
                    type: boolean
                proposalExecutionErrorText:
                    readOnly: true
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestID:
                    format: uuid
                    readOnly: true
                    type: string
                subjectID:
                    format: uuid
                    readOnly: true
                    type: string
            required:
                - requestID
                - isProposalResolved
                - isProposalExecutionFailed
                - subjectID
                - repositoryID
                - activePeriod
                - employeeID
            type: object
        CreateEmploymentContractRequest:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                contractTypeID:
                    format: uuid
                    type: string
                createdAt:
                    format: date-time
                    type: string
                employeeID:
                    format: uuid
                    type: string
                lastModifiedAt:
                    format: date-time
                    type: string
                repositoryID:
                    format: uuid
                    type: string
            required:
                - createdAt
                - lastModifiedAt
                - repositoryID
                - activePeriod
                - employeeID
            type: object
        CreateEmploymentContractType:
            properties:
                code:
                    type: string
                isProposalExecutionFailed:
                    readOnly: true
                    type: boolean
                isProposalResolved:
                    readOnly: true
                    type: boolean
                name:
                    type: object
                proposalExecutionErrorText:
                    readOnly: true
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestID:
                    format: uuid
                    readOnly: true
                    type: string
                subjectID:
                    format: uuid
                    readOnly: true
                    type: string
            required:
                - requestID
                - isProposalResolved
                - isProposalExecutionFailed
                - subjectID
                - repositoryID
                - code
                - name
            type: object
        CreateEmploymentContractTypeRequest:
            properties:
                code:
                    type: string
                createdAt:
                    format: date-time
                    type: string
                lastModifiedAt:
                    format: date-time
                    type: string
                name:
                    type: object
                repositoryID:
                    format: uuid
                    type: string
            required:
                - createdAt
                - lastModifiedAt
                - repositoryID
                - code
                - name
            type: object
        CreateEmploymentRelation:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                fromEmployeeID:
                    format: uuid
                    type: string
                isProposalExecutionFailed:
                    readOnly: true
                    type: boolean
                isProposalResolved:
                    readOnly: true
                    type: boolean
                proposalExecutionErrorText:
                    readOnly: true
                    type: string
                relationTypeID:
                    format: uuid
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestID:
                    format: uuid
                    readOnly: true
                    type: string
                subjectID:
                    format: uuid
                    readOnly: true
                    type: string
                toEmployeeID:
                    format: uuid
                    type: string
            required:
                - requestID
                - isProposalResolved
                - isProposalExecutionFailed
                - subjectID
                - repositoryID
                - activePeriod
                - toEmployeeID
                - fromEmployeeID
                - relationTypeID
            type: object
        CreateEmploymentRelationRequest:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                createdAt:
                    format: date-time
                    type: string
                fromEmployeeID:
                    format: uuid
                    type: string
                lastModifiedAt:
                    format: date-time
                    type: string
                relationTypeID:
                    format: uuid
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                toEmployeeID:
                    format: uuid
                    type: string
            required:
                - createdAt
                - lastModifiedAt
                - repositoryID
                - activePeriod
                - toEmployeeID
                - fromEmployeeID
                - relationTypeID
            type: object
        CreateEmploymentRelationType:
            properties:
                code:
                    type: string
                isProposalExecutionFailed:
                    readOnly: true
                    type: boolean
                isProposalResolved:
                    readOnly: true
                    type: boolean
                name:
                    type: object
                proposalExecutionErrorText:
                    readOnly: true
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestID:
                    format: uuid
                    readOnly: true
                    type: string
                subjectID:
                    format: uuid
                    readOnly: true
                    type: string
            required:
                - requestID
                - isProposalResolved
                - isProposalExecutionFailed
                - subjectID
                - repositoryID
                - code
                - name
            type: object
        CreateEmploymentRelationTypeRequest:
            properties:
                code:
                    type: string
                createdAt:
                    format: date-time
                    type: string
                lastModifiedAt:
                    format: date-time
                    type: string
                name:
                    type: object
                repositoryID:
                    format: uuid
                    type: string
            required:
                - createdAt
                - lastModifiedAt
                - repositoryID
                - code
                - name
            type: object
        CreateEntityDefinitionRequest:
            properties:
                code:
                    type: string
                name:
                    type: object
            required:
                - code
                - name
            type: object
        CreateGrouping:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                code:
                    type: string
                customValues:
                    type: object
                definedInGroupingID:
                    format: uuid
                    type: string
                description:
                    type: object
                isProposalExecutionFailed:
                    readOnly: true
                    type: boolean
                isProposalResolved:
                    readOnly: true
                    type: boolean
                name:
                    type: object
                proposalExecutionErrorText:
                    readOnly: true
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestID:
                    format: uuid
                    readOnly: true
                    type: string
                subjectID:
                    format: uuid
                    readOnly: true
                    type: string
                typeID:
                    format: uuid
                    type: string
            required:
                - requestID
                - isProposalResolved
                - isProposalExecutionFailed
                - subjectID
                - repositoryID
                - code
                - name
                - activePeriod
            type: object
        CreateGroupingRequest:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                code:
                    type: string
                createdAt:
                    format: date-time
                    type: string
                customValues:
                    type: object
                definedInGroupingID:
                    format: uuid
                    type: string
                description:
                    type: object
                lastModifiedAt:
                    format: date-time
                    type: string
                name:
                    type: object
                repositoryID:
                    format: uuid
                    type: string
                typeID:
                    format: uuid
                    type: string
            required:
                - createdAt
                - lastModifiedAt
                - repositoryID
                - code
                - name
                - activePeriod
            type: object
        CreateGroupingType:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                code:
                    type: string
                customValues:
                    type: object
                isProposalExecutionFailed:
                    readOnly: true
                    type: boolean
                isProposalResolved:
                    readOnly: true
                    type: boolean
                name:
                    type: object
                proposalExecutionErrorText:
                    readOnly: true
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestID:
                    format: uuid
                    readOnly: true
                    type: string
                subjectID:
                    format: uuid
                    readOnly: true
                    type: string
            required:
                - requestID
                - isProposalResolved
                - isProposalExecutionFailed
                - subjectID
                - repositoryID
                - code
                - name
                - activePeriod
            type: object
        CreateGroupingTypeRequest:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                code:
                    type: string
                createdAt:
                    format: date-time
                    type: string
                customValues:
                    type: object
                lastModifiedAt:
                    format: date-time
                    type: string
                name:
                    type: object
                repositoryID:
                    format: uuid
                    type: string
            required:
                - createdAt
                - lastModifiedAt
                - repositoryID
                - code
                - name
                - activePeriod
            type: object
        CreateMonitoringTrace:
            properties:
                executedAt:
                    format: date-time
                    type: string
                isProposalExecutionFailed:
                    readOnly: true
                    type: boolean
                isProposalResolved:
                    readOnly: true
                    type: boolean
                proposalExecutionErrorText:
                    readOnly: true
                    type: string
                remark:
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestID:
                    format: uuid
                    readOnly: true
                    type: string
                requestedAt:
                    format: date-time
                    type: string
                subjectID:
                    format: uuid
                    readOnly: true
                    type: string
            required:
                - requestID
                - isProposalResolved
                - isProposalExecutionFailed
                - subjectID
                - repositoryID
            type: object
        CreateMonitoringTraceRequest:
            properties:
                createdAt:
                    format: date-time
                    type: string
                executedAt:
                    format: date-time
                    type: string
                lastModifiedAt:
                    format: date-time
                    type: string
                remark:
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestedAt:
                    format: date-time
                    type: string
            required:
                - createdAt
                - lastModifiedAt
                - repositoryID
            type: object
        CreatePositionAssignment:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                employeeID:
                    format: uuid
                    type: string
                isProposalExecutionFailed:
                    readOnly: true
                    type: boolean
                isProposalResolved:
                    readOnly: true
                    type: boolean
                proposalExecutionErrorText:
                    readOnly: true
                    type: string
                remark:
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestID:
                    format: uuid
                    readOnly: true
                    type: string
                subjectID:
                    format: uuid
                    readOnly: true
                    type: string
                tagIDs:
                    items:
                        format: uuid
                        type: string
                    type: array
            required:
                - requestID
                - isProposalResolved
                - isProposalExecutionFailed
                - subjectID
                - repositoryID
                - employeeID
                - activePeriod
                - tagIDs
            type: object
        CreatePositionAssignmentRequest:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                createdAt:
                    format: date-time
                    type: string
                employeeID:
                    format: uuid
                    type: string
                lastModifiedAt:
                    format: date-time
                    type: string
                remark:
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                tagIDs:
                    items:
                        format: uuid
                        type: string
                    type: array
            required:
                - createdAt
                - lastModifiedAt
                - repositoryID
                - employeeID
                - activePeriod
                - tagIDs
            type: object
        CreateRatingScale:
            properties:
                code:
                    type: string
                customValues:
                    type: object
                isProposalExecutionFailed:
                    readOnly: true
                    type: boolean
                isProposalResolved:
                    readOnly: true
                    type: boolean
                name:
                    type: object
                proposalExecutionErrorText:
                    readOnly: true
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestID:
                    format: uuid
                    readOnly: true
                    type: string
                subjectID:
                    format: uuid
                    readOnly: true
                    type: string
            required:
                - requestID
                - isProposalResolved
                - isProposalExecutionFailed
                - subjectID
                - repositoryID
                - code
                - name
            type: object
        CreateRatingScaleLevel:
            properties:
                code:
                    type: string
                customValues:
                    type: object
                description:
                    type: object
                isProposalExecutionFailed:
                    readOnly: true
                    type: boolean
                isProposalResolved:
                    readOnly: true
                    type: boolean
                name:
                    type: object
                proposalExecutionErrorText:
                    readOnly: true
                    type: string
                ratingScaleID:
                    format: uuid
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestID:
                    format: uuid
                    readOnly: true
                    type: string
                scoreOrder:
                    format: int32
                    type: integer
                subjectID:
                    format: uuid
                    readOnly: true
                    type: string
            required:
                - requestID
                - isProposalResolved
                - isProposalExecutionFailed
                - subjectID
                - repositoryID
                - ratingScaleID
                - scoreOrder
                - code
                - name
            type: object
        CreateRatingScaleLevelDescriptor:
            properties:
                description:
                    type: object
                isProposalExecutionFailed:
                    readOnly: true
                    type: boolean
                isProposalResolved:
                    readOnly: true
                    type: boolean
                proposalExecutionErrorText:
                    readOnly: true
                    type: string
                ratingScaleLevelID:
                    format: uuid
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestID:
                    format: uuid
                    readOnly: true
                    type: string
                skillDefinitionID:
                    format: uuid
                    type: string
                subjectID:
                    format: uuid
                    readOnly: true
                    type: string
            required:
                - requestID
                - isProposalResolved
                - isProposalExecutionFailed
                - subjectID
                - repositoryID
                - ratingScaleLevelID
                - skillDefinitionID
                - description
            type: object
        CreateRatingScaleLevelDescriptorRequest:
            properties:
                createdAt:
                    format: date-time
                    type: string
                description:
                    type: object
                lastModifiedAt:
                    format: date-time
                    type: string
                ratingScaleLevelID:
                    format: uuid
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                skillDefinitionID:
                    format: uuid
                    type: string
            required:
                - createdAt
                - lastModifiedAt
                - repositoryID
                - ratingScaleLevelID
                - skillDefinitionID
                - description
            type: object
        CreateRatingScaleLevelRequest:
            properties:
                code:
                    type: string
                createdAt:
                    format: date-time
                    type: string
                customValues:
                    type: object
                description:
                    type: object
                lastModifiedAt:
                    format: date-time
                    type: string
                name:
                    type: object
                ratingScaleID:
                    format: uuid
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                scoreOrder:
                    format: int32
                    type: integer
            required:
                - createdAt
                - lastModifiedAt
                - repositoryID
                - ratingScaleID
                - scoreOrder
                - code
                - name
            type: object
        CreateRatingScaleRequest:
            properties:
                code:
                    type: string
                createdAt:
                    format: date-time
                    type: string
                customValues:
                    type: object
                lastModifiedAt:
                    format: date-time
                    type: string
                name:
                    type: object
                repositoryID:
                    format: uuid
                    type: string
            required:
                - createdAt
                - lastModifiedAt
                - repositoryID
                - code
                - name
            type: object
        CreateRepositoryRequest:
            properties:
                code:
                    type: string
            required:
                - code
            type: object
        CreateSkillDefinition:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                code:
                    type: string
                customValues:
                    type: object
                description:
                    type: object
                isProposalExecutionFailed:
                    readOnly: true
                    type: boolean
                isProposalResolved:
                    readOnly: true
                    type: boolean
                name:
                    type: object
                proposalExecutionErrorText:
                    readOnly: true
                    type: string
                ratingScaleID:
                    format: uuid
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestID:
                    format: uuid
                    readOnly: true
                    type: string
                subjectID:
                    format: uuid
                    readOnly: true
                    type: string
                typeID:
                    format: uuid
                    type: string
            required:
                - requestID
                - isProposalResolved
                - isProposalExecutionFailed
                - subjectID
                - repositoryID
                - name
                - ratingScaleID
                - activePeriod
            type: object
        CreateSkillDefinitionRequest:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                code:
                    type: string
                createdAt:
                    format: date-time
                    type: string
                customValues:
                    type: object
                description:
                    type: object
                lastModifiedAt:
                    format: date-time
                    type: string
                name:
                    type: object
                ratingScaleID:
                    format: uuid
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                typeID:
                    format: uuid
                    type: string
            required:
                - createdAt
                - lastModifiedAt
                - repositoryID
                - name
                - ratingScaleID
                - activePeriod
            type: object
        CreateSkillDefinitionType:
            properties:
                code:
                    type: string
                customValues:
                    type: object
                isProposalExecutionFailed:
                    readOnly: true
                    type: boolean
                isProposalResolved:
                    readOnly: true
                    type: boolean
                name:
                    type: object
                proposalExecutionErrorText:
                    readOnly: true
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestID:
                    format: uuid
                    readOnly: true
                    type: string
                subjectID:
                    format: uuid
                    readOnly: true
                    type: string
            required:
                - requestID
                - isProposalResolved
                - isProposalExecutionFailed
                - subjectID
                - repositoryID
                - code
                - name
            type: object
        CreateSkillDefinitionTypeRequest:
            properties:
                code:
                    type: string
                createdAt:
                    format: date-time
                    type: string
                customValues:
                    type: object
                lastModifiedAt:
                    format: date-time
                    type: string
                name:
                    type: object
                repositoryID:
                    format: uuid
                    type: string
            required:
                - createdAt
                - lastModifiedAt
                - repositoryID
                - code
                - name
            type: object
        CreateSkillPlanning:
            properties:
                closeDate:
                    format: date
                    type: string
                customValues:
                    type: object
                deadlineDate:
                    format: date
                    type: string
                employeeID:
                    format: uuid
                    type: string
                fromDate:
                    format: date
                    type: string
                isProposalExecutionFailed:
                    readOnly: true
                    type: boolean
                isProposalResolved:
                    readOnly: true
                    type: boolean
                proposalExecutionErrorText:
                    readOnly: true
                    type: string
                remark:
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestID:
                    format: uuid
                    readOnly: true
                    type: string
                skillDefinitionID:
                    format: uuid
                    type: string
                subjectID:
                    format: uuid
                    readOnly: true
                    type: string
                typeOfProofID:
                    format: uuid
                    type: string
            required:
                - requestID
                - isProposalResolved
                - isProposalExecutionFailed
                - subjectID
                - repositoryID
                - employeeID
                - typeOfProofID
                - fromDate
                - skillDefinitionID
            type: object
        CreateSkillPlanningRequest:
            properties:
                closeDate:
                    format: date
                    type: string
                createdAt:
                    format: date-time
                    type: string
                customValues:
                    type: object
                deadlineDate:
                    format: date
                    type: string
                employeeID:
                    format: uuid
                    type: string
                fromDate:
                    format: date
                    type: string
                lastModifiedAt:
                    format: date-time
                    type: string
                remark:
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                skillDefinitionID:
                    format: uuid
                    type: string
                typeOfProofID:
                    format: uuid
                    type: string
            required:
                - createdAt
                - lastModifiedAt
                - repositoryID
                - employeeID
                - typeOfProofID
                - fromDate
                - skillDefinitionID
            type: object
        CreateSkillResult:
            properties:
                customValues:
                    type: object
                employeeID:
                    format: uuid
                    type: string
                expirationDate:
                    format: date
                    type: string
                isProposalExecutionFailed:
                    readOnly: true
                    type: boolean
                isProposalResolved:
                    readOnly: true
                    type: boolean
                issueDate:
                    format: date
                    type: string
                proposalExecutionErrorText:
                    readOnly: true
                    type: string
                remark:
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestID:
                    format: uuid
                    readOnly: true
                    type: string
                scoreID:
                    format: uuid
                    type: string
                subjectID:
                    format: uuid
                    readOnly: true
                    type: string
                typeOfProofID:
                    format: uuid
                    type: string
            required:
                - requestID
                - isProposalResolved
                - isProposalExecutionFailed
                - subjectID
                - repositoryID
                - employeeID
                - issueDate
                - typeOfProofID
            type: object
        CreateSkillResultRequest:
            properties:
                createdAt:
                    format: date-time
                    type: string
                customValues:
                    type: object
                employeeID:
                    format: uuid
                    type: string
                expirationDate:
                    format: date
                    type: string
                issueDate:
                    format: date
                    type: string
                lastModifiedAt:
                    format: date-time
                    type: string
                remark:
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                scoreID:
                    format: uuid
                    type: string
                typeOfProofID:
                    format: uuid
                    type: string
            required:
                - createdAt
                - lastModifiedAt
                - repositoryID
                - employeeID
                - issueDate
                - typeOfProofID
            type: object
        CreateTypesOfProof:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                code:
                    type: string
                customValues:
                    type: object
                description:
                    type: string
                isProposalExecutionFailed:
                    readOnly: true
                    type: boolean
                isProposalResolved:
                    readOnly: true
                    type: boolean
                name:
                    type: object
                proposalExecutionErrorText:
                    readOnly: true
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestID:
                    format: uuid
                    readOnly: true
                    type: string
                skillDefinitionID:
                    format: uuid
                    type: string
                subjectID:
                    format: uuid
                    readOnly: true
                    type: string
            required:
                - requestID
                - isProposalResolved
                - isProposalExecutionFailed
                - subjectID
                - repositoryID
                - name
                - skillDefinitionID
                - activePeriod
            type: object
        CreateTypesOfProofRequest:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                code:
                    type: string
                createdAt:
                    format: date-time
                    type: string
                customValues:
                    type: object
                description:
                    type: string
                lastModifiedAt:
                    format: date-time
                    type: string
                name:
                    type: object
                repositoryID:
                    format: uuid
                    type: string
                skillDefinitionID:
                    format: uuid
                    type: string
            required:
                - createdAt
                - lastModifiedAt
                - repositoryID
                - name
                - skillDefinitionID
                - activePeriod
            type: object
        CreateUpdateCustomFieldDefinitionRequest:
            properties:
                code:
                    type: string
                entityDefinitionID:
                    format: uuid
                    type: string
                id:
                    format: uuid
                    type: string
                name:
                    type: object
                repositoryID:
                    format: uuid
                    type: string
            required:
                - id
                - repositoryID
                - code
                - name
                - entityDefinitionID
            type: object
        CreateUpdateEmployeeRequest:
            properties:
                birthDate:
                    format: date
                    type: string
                customValues:
                    type: object
                email:
                    format: email
                    type: string
                employeeNumber:
                    type: string
                firstName:
                    type: string
                id:
                    format: uuid
                    type: string
                initials:
                    type: string
                remark:
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                surname:
                    type: string
            required:
                - id
                - repositoryID
                - surname
            type: object
        CreateUpdateEmployeeUnavailabilityRequest:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                employeeID:
                    format: uuid
                    type: string
                id:
                    format: uuid
                    type: string
                reason:
                    type: string
                repositoryID:
                    format: uuid
                    type: string
            required:
                - id
                - repositoryID
                - activePeriod
                - employeeID
            type: object
        CreateUpdateEmploymentContractRequest:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                contractTypeID:
                    format: uuid
                    type: string
                employeeID:
                    format: uuid
                    type: string
                id:
                    format: uuid
                    type: string
                repositoryID:
                    format: uuid
                    type: string
            required:
                - id
                - repositoryID
                - activePeriod
                - employeeID
            type: object
        CreateUpdateEmploymentContractTypeRequest:
            properties:
                code:
                    type: string
                id:
                    format: uuid
                    type: string
                name:
                    type: object
                repositoryID:
                    format: uuid
                    type: string
            required:
                - id
                - repositoryID
                - code
                - name
            type: object
        CreateUpdateEmploymentRelationRequest:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                fromEmployeeID:
                    format: uuid
                    type: string
                id:
                    format: uuid
                    type: string
                relationTypeID:
                    format: uuid
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                toEmployeeID:
                    format: uuid
                    type: string
            required:
                - id
                - repositoryID
                - activePeriod
                - toEmployeeID
                - fromEmployeeID
                - relationTypeID
            type: object
        CreateUpdateEmploymentRelationTypeRequest:
            properties:
                code:
                    type: string
                id:
                    format: uuid
                    type: string
                name:
                    type: object
                repositoryID:
                    format: uuid
                    type: string
            required:
                - id
                - repositoryID
                - code
                - name
            type: object
        CreateUpdateGroupingRequest:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                code:
                    type: string
                customValues:
                    type: object
                definedInGroupingID:
                    format: uuid
                    type: string
                description:
                    type: object
                id:
                    format: uuid
                    type: string
                name:
                    type: object
                repositoryID:
                    format: uuid
                    type: string
                typeID:
                    format: uuid
                    type: string
            required:
                - id
                - repositoryID
                - code
                - name
                - activePeriod
            type: object
        CreateUpdateGroupingTypeRequest:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                code:
                    type: string
                customValues:
                    type: object
                id:
                    format: uuid
                    type: string
                name:
                    type: object
                repositoryID:
                    format: uuid
                    type: string
            required:
                - id
                - repositoryID
                - code
                - name
                - activePeriod
            type: object
        CreateUpdateMonitoringTraceRequest:
            properties:
                executedAt:
                    format: date-time
                    type: string
                id:
                    format: uuid
                    type: string
                remark:
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestedAt:
                    format: date-time
                    type: string
            required:
                - id
                - repositoryID
            type: object
        CreateUpdatePositionAssignmentRequest:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                employeeID:
                    format: uuid
                    type: string
                id:
                    format: uuid
                    type: string
                remark:
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                tagIDs:
                    items:
                        format: uuid
                        type: string
                    type: array
            required:
                - id
                - repositoryID
                - employeeID
                - activePeriod
                - tagIDs
            type: object
        CreateUpdateRatingScaleLevelDescriptorRequest:
            properties:
                description:
                    type: object
                id:
                    format: uuid
                    type: string
                repositoryID:
                    format: uuid
                    type: string
            required:
                - id
                - repositoryID
                - description
            type: object
        CreateUpdateRatingScaleLevelRequest:
            properties:
                code:
                    type: string
                customValues:
                    type: object
                description:
                    type: object
                id:
                    format: uuid
                    type: string
                name:
                    type: object
                repositoryID:
                    format: uuid
                    type: string
            required:
                - id
                - repositoryID
                - code
                - name
            type: object
        CreateUpdateRatingScaleRequest:
            properties:
                code:
                    type: string
                customValues:
                    type: object
                id:
                    format: uuid
                    type: string
                name:
                    type: object
                repositoryID:
                    format: uuid
                    type: string
            required:
                - id
                - repositoryID
                - code
                - name
            type: object
        CreateUpdateSkillDefinitionRequest:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                code:
                    type: string
                customValues:
                    type: object
                description:
                    type: object
                id:
                    format: uuid
                    type: string
                name:
                    type: object
                ratingScaleID:
                    format: uuid
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                typeID:
                    format: uuid
                    type: string
            required:
                - id
                - repositoryID
                - name
                - ratingScaleID
                - activePeriod
            type: object
        CreateUpdateSkillDefinitionTypeRequest:
            properties:
                code:
                    type: string
                customValues:
                    type: object
                id:
                    format: uuid
                    type: string
                name:
                    type: object
                repositoryID:
                    format: uuid
                    type: string
            required:
                - id
                - repositoryID
                - code
                - name
            type: object
        CreateUpdateSkillPlanningRequest:
            properties:
                closeDate:
                    format: date
                    type: string
                customValues:
                    type: object
                deadlineDate:
                    format: date
                    type: string
                employeeID:
                    format: uuid
                    type: string
                fromDate:
                    format: date
                    type: string
                id:
                    format: uuid
                    type: string
                remark:
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                skillDefinitionID:
                    format: uuid
                    type: string
                typeOfProofID:
                    format: uuid
                    type: string
            required:
                - id
                - repositoryID
                - employeeID
                - typeOfProofID
                - fromDate
                - skillDefinitionID
            type: object
        CreateUpdateSkillResultRequest:
            properties:
                customValues:
                    type: object
                employeeID:
                    format: uuid
                    type: string
                expirationDate:
                    format: date
                    type: string
                id:
                    format: uuid
                    type: string
                issueDate:
                    format: date
                    type: string
                remark:
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                scoreID:
                    format: uuid
                    type: string
                typeOfProofID:
                    format: uuid
                    type: string
            required:
                - id
                - repositoryID
                - employeeID
                - issueDate
                - typeOfProofID
            type: object
        CreateUpdateTypesOfProofRequest:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                code:
                    type: string
                customValues:
                    type: object
                description:
                    type: string
                id:
                    format: uuid
                    type: string
                name:
                    type: object
                repositoryID:
                    format: uuid
                    type: string
                skillDefinitionID:
                    format: uuid
                    type: string
            required:
                - id
                - repositoryID
                - name
                - skillDefinitionID
                - activePeriod
            type: object
        CustomFieldDefinition:
            properties:
                code:
                    type: string
                createdAt:
                    format: date-time
                    type: string
                entityDefinitionID:
                    format: uuid
                    type: string
                id:
                    format: uuid
                    type: string
                lastModifiedAt:
                    format: date-time
                    type: string
                name:
                    type: object
                repositoryID:
                    format: uuid
                    type: string
            required:
                - id
                - createdAt
                - lastModifiedAt
                - repositoryID
                - code
                - name
                - entityDefinitionID
            type: object
        DeleteCustomFieldDefinition:
            properties:
                id:
                    format: uuid
                    type: string
                isProposalExecutionFailed:
                    readOnly: true
                    type: boolean
                isProposalResolved:
                    readOnly: true
                    type: boolean
                proposalExecutionErrorText:
                    readOnly: true
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestID:
                    format: uuid
                    readOnly: true
                    type: string
            required:
                - requestID
                - isProposalResolved
                - isProposalExecutionFailed
                - id
                - repositoryID
            type: object
        DeleteEmployee:
            properties:
                id:
                    format: uuid
                    type: string
                isProposalExecutionFailed:
                    readOnly: true
                    type: boolean
                isProposalResolved:
                    readOnly: true
                    type: boolean
                proposalExecutionErrorText:
                    readOnly: true
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestID:
                    format: uuid
                    readOnly: true
                    type: string
            required:
                - requestID
                - isProposalResolved
                - isProposalExecutionFailed
                - id
                - repositoryID
            type: object
        DeleteEmployeeUnavailability:
            properties:
                id:
                    format: uuid
                    type: string
                isProposalExecutionFailed:
                    readOnly: true
                    type: boolean
                isProposalResolved:
                    readOnly: true
                    type: boolean
                proposalExecutionErrorText:
                    readOnly: true
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestID:
                    format: uuid
                    readOnly: true
                    type: string
            required:
                - requestID
                - isProposalResolved
                - isProposalExecutionFailed
                - id
                - repositoryID
            type: object
        DeleteEmploymentContract:
            properties:
                id:
                    format: uuid
                    type: string
                isProposalExecutionFailed:
                    readOnly: true
                    type: boolean
                isProposalResolved:
                    readOnly: true
                    type: boolean
                proposalExecutionErrorText:
                    readOnly: true
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestID:
                    format: uuid
                    readOnly: true
                    type: string
            required:
                - requestID
                - isProposalResolved
                - isProposalExecutionFailed
                - id
                - repositoryID
            type: object
        DeleteEmploymentContractType:
            properties:
                id:
                    format: uuid
                    type: string
                isProposalExecutionFailed:
                    readOnly: true
                    type: boolean
                isProposalResolved:
                    readOnly: true
                    type: boolean
                proposalExecutionErrorText:
                    readOnly: true
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestID:
                    format: uuid
                    readOnly: true
                    type: string
            required:
                - requestID
                - isProposalResolved
                - isProposalExecutionFailed
                - id
                - repositoryID
            type: object
        DeleteEmploymentRelation:
            properties:
                id:
                    format: uuid
                    type: string
                isProposalExecutionFailed:
                    readOnly: true
                    type: boolean
                isProposalResolved:
                    readOnly: true
                    type: boolean
                proposalExecutionErrorText:
                    readOnly: true
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestID:
                    format: uuid
                    readOnly: true
                    type: string
            required:
                - requestID
                - isProposalResolved
                - isProposalExecutionFailed
                - id
                - repositoryID
            type: object
        DeleteEmploymentRelationType:
            properties:
                id:
                    format: uuid
                    type: string
                isProposalExecutionFailed:
                    readOnly: true
                    type: boolean
                isProposalResolved:
                    readOnly: true
                    type: boolean
                proposalExecutionErrorText:
                    readOnly: true
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestID:
                    format: uuid
                    readOnly: true
                    type: string
            required:
                - requestID
                - isProposalResolved
                - isProposalExecutionFailed
                - id
                - repositoryID
            type: object
        DeleteGrouping:
            properties:
                id:
                    format: uuid
                    type: string
                isProposalExecutionFailed:
                    readOnly: true
                    type: boolean
                isProposalResolved:
                    readOnly: true
                    type: boolean
                proposalExecutionErrorText:
                    readOnly: true
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestID:
                    format: uuid
                    readOnly: true
                    type: string
            required:
                - requestID
                - isProposalResolved
                - isProposalExecutionFailed
                - id
                - repositoryID
            type: object
        DeleteGroupingType:
            properties:
                id:
                    format: uuid
                    type: string
                isProposalExecutionFailed:
                    readOnly: true
                    type: boolean
                isProposalResolved:
                    readOnly: true
                    type: boolean
                proposalExecutionErrorText:
                    readOnly: true
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestID:
                    format: uuid
                    readOnly: true
                    type: string
            required:
                - requestID
                - isProposalResolved
                - isProposalExecutionFailed
                - id
                - repositoryID
            type: object
        DeleteMonitoringTrace:
            properties:
                id:
                    format: uuid
                    type: string
                isProposalExecutionFailed:
                    readOnly: true
                    type: boolean
                isProposalResolved:
                    readOnly: true
                    type: boolean
                proposalExecutionErrorText:
                    readOnly: true
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestID:
                    format: uuid
                    readOnly: true
                    type: string
            required:
                - requestID
                - isProposalResolved
                - isProposalExecutionFailed
                - id
                - repositoryID
            type: object
        DeletePositionAssignment:
            properties:
                id:
                    format: uuid
                    type: string
                isProposalExecutionFailed:
                    readOnly: true
                    type: boolean
                isProposalResolved:
                    readOnly: true
                    type: boolean
                proposalExecutionErrorText:
                    readOnly: true
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestID:
                    format: uuid
                    readOnly: true
                    type: string
            required:
                - requestID
                - isProposalResolved
                - isProposalExecutionFailed
                - id
                - repositoryID
            type: object
        DeleteRatingScale:
            properties:
                id:
                    format: uuid
                    type: string
                isProposalExecutionFailed:
                    readOnly: true
                    type: boolean
                isProposalResolved:
                    readOnly: true
                    type: boolean
                proposalExecutionErrorText:
                    readOnly: true
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestID:
                    format: uuid
                    readOnly: true
                    type: string
            required:
                - requestID
                - isProposalResolved
                - isProposalExecutionFailed
                - id
                - repositoryID
            type: object
        DeleteRatingScaleLevel:
            properties:
                id:
                    format: uuid
                    type: string
                isProposalExecutionFailed:
                    readOnly: true
                    type: boolean
                isProposalResolved:
                    readOnly: true
                    type: boolean
                proposalExecutionErrorText:
                    readOnly: true
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestID:
                    format: uuid
                    readOnly: true
                    type: string
            required:
                - requestID
                - isProposalResolved
                - isProposalExecutionFailed
                - id
                - repositoryID
            type: object
        DeleteRatingScaleLevelDescriptor:
            properties:
                id:
                    format: uuid
                    type: string
                isProposalExecutionFailed:
                    readOnly: true
                    type: boolean
                isProposalResolved:
                    readOnly: true
                    type: boolean
                proposalExecutionErrorText:
                    readOnly: true
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestID:
                    format: uuid
                    readOnly: true
                    type: string
            required:
                - requestID
                - isProposalResolved
                - isProposalExecutionFailed
                - id
                - repositoryID
            type: object
        DeleteSkillDefinition:
            properties:
                id:
                    format: uuid
                    type: string
                isProposalExecutionFailed:
                    readOnly: true
                    type: boolean
                isProposalResolved:
                    readOnly: true
                    type: boolean
                proposalExecutionErrorText:
                    readOnly: true
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestID:
                    format: uuid
                    readOnly: true
                    type: string
            required:
                - requestID
                - isProposalResolved
                - isProposalExecutionFailed
                - id
                - repositoryID
            type: object
        DeleteSkillDefinitionType:
            properties:
                id:
                    format: uuid
                    type: string
                isProposalExecutionFailed:
                    readOnly: true
                    type: boolean
                isProposalResolved:
                    readOnly: true
                    type: boolean
                proposalExecutionErrorText:
                    readOnly: true
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestID:
                    format: uuid
                    readOnly: true
                    type: string
            required:
                - requestID
                - isProposalResolved
                - isProposalExecutionFailed
                - id
                - repositoryID
            type: object
        DeleteSkillPlanning:
            properties:
                id:
                    format: uuid
                    type: string
                isProposalExecutionFailed:
                    readOnly: true
                    type: boolean
                isProposalResolved:
                    readOnly: true
                    type: boolean
                proposalExecutionErrorText:
                    readOnly: true
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestID:
                    format: uuid
                    readOnly: true
                    type: string
            required:
                - requestID
                - isProposalResolved
                - isProposalExecutionFailed
                - id
                - repositoryID
            type: object
        DeleteSkillResult:
            properties:
                id:
                    format: uuid
                    type: string
                isProposalExecutionFailed:
                    readOnly: true
                    type: boolean
                isProposalResolved:
                    readOnly: true
                    type: boolean
                proposalExecutionErrorText:
                    readOnly: true
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestID:
                    format: uuid
                    readOnly: true
                    type: string
            required:
                - requestID
                - isProposalResolved
                - isProposalExecutionFailed
                - id
                - repositoryID
            type: object
        DeleteTypesOfProof:
            properties:
                id:
                    format: uuid
                    type: string
                isProposalExecutionFailed:
                    readOnly: true
                    type: boolean
                isProposalResolved:
                    readOnly: true
                    type: boolean
                proposalExecutionErrorText:
                    readOnly: true
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestID:
                    format: uuid
                    readOnly: true
                    type: string
            required:
                - requestID
                - isProposalResolved
                - isProposalExecutionFailed
                - id
                - repositoryID
            type: object
        Employee:
            properties:
                birthDate:
                    format: date
                    type: string
                createdAt:
                    format: date-time
                    type: string
                customValues:
                    type: object
                email:
                    format: email
                    type: string
                employeeNumber:
                    type: string
                firstName:
                    type: string
                id:
                    format: uuid
                    type: string
                initials:
                    type: string
                lastModifiedAt:
                    format: date-time
                    type: string
                remark:
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                surname:
                    type: string
            required:
                - id
                - createdAt
                - lastModifiedAt
                - repositoryID
                - surname
            type: object
        EmployeeUnavailability:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                createdAt:
                    format: date-time
                    type: string
                employeeID:
                    format: uuid
                    type: string
                id:
                    format: uuid
                    type: string
                lastModifiedAt:
                    format: date-time
                    type: string
                reason:
                    type: string
                repositoryID:
                    format: uuid
                    type: string
            required:
                - id
                - createdAt
                - lastModifiedAt
                - repositoryID
                - activePeriod
                - employeeID
            type: object
        EmploymentContract:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                contractTypeID:
                    format: uuid
                    type: string
                createdAt:
                    format: date-time
                    type: string
                employeeID:
                    format: uuid
                    type: string
                id:
                    format: uuid
                    type: string
                lastModifiedAt:
                    format: date-time
                    type: string
                repositoryID:
                    format: uuid
                    type: string
            required:
                - id
                - createdAt
                - lastModifiedAt
                - repositoryID
                - activePeriod
                - employeeID
            type: object
        EmploymentContractType:
            properties:
                code:
                    type: string
                createdAt:
                    format: date-time
                    type: string
                id:
                    format: uuid
                    type: string
                lastModifiedAt:
                    format: date-time
                    type: string
                name:
                    type: object
                repositoryID:
                    format: uuid
                    type: string
            required:
                - id
                - createdAt
                - lastModifiedAt
                - repositoryID
                - code
                - name
            type: object
        EmploymentRelation:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                createdAt:
                    format: date-time
                    type: string
                fromEmployeeID:
                    format: uuid
                    type: string
                id:
                    format: uuid
                    type: string
                lastModifiedAt:
                    format: date-time
                    type: string
                relationTypeID:
                    format: uuid
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                toEmployeeID:
                    format: uuid
                    type: string
            required:
                - id
                - createdAt
                - lastModifiedAt
                - repositoryID
                - activePeriod
                - toEmployeeID
                - fromEmployeeID
                - relationTypeID
            type: object
        EmploymentRelationType:
            properties:
                code:
                    type: string
                createdAt:
                    format: date-time
                    type: string
                id:
                    format: uuid
                    type: string
                lastModifiedAt:
                    format: date-time
                    type: string
                name:
                    type: object
                repositoryID:
                    format: uuid
                    type: string
            required:
                - id
                - createdAt
                - lastModifiedAt
                - repositoryID
                - code
                - name
            type: object
        EntityDefinition:
            properties:
                code:
                    type: string
                id:
                    format: uuid
                    type: string
                name:
                    type: object
            required:
                - id
                - code
                - name
            type: object
        Error:
            properties:
                code:
                    description: Machine-readable error code
                    enum:
                        - INVALID_INPUT
                        - MISSING_AUTH
                        - INVALID_TOKEN
                        - NOT_FOUND
                        - INTERNAL_ERROR
                        - RATE_LIMIT_EXCEEDED
                        - PROPOSAL_CONFLICT
                        - APPROVAL_REQUIRED
                    type: string
                details:
                    additionalProperties: true
                    description: Additional error details
                    type: object
                message:
                    description: Human-readable error message
                    type: string
                requestId:
                    description: Unique request identifier for support
                    type: string
            required:
                - code
                - message
            type: object
        Grouping:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                code:
                    type: string
                createdAt:
                    format: date-time
                    type: string
                customValues:
                    type: object
                definedInGroupingID:
                    format: uuid
                    type: string
                description:
                    type: object
                id:
                    format: uuid
                    type: string
                lastModifiedAt:
                    format: date-time
                    type: string
                name:
                    type: object
                repositoryID:
                    format: uuid
                    type: string
                typeID:
                    format: uuid
                    type: string
            required:
                - id
                - createdAt
                - lastModifiedAt
                - repositoryID
                - code
                - name
                - activePeriod
            type: object
        GroupingType:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                code:
                    type: string
                createdAt:
                    format: date-time
                    type: string
                customValues:
                    type: object
                id:
                    format: uuid
                    type: string
                lastModifiedAt:
                    format: date-time
                    type: string
                name:
                    type: object
                repositoryID:
                    format: uuid
                    type: string
            required:
                - id
                - createdAt
                - lastModifiedAt
                - repositoryID
                - code
                - name
                - activePeriod
            type: object
        ListCreateCustomFieldDefinitionResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/CreateCustomFieldDefinition'
                    type: array
                total:
                    description: Total number of items
                    type: integer
            required:
                - data
                - total
            type: object
        ListCreateEmployeeResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/CreateEmployee'
                    type: array
                total:
                    description: Total number of items
                    type: integer
            required:
                - data
                - total
            type: object
        ListCreateEmployeeUnavailabilityResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/CreateEmployeeUnavailability'
                    type: array
                total:
                    description: Total number of items
                    type: integer
            required:
                - data
                - total
            type: object
        ListCreateEmploymentContractResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/CreateEmploymentContract'
                    type: array
                total:
                    description: Total number of items
                    type: integer
            required:
                - data
                - total
            type: object
        ListCreateEmploymentContractTypeResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/CreateEmploymentContractType'
                    type: array
                total:
                    description: Total number of items
                    type: integer
            required:
                - data
                - total
            type: object
        ListCreateEmploymentRelationResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/CreateEmploymentRelation'
                    type: array
                total:
                    description: Total number of items
                    type: integer
            required:
                - data
                - total
            type: object
        ListCreateEmploymentRelationTypeResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/CreateEmploymentRelationType'
                    type: array
                total:
                    description: Total number of items
                    type: integer
            required:
                - data
                - total
            type: object
        ListCreateGroupingResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/CreateGrouping'
                    type: array
                total:
                    description: Total number of items
                    type: integer
            required:
                - data
                - total
            type: object
        ListCreateGroupingTypeResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/CreateGroupingType'
                    type: array
                total:
                    description: Total number of items
                    type: integer
            required:
                - data
                - total
            type: object
        ListCreateMonitoringTraceResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/CreateMonitoringTrace'
                    type: array
                total:
                    description: Total number of items
                    type: integer
            required:
                - data
                - total
            type: object
        ListCreatePositionAssignmentResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/CreatePositionAssignment'
                    type: array
                total:
                    description: Total number of items
                    type: integer
            required:
                - data
                - total
            type: object
        ListCreateRatingScaleLevelDescriptorResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/CreateRatingScaleLevelDescriptor'
                    type: array
                total:
                    description: Total number of items
                    type: integer
            required:
                - data
                - total
            type: object
        ListCreateRatingScaleLevelResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/CreateRatingScaleLevel'
                    type: array
                total:
                    description: Total number of items
                    type: integer
            required:
                - data
                - total
            type: object
        ListCreateRatingScaleResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/CreateRatingScale'
                    type: array
                total:
                    description: Total number of items
                    type: integer
            required:
                - data
                - total
            type: object
        ListCreateSkillDefinitionResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/CreateSkillDefinition'
                    type: array
                total:
                    description: Total number of items
                    type: integer
            required:
                - data
                - total
            type: object
        ListCreateSkillDefinitionTypeResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/CreateSkillDefinitionType'
                    type: array
                total:
                    description: Total number of items
                    type: integer
            required:
                - data
                - total
            type: object
        ListCreateSkillPlanningResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/CreateSkillPlanning'
                    type: array
                total:
                    description: Total number of items
                    type: integer
            required:
                - data
                - total
            type: object
        ListCreateSkillResultResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/CreateSkillResult'
                    type: array
                total:
                    description: Total number of items
                    type: integer
            required:
                - data
                - total
            type: object
        ListCreateTypesOfProofResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/CreateTypesOfProof'
                    type: array
                total:
                    description: Total number of items
                    type: integer
            required:
                - data
                - total
            type: object
        ListCustomFieldDefinitionResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/CustomFieldDefinition'
                    type: array
                total:
                    description: Total number of items
                    type: integer
            required:
                - data
                - total
            type: object
        ListDeleteCustomFieldDefinitionResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/DeleteCustomFieldDefinition'
                    type: array
                total:
                    description: Total number of items
                    type: integer
            required:
                - data
                - total
            type: object
        ListDeleteEmployeeResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/DeleteEmployee'
                    type: array
                total:
                    description: Total number of items
                    type: integer
            required:
                - data
                - total
            type: object
        ListDeleteEmployeeUnavailabilityResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/DeleteEmployeeUnavailability'
                    type: array
                total:
                    description: Total number of items
                    type: integer
            required:
                - data
                - total
            type: object
        ListDeleteEmploymentContractResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/DeleteEmploymentContract'
                    type: array
                total:
                    description: Total number of items
                    type: integer
            required:
                - data
                - total
            type: object
        ListDeleteEmploymentContractTypeResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/DeleteEmploymentContractType'
                    type: array
                total:
                    description: Total number of items
                    type: integer
            required:
                - data
                - total
            type: object
        ListDeleteEmploymentRelationResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/DeleteEmploymentRelation'
                    type: array
                total:
                    description: Total number of items
                    type: integer
            required:
                - data
                - total
            type: object
        ListDeleteEmploymentRelationTypeResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/DeleteEmploymentRelationType'
                    type: array
                total:
                    description: Total number of items
                    type: integer
            required:
                - data
                - total
            type: object
        ListDeleteGroupingResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/DeleteGrouping'
                    type: array
                total:
                    description: Total number of items
                    type: integer
            required:
                - data
                - total
            type: object
        ListDeleteGroupingTypeResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/DeleteGroupingType'
                    type: array
                total:
                    description: Total number of items
                    type: integer
            required:
                - data
                - total
            type: object
        ListDeleteMonitoringTraceResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/DeleteMonitoringTrace'
                    type: array
                total:
                    description: Total number of items
                    type: integer
            required:
                - data
                - total
            type: object
        ListDeletePositionAssignmentResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/DeletePositionAssignment'
                    type: array
                total:
                    description: Total number of items
                    type: integer
            required:
                - data
                - total
            type: object
        ListDeleteRatingScaleLevelDescriptorResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/DeleteRatingScaleLevelDescriptor'
                    type: array
                total:
                    description: Total number of items
                    type: integer
            required:
                - data
                - total
            type: object
        ListDeleteRatingScaleLevelResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/DeleteRatingScaleLevel'
                    type: array
                total:
                    description: Total number of items
                    type: integer
            required:
                - data
                - total
            type: object
        ListDeleteRatingScaleResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/DeleteRatingScale'
                    type: array
                total:
                    description: Total number of items
                    type: integer
            required:
                - data
                - total
            type: object
        ListDeleteSkillDefinitionResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/DeleteSkillDefinition'
                    type: array
                total:
                    description: Total number of items
                    type: integer
            required:
                - data
                - total
            type: object
        ListDeleteSkillDefinitionTypeResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/DeleteSkillDefinitionType'
                    type: array
                total:
                    description: Total number of items
                    type: integer
            required:
                - data
                - total
            type: object
        ListDeleteSkillPlanningResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/DeleteSkillPlanning'
                    type: array
                total:
                    description: Total number of items
                    type: integer
            required:
                - data
                - total
            type: object
        ListDeleteSkillResultResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/DeleteSkillResult'
                    type: array
                total:
                    description: Total number of items
                    type: integer
            required:
                - data
                - total
            type: object
        ListDeleteTypesOfProofResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/DeleteTypesOfProof'
                    type: array
                total:
                    description: Total number of items
                    type: integer
            required:
                - data
                - total
            type: object
        ListEmployeeResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/Employee'
                    type: array
                total:
                    description: Total number of items
                    type: integer
            required:
                - data
                - total
            type: object
        ListEmployeeUnavailabilityResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/EmployeeUnavailability'
                    type: array
                total:
                    description: Total number of items
                    type: integer
            required:
                - data
                - total
            type: object
        ListEmploymentContractResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/EmploymentContract'
                    type: array
                total:
                    description: Total number of items
                    type: integer
            required:
                - data
                - total
            type: object
        ListEmploymentContractTypeResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/EmploymentContractType'
                    type: array
                total:
                    description: Total number of items
                    type: integer
            required:
                - data
                - total
            type: object
        ListEmploymentRelationResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/EmploymentRelation'
                    type: array
                total:
                    description: Total number of items
                    type: integer
            required:
                - data
                - total
            type: object
        ListEmploymentRelationTypeResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/EmploymentRelationType'
                    type: array
                total:
                    description: Total number of items
                    type: integer
            required:
                - data
                - total
            type: object
        ListEntityDefinitionResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/EntityDefinition'
                    type: array
                total:
                    description: Total number of items
                    type: integer
            required:
                - data
                - total
            type: object
        ListGroupingResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/Grouping'
                    type: array
                total:
                    description: Total number of items
                    type: integer
            required:
                - data
                - total
            type: object
        ListGroupingTypeResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/GroupingType'
                    type: array
                total:
                    description: Total number of items
                    type: integer
            required:
                - data
                - total
            type: object
        ListMonitoringTraceResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/MonitoringTrace'
                    type: array
                total:
                    description: Total number of items
                    type: integer
            required:
                - data
                - total
            type: object
        ListPositionAssignmentResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/PositionAssignment'
                    type: array
                total:
                    description: Total number of items
                    type: integer
            required:
                - data
                - total
            type: object
        ListRatingScaleLevelDescriptorResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/RatingScaleLevelDescriptor'
                    type: array
                total:
                    description: Total number of items
                    type: integer
            required:
                - data
                - total
            type: object
        ListRatingScaleLevelResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/RatingScaleLevel'
                    type: array
                total:
                    description: Total number of items
                    type: integer
            required:
                - data
                - total
            type: object
        ListRatingScaleResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/RatingScale'
                    type: array
                total:
                    description: Total number of items
                    type: integer
            required:
                - data
                - total
            type: object
        ListRepositoryResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/Repository'
                    type: array
                total:
                    description: Total number of items
                    type: integer
            required:
                - data
                - total
            type: object
        ListSkillDefinitionResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/SkillDefinition'
                    type: array
                total:
                    description: Total number of items
                    type: integer
            required:
                - data
                - total
            type: object
        ListSkillDefinitionTypeResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/SkillDefinitionType'
                    type: array
                total:
                    description: Total number of items
                    type: integer
            required:
                - data
                - total
            type: object
        ListSkillPlanningResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/SkillPlanning'
                    type: array
                total:
                    description: Total number of items
                    type: integer
            required:
                - data
                - total
            type: object
        ListSkillResultResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/SkillResult'
                    type: array
                total:
                    description: Total number of items
                    type: integer
            required:
                - data
                - total
            type: object
        ListTypesOfProofResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/TypesOfProof'
                    type: array
                total:
                    description: Total number of items
                    type: integer
            required:
                - data
                - total
            type: object
        ListUpdateCustomFieldDefinitionResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/UpdateCustomFieldDefinition'
                    type: array
                total:
                    description: Total number of items
                    type: integer
            required:
                - data
                - total
            type: object
        ListUpdateEmployeeResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/UpdateEmployee'
                    type: array
                total:
                    description: Total number of items
                    type: integer
            required:
                - data
                - total
            type: object
        ListUpdateEmployeeUnavailabilityResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/UpdateEmployeeUnavailability'
                    type: array
                total:
                    description: Total number of items
                    type: integer
            required:
                - data
                - total
            type: object
        ListUpdateEmploymentContractResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/UpdateEmploymentContract'
                    type: array
                total:
                    description: Total number of items
                    type: integer
            required:
                - data
                - total
            type: object
        ListUpdateEmploymentContractTypeResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/UpdateEmploymentContractType'
                    type: array
                total:
                    description: Total number of items
                    type: integer
            required:
                - data
                - total
            type: object
        ListUpdateEmploymentRelationResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/UpdateEmploymentRelation'
                    type: array
                total:
                    description: Total number of items
                    type: integer
            required:
                - data
                - total
            type: object
        ListUpdateEmploymentRelationTypeResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/UpdateEmploymentRelationType'
                    type: array
                total:
                    description: Total number of items
                    type: integer
            required:
                - data
                - total
            type: object
        ListUpdateGroupingResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/UpdateGrouping'
                    type: array
                total:
                    description: Total number of items
                    type: integer
            required:
                - data
                - total
            type: object
        ListUpdateGroupingTypeResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/UpdateGroupingType'
                    type: array
                total:
                    description: Total number of items
                    type: integer
            required:
                - data
                - total
            type: object
        ListUpdateMonitoringTraceResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/UpdateMonitoringTrace'
                    type: array
                total:
                    description: Total number of items
                    type: integer
            required:
                - data
                - total
            type: object
        ListUpdatePositionAssignmentResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/UpdatePositionAssignment'
                    type: array
                total:
                    description: Total number of items
                    type: integer
            required:
                - data
                - total
            type: object
        ListUpdateRatingScaleLevelDescriptorResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/UpdateRatingScaleLevelDescriptor'
                    type: array
                total:
                    description: Total number of items
                    type: integer
            required:
                - data
                - total
            type: object
        ListUpdateRatingScaleLevelResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/UpdateRatingScaleLevel'
                    type: array
                total:
                    description: Total number of items
                    type: integer
            required:
                - data
                - total
            type: object
        ListUpdateRatingScaleResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/UpdateRatingScale'
                    type: array
                total:
                    description: Total number of items
                    type: integer
            required:
                - data
                - total
            type: object
        ListUpdateSkillDefinitionResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/UpdateSkillDefinition'
                    type: array
                total:
                    description: Total number of items
                    type: integer
            required:
                - data
                - total
            type: object
        ListUpdateSkillDefinitionTypeResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/UpdateSkillDefinitionType'
                    type: array
                total:
                    description: Total number of items
                    type: integer
            required:
                - data
                - total
            type: object
        ListUpdateSkillPlanningResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/UpdateSkillPlanning'
                    type: array
                total:
                    description: Total number of items
                    type: integer
            required:
                - data
                - total
            type: object
        ListUpdateSkillResultResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/UpdateSkillResult'
                    type: array
                total:
                    description: Total number of items
                    type: integer
            required:
                - data
                - total
            type: object
        ListUpdateTypesOfProofResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/UpdateTypesOfProof'
                    type: array
                total:
                    description: Total number of items
                    type: integer
            required:
                - data
                - total
            type: object
        MonitoringTrace:
            properties:
                createdAt:
                    format: date-time
                    type: string
                executedAt:
                    format: date-time
                    type: string
                id:
                    format: uuid
                    type: string
                lastModifiedAt:
                    format: date-time
                    type: string
                remark:
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestedAt:
                    format: date-time
                    type: string
            required:
                - id
                - createdAt
                - lastModifiedAt
                - repositoryID
            type: object
        PaginationInfo:
            properties:
                cursor:
                    description: Current cursor position
                    type: string
                hasNext:
                    description: Whether there are more pages
                    type: boolean
                hasPrevious:
                    description: Whether there are previous pages
                    type: boolean
                limit:
                    description: Maximum number of items returned
                    type: integer
                nextCursor:
                    description: Cursor for the next page (if available)
                    type: string
                total:
                    description: Total number of items available
                    type: integer
            required:
                - total
                - limit
            type: object
        PositionAssignment:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                createdAt:
                    format: date-time
                    type: string
                employeeID:
                    format: uuid
                    type: string
                id:
                    format: uuid
                    type: string
                lastModifiedAt:
                    format: date-time
                    type: string
                remark:
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                tagIDs:
                    items:
                        format: uuid
                        type: string
                    type: array
            required:
                - id
                - createdAt
                - lastModifiedAt
                - repositoryID
                - employeeID
                - activePeriod
                - tagIDs
            type: object
        RatingScale:
            properties:
                code:
                    type: string
                createdAt:
                    format: date-time
                    type: string
                customValues:
                    type: object
                id:
                    format: uuid
                    type: string
                lastModifiedAt:
                    format: date-time
                    type: string
                name:
                    type: object
                repositoryID:
                    format: uuid
                    type: string
            required:
                - id
                - createdAt
                - lastModifiedAt
                - repositoryID
                - code
                - name
            type: object
        RatingScaleLevel:
            properties:
                code:
                    type: string
                createdAt:
                    format: date-time
                    type: string
                customValues:
                    type: object
                description:
                    type: object
                id:
                    format: uuid
                    type: string
                lastModifiedAt:
                    format: date-time
                    type: string
                name:
                    type: object
                ratingScaleID:
                    format: uuid
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                scoreOrder:
                    format: int32
                    type: integer
            required:
                - id
                - createdAt
                - lastModifiedAt
                - repositoryID
                - ratingScaleID
                - scoreOrder
                - code
                - name
            type: object
        RatingScaleLevelDescriptor:
            properties:
                createdAt:
                    format: date-time
                    type: string
                description:
                    type: object
                id:
                    format: uuid
                    type: string
                lastModifiedAt:
                    format: date-time
                    type: string
                ratingScaleLevelID:
                    format: uuid
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                skillDefinitionID:
                    format: uuid
                    type: string
            required:
                - id
                - createdAt
                - lastModifiedAt
                - repositoryID
                - ratingScaleLevelID
                - skillDefinitionID
                - description
            type: object
        Repository:
            properties:
                code:
                    type: string
                id:
                    format: uuid
                    type: string
            required:
                - id
                - code
            type: object
        SkillDefinition:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                code:
                    type: string
                createdAt:
                    format: date-time
                    type: string
                customValues:
                    type: object
                description:
                    type: object
                id:
                    format: uuid
                    type: string
                lastModifiedAt:
                    format: date-time
                    type: string
                name:
                    type: object
                ratingScaleID:
                    format: uuid
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                typeID:
                    format: uuid
                    type: string
            required:
                - id
                - createdAt
                - lastModifiedAt
                - repositoryID
                - name
                - ratingScaleID
                - activePeriod
            type: object
        SkillDefinitionType:
            properties:
                code:
                    type: string
                createdAt:
                    format: date-time
                    type: string
                customValues:
                    type: object
                id:
                    format: uuid
                    type: string
                lastModifiedAt:
                    format: date-time
                    type: string
                name:
                    type: object
                repositoryID:
                    format: uuid
                    type: string
            required:
                - id
                - createdAt
                - lastModifiedAt
                - repositoryID
                - code
                - name
            type: object
        SkillPlanning:
            properties:
                closeDate:
                    format: date
                    type: string
                createdAt:
                    format: date-time
                    type: string
                customValues:
                    type: object
                deadlineDate:
                    format: date
                    type: string
                employeeID:
                    format: uuid
                    type: string
                fromDate:
                    format: date
                    type: string
                id:
                    format: uuid
                    type: string
                lastModifiedAt:
                    format: date-time
                    type: string
                remark:
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                skillDefinitionID:
                    format: uuid
                    type: string
                typeOfProofID:
                    format: uuid
                    type: string
            required:
                - id
                - createdAt
                - lastModifiedAt
                - repositoryID
                - employeeID
                - typeOfProofID
                - fromDate
                - skillDefinitionID
            type: object
        SkillResult:
            properties:
                createdAt:
                    format: date-time
                    type: string
                customValues:
                    type: object
                employeeID:
                    format: uuid
                    type: string
                expirationDate:
                    format: date
                    type: string
                id:
                    format: uuid
                    type: string
                issueDate:
                    format: date
                    type: string
                lastModifiedAt:
                    format: date-time
                    type: string
                remark:
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                scoreID:
                    format: uuid
                    type: string
                typeOfProofID:
                    format: uuid
                    type: string
            required:
                - id
                - createdAt
                - lastModifiedAt
                - repositoryID
                - employeeID
                - issueDate
                - typeOfProofID
            type: object
        TypesOfProof:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                code:
                    type: string
                createdAt:
                    format: date-time
                    type: string
                customValues:
                    type: object
                description:
                    type: string
                id:
                    format: uuid
                    type: string
                lastModifiedAt:
                    format: date-time
                    type: string
                name:
                    type: object
                repositoryID:
                    format: uuid
                    type: string
                skillDefinitionID:
                    format: uuid
                    type: string
            required:
                - id
                - createdAt
                - lastModifiedAt
                - repositoryID
                - name
                - skillDefinitionID
                - activePeriod
            type: object
        UpdateCreateCustomFieldDefinitionRequest:
            properties:
                code:
                    type: string
                entityDefinitionID:
                    format: uuid
                    type: string
                name:
                    type: object
                repositoryID:
                    format: uuid
                    type: string
            type: object
        UpdateCreateEmployeeRequest:
            properties:
                birthDate:
                    format: date
                    type: string
                customValues:
                    type: object
                email:
                    format: email
                    type: string
                employeeNumber:
                    type: string
                firstName:
                    type: string
                initials:
                    type: string
                remark:
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                surname:
                    type: string
            type: object
        UpdateCreateEmployeeUnavailabilityRequest:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                employeeID:
                    format: uuid
                    type: string
                reason:
                    type: string
                repositoryID:
                    format: uuid
                    type: string
            type: object
        UpdateCreateEmploymentContractRequest:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                contractTypeID:
                    format: uuid
                    type: string
                employeeID:
                    format: uuid
                    type: string
                repositoryID:
                    format: uuid
                    type: string
            type: object
        UpdateCreateEmploymentContractTypeRequest:
            properties:
                code:
                    type: string
                name:
                    type: object
                repositoryID:
                    format: uuid
                    type: string
            type: object
        UpdateCreateEmploymentRelationRequest:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                fromEmployeeID:
                    format: uuid
                    type: string
                relationTypeID:
                    format: uuid
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                toEmployeeID:
                    format: uuid
                    type: string
            type: object
        UpdateCreateEmploymentRelationTypeRequest:
            properties:
                code:
                    type: string
                name:
                    type: object
                repositoryID:
                    format: uuid
                    type: string
            type: object
        UpdateCreateGroupingRequest:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                code:
                    type: string
                customValues:
                    type: object
                definedInGroupingID:
                    format: uuid
                    type: string
                description:
                    type: object
                name:
                    type: object
                repositoryID:
                    format: uuid
                    type: string
                typeID:
                    format: uuid
                    type: string
            type: object
        UpdateCreateGroupingTypeRequest:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                code:
                    type: string
                customValues:
                    type: object
                name:
                    type: object
                repositoryID:
                    format: uuid
                    type: string
            type: object
        UpdateCreateMonitoringTraceRequest:
            properties:
                executedAt:
                    format: date-time
                    type: string
                remark:
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestedAt:
                    format: date-time
                    type: string
            type: object
        UpdateCreatePositionAssignmentRequest:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                employeeID:
                    format: uuid
                    type: string
                remark:
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                tagIDs:
                    items:
                        format: uuid
                        type: string
                    type: array
            type: object
        UpdateCreateRatingScaleLevelDescriptorRequest:
            properties:
                description:
                    type: object
                ratingScaleLevelID:
                    format: uuid
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                skillDefinitionID:
                    format: uuid
                    type: string
            type: object
        UpdateCreateRatingScaleLevelRequest:
            properties:
                code:
                    type: string
                customValues:
                    type: object
                description:
                    type: object
                name:
                    type: object
                ratingScaleID:
                    format: uuid
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                scoreOrder:
                    format: int32
                    type: integer
            type: object
        UpdateCreateRatingScaleRequest:
            properties:
                code:
                    type: string
                customValues:
                    type: object
                name:
                    type: object
                repositoryID:
                    format: uuid
                    type: string
            type: object
        UpdateCreateSkillDefinitionRequest:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                code:
                    type: string
                customValues:
                    type: object
                description:
                    type: object
                name:
                    type: object
                ratingScaleID:
                    format: uuid
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                typeID:
                    format: uuid
                    type: string
            type: object
        UpdateCreateSkillDefinitionTypeRequest:
            properties:
                code:
                    type: string
                customValues:
                    type: object
                name:
                    type: object
                repositoryID:
                    format: uuid
                    type: string
            type: object
        UpdateCreateSkillPlanningRequest:
            properties:
                closeDate:
                    format: date
                    type: string
                customValues:
                    type: object
                deadlineDate:
                    format: date
                    type: string
                employeeID:
                    format: uuid
                    type: string
                fromDate:
                    format: date
                    type: string
                remark:
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                skillDefinitionID:
                    format: uuid
                    type: string
                typeOfProofID:
                    format: uuid
                    type: string
            type: object
        UpdateCreateSkillResultRequest:
            properties:
                customValues:
                    type: object
                employeeID:
                    format: uuid
                    type: string
                expirationDate:
                    format: date
                    type: string
                issueDate:
                    format: date
                    type: string
                remark:
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                scoreID:
                    format: uuid
                    type: string
                typeOfProofID:
                    format: uuid
                    type: string
            type: object
        UpdateCreateTypesOfProofRequest:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                code:
                    type: string
                customValues:
                    type: object
                description:
                    type: string
                name:
                    type: object
                repositoryID:
                    format: uuid
                    type: string
                skillDefinitionID:
                    format: uuid
                    type: string
            type: object
        UpdateCustomFieldDefinition:
            properties:
                code:
                    type: string
                entityDefinitionID:
                    format: uuid
                    type: string
                id:
                    format: uuid
                    type: string
                isProposalExecutionFailed:
                    readOnly: true
                    type: boolean
                isProposalResolved:
                    readOnly: true
                    type: boolean
                name:
                    type: object
                proposalExecutionErrorText:
                    readOnly: true
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestID:
                    format: uuid
                    readOnly: true
                    type: string
            required:
                - requestID
                - isProposalResolved
                - isProposalExecutionFailed
                - id
                - repositoryID
                - code
                - name
                - entityDefinitionID
            type: object
        UpdateCustomFieldDefinitionRequest:
            properties:
                code:
                    type: string
                createdAt:
                    format: date-time
                    type: string
                entityDefinitionID:
                    format: uuid
                    type: string
                lastModifiedAt:
                    format: date-time
                    type: string
                name:
                    type: object
                repositoryID:
                    format: uuid
                    type: string
            type: object
        UpdateDeleteCustomFieldDefinitionRequest:
            properties:
                id:
                    format: uuid
                    type: string
                repositoryID:
                    format: uuid
                    type: string
            type: object
        UpdateDeleteEmployeeRequest:
            properties:
                id:
                    format: uuid
                    type: string
                repositoryID:
                    format: uuid
                    type: string
            type: object
        UpdateDeleteEmployeeUnavailabilityRequest:
            properties:
                id:
                    format: uuid
                    type: string
                repositoryID:
                    format: uuid
                    type: string
            type: object
        UpdateDeleteEmploymentContractRequest:
            properties:
                id:
                    format: uuid
                    type: string
                repositoryID:
                    format: uuid
                    type: string
            type: object
        UpdateDeleteEmploymentContractTypeRequest:
            properties:
                id:
                    format: uuid
                    type: string
                repositoryID:
                    format: uuid
                    type: string
            type: object
        UpdateDeleteEmploymentRelationRequest:
            properties:
                id:
                    format: uuid
                    type: string
                repositoryID:
                    format: uuid
                    type: string
            type: object
        UpdateDeleteEmploymentRelationTypeRequest:
            properties:
                id:
                    format: uuid
                    type: string
                repositoryID:
                    format: uuid
                    type: string
            type: object
        UpdateDeleteGroupingRequest:
            properties:
                id:
                    format: uuid
                    type: string
                repositoryID:
                    format: uuid
                    type: string
            type: object
        UpdateDeleteGroupingTypeRequest:
            properties:
                id:
                    format: uuid
                    type: string
                repositoryID:
                    format: uuid
                    type: string
            type: object
        UpdateDeleteMonitoringTraceRequest:
            properties:
                id:
                    format: uuid
                    type: string
                repositoryID:
                    format: uuid
                    type: string
            type: object
        UpdateDeletePositionAssignmentRequest:
            properties:
                id:
                    format: uuid
                    type: string
                repositoryID:
                    format: uuid
                    type: string
            type: object
        UpdateDeleteRatingScaleLevelDescriptorRequest:
            properties:
                id:
                    format: uuid
                    type: string
                repositoryID:
                    format: uuid
                    type: string
            type: object
        UpdateDeleteRatingScaleLevelRequest:
            properties:
                id:
                    format: uuid
                    type: string
                repositoryID:
                    format: uuid
                    type: string
            type: object
        UpdateDeleteRatingScaleRequest:
            properties:
                id:
                    format: uuid
                    type: string
                repositoryID:
                    format: uuid
                    type: string
            type: object
        UpdateDeleteSkillDefinitionRequest:
            properties:
                id:
                    format: uuid
                    type: string
                repositoryID:
                    format: uuid
                    type: string
            type: object
        UpdateDeleteSkillDefinitionTypeRequest:
            properties:
                id:
                    format: uuid
                    type: string
                repositoryID:
                    format: uuid
                    type: string
            type: object
        UpdateDeleteSkillPlanningRequest:
            properties:
                id:
                    format: uuid
                    type: string
                repositoryID:
                    format: uuid
                    type: string
            type: object
        UpdateDeleteSkillResultRequest:
            properties:
                id:
                    format: uuid
                    type: string
                repositoryID:
                    format: uuid
                    type: string
            type: object
        UpdateDeleteTypesOfProofRequest:
            properties:
                id:
                    format: uuid
                    type: string
                repositoryID:
                    format: uuid
                    type: string
            type: object
        UpdateEmployee:
            properties:
                birthDate:
                    format: date
                    type: string
                customValues:
                    type: object
                email:
                    format: email
                    type: string
                employeeNumber:
                    type: string
                firstName:
                    type: string
                id:
                    format: uuid
                    type: string
                initials:
                    type: string
                isProposalExecutionFailed:
                    readOnly: true
                    type: boolean
                isProposalResolved:
                    readOnly: true
                    type: boolean
                proposalExecutionErrorText:
                    readOnly: true
                    type: string
                remark:
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestID:
                    format: uuid
                    readOnly: true
                    type: string
                surname:
                    type: string
            required:
                - requestID
                - isProposalResolved
                - isProposalExecutionFailed
                - id
                - repositoryID
                - surname
            type: object
        UpdateEmployeeRequest:
            properties:
                birthDate:
                    format: date
                    type: string
                createdAt:
                    format: date-time
                    type: string
                customValues:
                    type: object
                email:
                    format: email
                    type: string
                employeeNumber:
                    type: string
                firstName:
                    type: string
                initials:
                    type: string
                lastModifiedAt:
                    format: date-time
                    type: string
                remark:
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                surname:
                    type: string
            type: object
        UpdateEmployeeUnavailability:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                employeeID:
                    format: uuid
                    type: string
                id:
                    format: uuid
                    type: string
                isProposalExecutionFailed:
                    readOnly: true
                    type: boolean
                isProposalResolved:
                    readOnly: true
                    type: boolean
                proposalExecutionErrorText:
                    readOnly: true
                    type: string
                reason:
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestID:
                    format: uuid
                    readOnly: true
                    type: string
            required:
                - requestID
                - isProposalResolved
                - isProposalExecutionFailed
                - id
                - repositoryID
                - activePeriod
                - employeeID
            type: object
        UpdateEmployeeUnavailabilityRequest:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                createdAt:
                    format: date-time
                    type: string
                employeeID:
                    format: uuid
                    type: string
                lastModifiedAt:
                    format: date-time
                    type: string
                reason:
                    type: string
                repositoryID:
                    format: uuid
                    type: string
            type: object
        UpdateEmploymentContract:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                contractTypeID:
                    format: uuid
                    type: string
                employeeID:
                    format: uuid
                    type: string
                id:
                    format: uuid
                    type: string
                isProposalExecutionFailed:
                    readOnly: true
                    type: boolean
                isProposalResolved:
                    readOnly: true
                    type: boolean
                proposalExecutionErrorText:
                    readOnly: true
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestID:
                    format: uuid
                    readOnly: true
                    type: string
            required:
                - requestID
                - isProposalResolved
                - isProposalExecutionFailed
                - id
                - repositoryID
                - activePeriod
                - employeeID
            type: object
        UpdateEmploymentContractRequest:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                contractTypeID:
                    format: uuid
                    type: string
                createdAt:
                    format: date-time
                    type: string
                employeeID:
                    format: uuid
                    type: string
                lastModifiedAt:
                    format: date-time
                    type: string
                repositoryID:
                    format: uuid
                    type: string
            type: object
        UpdateEmploymentContractType:
            properties:
                code:
                    type: string
                id:
                    format: uuid
                    type: string
                isProposalExecutionFailed:
                    readOnly: true
                    type: boolean
                isProposalResolved:
                    readOnly: true
                    type: boolean
                name:
                    type: object
                proposalExecutionErrorText:
                    readOnly: true
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestID:
                    format: uuid
                    readOnly: true
                    type: string
            required:
                - requestID
                - isProposalResolved
                - isProposalExecutionFailed
                - id
                - repositoryID
                - code
                - name
            type: object
        UpdateEmploymentContractTypeRequest:
            properties:
                code:
                    type: string
                createdAt:
                    format: date-time
                    type: string
                lastModifiedAt:
                    format: date-time
                    type: string
                name:
                    type: object
                repositoryID:
                    format: uuid
                    type: string
            type: object
        UpdateEmploymentRelation:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                fromEmployeeID:
                    format: uuid
                    type: string
                id:
                    format: uuid
                    type: string
                isProposalExecutionFailed:
                    readOnly: true
                    type: boolean
                isProposalResolved:
                    readOnly: true
                    type: boolean
                proposalExecutionErrorText:
                    readOnly: true
                    type: string
                relationTypeID:
                    format: uuid
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestID:
                    format: uuid
                    readOnly: true
                    type: string
                toEmployeeID:
                    format: uuid
                    type: string
            required:
                - requestID
                - isProposalResolved
                - isProposalExecutionFailed
                - id
                - repositoryID
                - activePeriod
                - toEmployeeID
                - fromEmployeeID
                - relationTypeID
            type: object
        UpdateEmploymentRelationRequest:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                createdAt:
                    format: date-time
                    type: string
                fromEmployeeID:
                    format: uuid
                    type: string
                lastModifiedAt:
                    format: date-time
                    type: string
                relationTypeID:
                    format: uuid
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                toEmployeeID:
                    format: uuid
                    type: string
            type: object
        UpdateEmploymentRelationType:
            properties:
                code:
                    type: string
                id:
                    format: uuid
                    type: string
                isProposalExecutionFailed:
                    readOnly: true
                    type: boolean
                isProposalResolved:
                    readOnly: true
                    type: boolean
                name:
                    type: object
                proposalExecutionErrorText:
                    readOnly: true
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestID:
                    format: uuid
                    readOnly: true
                    type: string
            required:
                - requestID
                - isProposalResolved
                - isProposalExecutionFailed
                - id
                - repositoryID
                - code
                - name
            type: object
        UpdateEmploymentRelationTypeRequest:
            properties:
                code:
                    type: string
                createdAt:
                    format: date-time
                    type: string
                lastModifiedAt:
                    format: date-time
                    type: string
                name:
                    type: object
                repositoryID:
                    format: uuid
                    type: string
            type: object
        UpdateEntityDefinitionRequest:
            properties:
                code:
                    type: string
                name:
                    type: object
            type: object
        UpdateGrouping:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                code:
                    type: string
                customValues:
                    type: object
                definedInGroupingID:
                    format: uuid
                    type: string
                description:
                    type: object
                id:
                    format: uuid
                    type: string
                isProposalExecutionFailed:
                    readOnly: true
                    type: boolean
                isProposalResolved:
                    readOnly: true
                    type: boolean
                name:
                    type: object
                proposalExecutionErrorText:
                    readOnly: true
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestID:
                    format: uuid
                    readOnly: true
                    type: string
                typeID:
                    format: uuid
                    type: string
            required:
                - requestID
                - isProposalResolved
                - isProposalExecutionFailed
                - id
                - repositoryID
                - code
                - name
                - activePeriod
            type: object
        UpdateGroupingRequest:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                code:
                    type: string
                createdAt:
                    format: date-time
                    type: string
                customValues:
                    type: object
                definedInGroupingID:
                    format: uuid
                    type: string
                description:
                    type: object
                lastModifiedAt:
                    format: date-time
                    type: string
                name:
                    type: object
                repositoryID:
                    format: uuid
                    type: string
                typeID:
                    format: uuid
                    type: string
            type: object
        UpdateGroupingType:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                code:
                    type: string
                customValues:
                    type: object
                id:
                    format: uuid
                    type: string
                isProposalExecutionFailed:
                    readOnly: true
                    type: boolean
                isProposalResolved:
                    readOnly: true
                    type: boolean
                name:
                    type: object
                proposalExecutionErrorText:
                    readOnly: true
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestID:
                    format: uuid
                    readOnly: true
                    type: string
            required:
                - requestID
                - isProposalResolved
                - isProposalExecutionFailed
                - id
                - repositoryID
                - code
                - name
                - activePeriod
            type: object
        UpdateGroupingTypeRequest:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                code:
                    type: string
                createdAt:
                    format: date-time
                    type: string
                customValues:
                    type: object
                lastModifiedAt:
                    format: date-time
                    type: string
                name:
                    type: object
                repositoryID:
                    format: uuid
                    type: string
            type: object
        UpdateMonitoringTrace:
            properties:
                executedAt:
                    format: date-time
                    type: string
                id:
                    format: uuid
                    type: string
                isProposalExecutionFailed:
                    readOnly: true
                    type: boolean
                isProposalResolved:
                    readOnly: true
                    type: boolean
                proposalExecutionErrorText:
                    readOnly: true
                    type: string
                remark:
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestID:
                    format: uuid
                    readOnly: true
                    type: string
                requestedAt:
                    format: date-time
                    type: string
            required:
                - requestID
                - isProposalResolved
                - isProposalExecutionFailed
                - id
                - repositoryID
            type: object
        UpdateMonitoringTraceRequest:
            properties:
                createdAt:
                    format: date-time
                    type: string
                executedAt:
                    format: date-time
                    type: string
                lastModifiedAt:
                    format: date-time
                    type: string
                remark:
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestedAt:
                    format: date-time
                    type: string
            type: object
        UpdatePositionAssignment:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                employeeID:
                    format: uuid
                    type: string
                id:
                    format: uuid
                    type: string
                isProposalExecutionFailed:
                    readOnly: true
                    type: boolean
                isProposalResolved:
                    readOnly: true
                    type: boolean
                proposalExecutionErrorText:
                    readOnly: true
                    type: string
                remark:
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestID:
                    format: uuid
                    readOnly: true
                    type: string
                tagIDs:
                    items:
                        format: uuid
                        type: string
                    type: array
            required:
                - requestID
                - isProposalResolved
                - isProposalExecutionFailed
                - id
                - repositoryID
                - employeeID
                - activePeriod
                - tagIDs
            type: object
        UpdatePositionAssignmentRequest:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                createdAt:
                    format: date-time
                    type: string
                employeeID:
                    format: uuid
                    type: string
                lastModifiedAt:
                    format: date-time
                    type: string
                remark:
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                tagIDs:
                    items:
                        format: uuid
                        type: string
                    type: array
            type: object
        UpdateRatingScale:
            properties:
                code:
                    type: string
                customValues:
                    type: object
                id:
                    format: uuid
                    type: string
                isProposalExecutionFailed:
                    readOnly: true
                    type: boolean
                isProposalResolved:
                    readOnly: true
                    type: boolean
                name:
                    type: object
                proposalExecutionErrorText:
                    readOnly: true
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestID:
                    format: uuid
                    readOnly: true
                    type: string
            required:
                - requestID
                - isProposalResolved
                - isProposalExecutionFailed
                - id
                - repositoryID
                - code
                - name
            type: object
        UpdateRatingScaleLevel:
            properties:
                code:
                    type: string
                customValues:
                    type: object
                description:
                    type: object
                id:
                    format: uuid
                    type: string
                isProposalExecutionFailed:
                    readOnly: true
                    type: boolean
                isProposalResolved:
                    readOnly: true
                    type: boolean
                name:
                    type: object
                proposalExecutionErrorText:
                    readOnly: true
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestID:
                    format: uuid
                    readOnly: true
                    type: string
            required:
                - requestID
                - isProposalResolved
                - isProposalExecutionFailed
                - id
                - repositoryID
                - code
                - name
            type: object
        UpdateRatingScaleLevelDescriptor:
            properties:
                description:
                    type: object
                id:
                    format: uuid
                    type: string
                isProposalExecutionFailed:
                    readOnly: true
                    type: boolean
                isProposalResolved:
                    readOnly: true
                    type: boolean
                proposalExecutionErrorText:
                    readOnly: true
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestID:
                    format: uuid
                    readOnly: true
                    type: string
            required:
                - requestID
                - isProposalResolved
                - isProposalExecutionFailed
                - id
                - repositoryID
                - description
            type: object
        UpdateRatingScaleLevelDescriptorRequest:
            properties:
                createdAt:
                    format: date-time
                    type: string
                description:
                    type: object
                lastModifiedAt:
                    format: date-time
                    type: string
                ratingScaleLevelID:
                    format: uuid
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                skillDefinitionID:
                    format: uuid
                    type: string
            type: object
        UpdateRatingScaleLevelRequest:
            properties:
                code:
                    type: string
                createdAt:
                    format: date-time
                    type: string
                customValues:
                    type: object
                description:
                    type: object
                lastModifiedAt:
                    format: date-time
                    type: string
                name:
                    type: object
                ratingScaleID:
                    format: uuid
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                scoreOrder:
                    format: int32
                    type: integer
            type: object
        UpdateRatingScaleRequest:
            properties:
                code:
                    type: string
                createdAt:
                    format: date-time
                    type: string
                customValues:
                    type: object
                lastModifiedAt:
                    format: date-time
                    type: string
                name:
                    type: object
                repositoryID:
                    format: uuid
                    type: string
            type: object
        UpdateRepositoryRequest:
            properties:
                code:
                    type: string
            type: object
        UpdateSkillDefinition:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                code:
                    type: string
                customValues:
                    type: object
                description:
                    type: object
                id:
                    format: uuid
                    type: string
                isProposalExecutionFailed:
                    readOnly: true
                    type: boolean
                isProposalResolved:
                    readOnly: true
                    type: boolean
                name:
                    type: object
                proposalExecutionErrorText:
                    readOnly: true
                    type: string
                ratingScaleID:
                    format: uuid
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestID:
                    format: uuid
                    readOnly: true
                    type: string
                typeID:
                    format: uuid
                    type: string
            required:
                - requestID
                - isProposalResolved
                - isProposalExecutionFailed
                - id
                - repositoryID
                - name
                - ratingScaleID
                - activePeriod
            type: object
        UpdateSkillDefinitionRequest:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                code:
                    type: string
                createdAt:
                    format: date-time
                    type: string
                customValues:
                    type: object
                description:
                    type: object
                lastModifiedAt:
                    format: date-time
                    type: string
                name:
                    type: object
                ratingScaleID:
                    format: uuid
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                typeID:
                    format: uuid
                    type: string
            type: object
        UpdateSkillDefinitionType:
            properties:
                code:
                    type: string
                customValues:
                    type: object
                id:
                    format: uuid
                    type: string
                isProposalExecutionFailed:
                    readOnly: true
                    type: boolean
                isProposalResolved:
                    readOnly: true
                    type: boolean
                name:
                    type: object
                proposalExecutionErrorText:
                    readOnly: true
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestID:
                    format: uuid
                    readOnly: true
                    type: string
            required:
                - requestID
                - isProposalResolved
                - isProposalExecutionFailed
                - id
                - repositoryID
                - code
                - name
            type: object
        UpdateSkillDefinitionTypeRequest:
            properties:
                code:
                    type: string
                createdAt:
                    format: date-time
                    type: string
                customValues:
                    type: object
                lastModifiedAt:
                    format: date-time
                    type: string
                name:
                    type: object
                repositoryID:
                    format: uuid
                    type: string
            type: object
        UpdateSkillPlanning:
            properties:
                closeDate:
                    format: date
                    type: string
                customValues:
                    type: object
                deadlineDate:
                    format: date
                    type: string
                employeeID:
                    format: uuid
                    type: string
                fromDate:
                    format: date
                    type: string
                id:
                    format: uuid
                    type: string
                isProposalExecutionFailed:
                    readOnly: true
                    type: boolean
                isProposalResolved:
                    readOnly: true
                    type: boolean
                proposalExecutionErrorText:
                    readOnly: true
                    type: string
                remark:
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestID:
                    format: uuid
                    readOnly: true
                    type: string
                skillDefinitionID:
                    format: uuid
                    type: string
                typeOfProofID:
                    format: uuid
                    type: string
            required:
                - requestID
                - isProposalResolved
                - isProposalExecutionFailed
                - id
                - repositoryID
                - employeeID
                - typeOfProofID
                - fromDate
                - skillDefinitionID
            type: object
        UpdateSkillPlanningRequest:
            properties:
                closeDate:
                    format: date
                    type: string
                createdAt:
                    format: date-time
                    type: string
                customValues:
                    type: object
                deadlineDate:
                    format: date
                    type: string
                employeeID:
                    format: uuid
                    type: string
                fromDate:
                    format: date
                    type: string
                lastModifiedAt:
                    format: date-time
                    type: string
                remark:
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                skillDefinitionID:
                    format: uuid
                    type: string
                typeOfProofID:
                    format: uuid
                    type: string
            type: object
        UpdateSkillResult:
            properties:
                customValues:
                    type: object
                employeeID:
                    format: uuid
                    type: string
                expirationDate:
                    format: date
                    type: string
                id:
                    format: uuid
                    type: string
                isProposalExecutionFailed:
                    readOnly: true
                    type: boolean
                isProposalResolved:
                    readOnly: true
                    type: boolean
                issueDate:
                    format: date
                    type: string
                proposalExecutionErrorText:
                    readOnly: true
                    type: string
                remark:
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestID:
                    format: uuid
                    readOnly: true
                    type: string
                scoreID:
                    format: uuid
                    type: string
                typeOfProofID:
                    format: uuid
                    type: string
            required:
                - requestID
                - isProposalResolved
                - isProposalExecutionFailed
                - id
                - repositoryID
                - employeeID
                - issueDate
                - typeOfProofID
            type: object
        UpdateSkillResultRequest:
            properties:
                createdAt:
                    format: date-time
                    type: string
                customValues:
                    type: object
                employeeID:
                    format: uuid
                    type: string
                expirationDate:
                    format: date
                    type: string
                issueDate:
                    format: date
                    type: string
                lastModifiedAt:
                    format: date-time
                    type: string
                remark:
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                scoreID:
                    format: uuid
                    type: string
                typeOfProofID:
                    format: uuid
                    type: string
            type: object
        UpdateTypesOfProof:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                code:
                    type: string
                customValues:
                    type: object
                description:
                    type: string
                id:
                    format: uuid
                    type: string
                isProposalExecutionFailed:
                    readOnly: true
                    type: boolean
                isProposalResolved:
                    readOnly: true
                    type: boolean
                name:
                    type: object
                proposalExecutionErrorText:
                    readOnly: true
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestID:
                    format: uuid
                    readOnly: true
                    type: string
                skillDefinitionID:
                    format: uuid
                    type: string
            required:
                - requestID
                - isProposalResolved
                - isProposalExecutionFailed
                - id
                - repositoryID
                - name
                - skillDefinitionID
                - activePeriod
            type: object
        UpdateTypesOfProofRequest:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                code:
                    type: string
                createdAt:
                    format: date-time
                    type: string
                customValues:
                    type: object
                description:
                    type: string
                lastModifiedAt:
                    format: date-time
                    type: string
                name:
                    type: object
                repositoryID:
                    format: uuid
                    type: string
                skillDefinitionID:
                    format: uuid
                    type: string
            type: object
        UpdateUpdateCustomFieldDefinitionRequest:
            properties:
                code:
                    type: string
                entityDefinitionID:
                    format: uuid
                    type: string
                id:
                    format: uuid
                    type: string
                name:
                    type: object
                repositoryID:
                    format: uuid
                    type: string
            type: object
        UpdateUpdateEmployeeRequest:
            properties:
                birthDate:
                    format: date
                    type: string
                customValues:
                    type: object
                email:
                    format: email
                    type: string
                employeeNumber:
                    type: string
                firstName:
                    type: string
                id:
                    format: uuid
                    type: string
                initials:
                    type: string
                remark:
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                surname:
                    type: string
            type: object
        UpdateUpdateEmployeeUnavailabilityRequest:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                employeeID:
                    format: uuid
                    type: string
                id:
                    format: uuid
                    type: string
                reason:
                    type: string
                repositoryID:
                    format: uuid
                    type: string
            type: object
        UpdateUpdateEmploymentContractRequest:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                contractTypeID:
                    format: uuid
                    type: string
                employeeID:
                    format: uuid
                    type: string
                id:
                    format: uuid
                    type: string
                repositoryID:
                    format: uuid
                    type: string
            type: object
        UpdateUpdateEmploymentContractTypeRequest:
            properties:
                code:
                    type: string
                id:
                    format: uuid
                    type: string
                name:
                    type: object
                repositoryID:
                    format: uuid
                    type: string
            type: object
        UpdateUpdateEmploymentRelationRequest:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                fromEmployeeID:
                    format: uuid
                    type: string
                id:
                    format: uuid
                    type: string
                relationTypeID:
                    format: uuid
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                toEmployeeID:
                    format: uuid
                    type: string
            type: object
        UpdateUpdateEmploymentRelationTypeRequest:
            properties:
                code:
                    type: string
                id:
                    format: uuid
                    type: string
                name:
                    type: object
                repositoryID:
                    format: uuid
                    type: string
            type: object
        UpdateUpdateGroupingRequest:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                code:
                    type: string
                customValues:
                    type: object
                definedInGroupingID:
                    format: uuid
                    type: string
                description:
                    type: object
                id:
                    format: uuid
                    type: string
                name:
                    type: object
                repositoryID:
                    format: uuid
                    type: string
                typeID:
                    format: uuid
                    type: string
            type: object
        UpdateUpdateGroupingTypeRequest:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                code:
                    type: string
                customValues:
                    type: object
                id:
                    format: uuid
                    type: string
                name:
                    type: object
                repositoryID:
                    format: uuid
                    type: string
            type: object
        UpdateUpdateMonitoringTraceRequest:
            properties:
                executedAt:
                    format: date-time
                    type: string
                id:
                    format: uuid
                    type: string
                remark:
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestedAt:
                    format: date-time
                    type: string
            type: object
        UpdateUpdatePositionAssignmentRequest:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                employeeID:
                    format: uuid
                    type: string
                id:
                    format: uuid
                    type: string
                remark:
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                tagIDs:
                    items:
                        format: uuid
                        type: string
                    type: array
            type: object
        UpdateUpdateRatingScaleLevelDescriptorRequest:
            properties:
                description:
                    type: object
                id:
                    format: uuid
                    type: string
                repositoryID:
                    format: uuid
                    type: string
            type: object
        UpdateUpdateRatingScaleLevelRequest:
            properties:
                code:
                    type: string
                customValues:
                    type: object
                description:
                    type: object
                id:
                    format: uuid
                    type: string
                name:
                    type: object
                repositoryID:
                    format: uuid
                    type: string
            type: object
        UpdateUpdateRatingScaleRequest:
            properties:
                code:
                    type: string
                customValues:
                    type: object
                id:
                    format: uuid
                    type: string
                name:
                    type: object
                repositoryID:
                    format: uuid
                    type: string
            type: object
        UpdateUpdateSkillDefinitionRequest:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                code:
                    type: string
                customValues:
                    type: object
                description:
                    type: object
                id:
                    format: uuid
                    type: string
                name:
                    type: object
                ratingScaleID:
                    format: uuid
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                typeID:
                    format: uuid
                    type: string
            type: object
        UpdateUpdateSkillDefinitionTypeRequest:
            properties:
                code:
                    type: string
                customValues:
                    type: object
                id:
                    format: uuid
                    type: string
                name:
                    type: object
                repositoryID:
                    format: uuid
                    type: string
            type: object
        UpdateUpdateSkillPlanningRequest:
            properties:
                closeDate:
                    format: date
                    type: string
                customValues:
                    type: object
                deadlineDate:
                    format: date
                    type: string
                employeeID:
                    format: uuid
                    type: string
                fromDate:
                    format: date
                    type: string
                id:
                    format: uuid
                    type: string
                remark:
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                skillDefinitionID:
                    format: uuid
                    type: string
                typeOfProofID:
                    format: uuid
                    type: string
            type: object
        UpdateUpdateSkillResultRequest:
            properties:
                customValues:
                    type: object
                employeeID:
                    format: uuid
                    type: string
                expirationDate:
                    format: date
                    type: string
                id:
                    format: uuid
                    type: string
                issueDate:
                    format: date
                    type: string
                remark:
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                scoreID:
                    format: uuid
                    type: string
                typeOfProofID:
                    format: uuid
                    type: string
            type: object
        UpdateUpdateTypesOfProofRequest:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                code:
                    type: string
                customValues:
                    type: object
                description:
                    type: string
                id:
                    format: uuid
                    type: string
                name:
                    type: object
                repositoryID:
                    format: uuid
                    type: string
                skillDefinitionID:
                    format: uuid
                    type: string
            type: object
    securitySchemes:
        apiKey:
            description: "API key for authentication. \n\nInclude your API key in the `X-API-Key` header with every request.\n\nExample:\n```\nX-API-Key: your-api-key-here\n```\n"
            in: header
            name: X-API-Key
            type: apiKey
info:
    contact:
        email: api-support@ag5.com
        name: AG5 API Support
        url: https://support.ag5.com
    description: "# AG5 Skills Management API\n\n## Overview\nThe AG5 Skills Management API provides a comprehensive solution for managing employee\nskills within your organization. This API supports both direct operations and a\nproposal-based workflow for changes that require approval.\n\n## Proposal System\nMany operations in this API use a proposal-based workflow:\n- **Direct Operations**: Read-only operations (GET) directly access current data\n- **Proposal Operations**: Modifications (CREATE, UPDATE, DELETE) create proposals\n- **Automatic vs Manual Approval**: Proposals may be automatically approved based on \n  system configuration or require manual approval\n\n## Authentication\nAll API endpoints require authentication using an API key.\n\n```\nX-API-Key: <your-api-key>\n```\n\n## Rate Limiting\nAPI calls are rate-limited to ensure fair usage:\n- 1000 requests per hour per organization\n- Rate limit headers are included in all responses\n\n## Pagination\nList endpoints support cursor-based pagination:\n- Use `limit` parameter to control page size (max 1000)\n- Use `cursor` parameter with the value from previous response\n- Total count is included in all list responses\n"
    license:
        name: Commercial
        url: https://ag5.com/terms
    title: AG5 Skills Management API
    version: 0.1.0
    x-logo:
        altText: AG5 Logo
        url: https://www.ag5.com/wp-content/themes/ag5/assets/images/ag5-logo.png
openapi: 3.0.3
paths:
    /{orgID}/createCustomFieldDefinitions:
        get:
            description: |-
                List all createCustomFieldDefinitions proposals. These are proposed changes to create new CustomFieldDefinition records that may be automatically approved or require manual approval depending on system configuration.

                **Filter Syntax:**
                - Filters use exact match only
                - Multiple filters are combined with AND logic
                - Filterable fields: entityDefinitionID
                - Example: `?employee_id=abc-123&status=active`
            operationId: listCreateCustomFieldDefinition
            parameters:
                - description: Filter by entityDefinitionID (exact match)
                  in: query
                  name: entityDefinitionID
                  schema:
                    type: string
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination (base64 encoded)
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListCreateCustomFieldDefinitionResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List CustomFieldDefinition creation proposals
            tags:
                - CustomFieldDefinitions
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
        post:
            description: Create a new proposal to add a CustomFieldDefinition record. The proposal may be automatically approved or require manual approval depending on system configuration.
            operationId: createCreateCustomFieldDefinition
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateCreateCustomFieldDefinitionRequest'
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateCustomFieldDefinition'
                    description: Created successfully
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Propose creation of CustomFieldDefinition
            tags:
                - CustomFieldDefinitions
                - Proposals
    /{orgID}/createCustomFieldDefinitions/{id}:
        get:
            description: Get details of a specific CustomFieldDefinition creation proposal by ID
            operationId: getCreateCustomFieldDefinition
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateCustomFieldDefinition'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get CustomFieldDefinition creation proposal
            tags:
                - CustomFieldDefinitions
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
            - description: CreateCustomFieldDefinition ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgID}/createEmployeeUnavailabilities:
        get:
            description: |-
                List all createEmployeeUnavailabilities proposals. These are proposed changes to create new EmployeeUnavailability records that may be automatically approved or require manual approval depending on system configuration.

                **Filter Syntax:**
                - Filters use exact match only
                - Multiple filters are combined with AND logic
                - Filterable fields: employeeID
                - Example: `?employee_id=abc-123&status=active`
            operationId: listCreateEmployeeUnavailability
            parameters:
                - description: Filter by employeeID (exact match)
                  in: query
                  name: employeeID
                  schema:
                    type: string
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination (base64 encoded)
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListCreateEmployeeUnavailabilityResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List EmployeeUnavailability creation proposals
            tags:
                - EmployeeUnavailabilities
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
        post:
            description: Create a new proposal to add a EmployeeUnavailability record. The proposal may be automatically approved or require manual approval depending on system configuration.
            operationId: createCreateEmployeeUnavailability
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateCreateEmployeeUnavailabilityRequest'
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateEmployeeUnavailability'
                    description: Created successfully
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Propose creation of EmployeeUnavailability
            tags:
                - EmployeeUnavailabilities
                - Proposals
    /{orgID}/createEmployeeUnavailabilities/{id}:
        get:
            description: Get details of a specific EmployeeUnavailability creation proposal by ID
            operationId: getCreateEmployeeUnavailability
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateEmployeeUnavailability'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get EmployeeUnavailability creation proposal
            tags:
                - EmployeeUnavailabilities
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
            - description: CreateEmployeeUnavailability ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgID}/createEmployees:
        get:
            description: List all createEmployees proposals. These are proposed changes to create new Employee records that may be automatically approved or require manual approval depending on system configuration.
            operationId: listCreateEmployee
            parameters:
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination (base64 encoded)
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListCreateEmployeeResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List Employee creation proposals
            tags:
                - Employees
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
        post:
            description: Create a new proposal to add a Employee record. The proposal may be automatically approved or require manual approval depending on system configuration.
            operationId: createCreateEmployee
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateCreateEmployeeRequest'
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateEmployee'
                    description: Created successfully
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Propose creation of Employee
            tags:
                - Employees
                - Proposals
    /{orgID}/createEmployees/{id}:
        get:
            description: Get details of a specific Employee creation proposal by ID
            operationId: getCreateEmployee
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateEmployee'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get Employee creation proposal
            tags:
                - Employees
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
            - description: CreateEmployee ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgID}/createEmploymentContractTypes:
        get:
            description: List all createEmploymentContractTypes proposals. These are proposed changes to create new EmploymentContractType records that may be automatically approved or require manual approval depending on system configuration.
            operationId: listCreateEmploymentContractType
            parameters:
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination (base64 encoded)
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListCreateEmploymentContractTypeResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List EmploymentContractType creation proposals
            tags:
                - EmploymentContractTypes
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
        post:
            description: Create a new proposal to add a EmploymentContractType record. The proposal may be automatically approved or require manual approval depending on system configuration.
            operationId: createCreateEmploymentContractType
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateCreateEmploymentContractTypeRequest'
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateEmploymentContractType'
                    description: Created successfully
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Propose creation of EmploymentContractType
            tags:
                - EmploymentContractTypes
                - Proposals
    /{orgID}/createEmploymentContractTypes/{id}:
        get:
            description: Get details of a specific EmploymentContractType creation proposal by ID
            operationId: getCreateEmploymentContractType
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateEmploymentContractType'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get EmploymentContractType creation proposal
            tags:
                - EmploymentContractTypes
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
            - description: CreateEmploymentContractType ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgID}/createEmploymentContracts:
        get:
            description: |-
                List all createEmploymentContracts proposals. These are proposed changes to create new EmploymentContract records that may be automatically approved or require manual approval depending on system configuration.

                **Filter Syntax:**
                - Filters use exact match only
                - Multiple filters are combined with AND logic
                - Filterable fields: contractTypeID, employeeID
                - Example: `?employee_id=abc-123&status=active`
            operationId: listCreateEmploymentContract
            parameters:
                - description: Filter by contractTypeID (exact match)
                  in: query
                  name: contractTypeID
                  schema:
                    type: string
                - description: Filter by employeeID (exact match)
                  in: query
                  name: employeeID
                  schema:
                    type: string
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination (base64 encoded)
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListCreateEmploymentContractResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List EmploymentContract creation proposals
            tags:
                - EmploymentContracts
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
        post:
            description: Create a new proposal to add a EmploymentContract record. The proposal may be automatically approved or require manual approval depending on system configuration.
            operationId: createCreateEmploymentContract
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateCreateEmploymentContractRequest'
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateEmploymentContract'
                    description: Created successfully
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Propose creation of EmploymentContract
            tags:
                - EmploymentContracts
                - Proposals
    /{orgID}/createEmploymentContracts/{id}:
        get:
            description: Get details of a specific EmploymentContract creation proposal by ID
            operationId: getCreateEmploymentContract
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateEmploymentContract'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get EmploymentContract creation proposal
            tags:
                - EmploymentContracts
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
            - description: CreateEmploymentContract ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgID}/createEmploymentRelationTypes:
        get:
            description: List all createEmploymentRelationTypes proposals. These are proposed changes to create new EmploymentRelationType records that may be automatically approved or require manual approval depending on system configuration.
            operationId: listCreateEmploymentRelationType
            parameters:
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination (base64 encoded)
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListCreateEmploymentRelationTypeResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List EmploymentRelationType creation proposals
            tags:
                - EmploymentRelationTypes
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
        post:
            description: Create a new proposal to add a EmploymentRelationType record. The proposal may be automatically approved or require manual approval depending on system configuration.
            operationId: createCreateEmploymentRelationType
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateCreateEmploymentRelationTypeRequest'
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateEmploymentRelationType'
                    description: Created successfully
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Propose creation of EmploymentRelationType
            tags:
                - EmploymentRelationTypes
                - Proposals
    /{orgID}/createEmploymentRelationTypes/{id}:
        get:
            description: Get details of a specific EmploymentRelationType creation proposal by ID
            operationId: getCreateEmploymentRelationType
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateEmploymentRelationType'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get EmploymentRelationType creation proposal
            tags:
                - EmploymentRelationTypes
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
            - description: CreateEmploymentRelationType ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgID}/createEmploymentRelations:
        get:
            description: |-
                List all createEmploymentRelations proposals. These are proposed changes to create new EmploymentRelation records that may be automatically approved or require manual approval depending on system configuration.

                **Filter Syntax:**
                - Filters use exact match only
                - Multiple filters are combined with AND logic
                - Filterable fields: toEmployeeID, fromEmployeeID, relationTypeID
                - Example: `?employee_id=abc-123&status=active`
            operationId: listCreateEmploymentRelation
            parameters:
                - description: Filter by toEmployeeID (exact match)
                  in: query
                  name: toEmployeeID
                  schema:
                    type: string
                - description: Filter by fromEmployeeID (exact match)
                  in: query
                  name: fromEmployeeID
                  schema:
                    type: string
                - description: Filter by relationTypeID (exact match)
                  in: query
                  name: relationTypeID
                  schema:
                    type: string
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination (base64 encoded)
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListCreateEmploymentRelationResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List EmploymentRelation creation proposals
            tags:
                - EmploymentRelations
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
        post:
            description: Create a new proposal to add a EmploymentRelation record. The proposal may be automatically approved or require manual approval depending on system configuration.
            operationId: createCreateEmploymentRelation
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateCreateEmploymentRelationRequest'
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateEmploymentRelation'
                    description: Created successfully
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Propose creation of EmploymentRelation
            tags:
                - EmploymentRelations
                - Proposals
    /{orgID}/createEmploymentRelations/{id}:
        get:
            description: Get details of a specific EmploymentRelation creation proposal by ID
            operationId: getCreateEmploymentRelation
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateEmploymentRelation'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get EmploymentRelation creation proposal
            tags:
                - EmploymentRelations
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
            - description: CreateEmploymentRelation ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgID}/createGroupingTypes:
        get:
            description: List all createGroupingTypes proposals. These are proposed changes to create new GroupingType records that may be automatically approved or require manual approval depending on system configuration.
            operationId: listCreateGroupingType
            parameters:
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination (base64 encoded)
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListCreateGroupingTypeResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List GroupingType creation proposals
            tags:
                - GroupingTypes
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
        post:
            description: Create a new proposal to add a GroupingType record. The proposal may be automatically approved or require manual approval depending on system configuration.
            operationId: createCreateGroupingType
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateCreateGroupingTypeRequest'
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateGroupingType'
                    description: Created successfully
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Propose creation of GroupingType
            tags:
                - GroupingTypes
                - Proposals
    /{orgID}/createGroupingTypes/{id}:
        get:
            description: Get details of a specific GroupingType creation proposal by ID
            operationId: getCreateGroupingType
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateGroupingType'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get GroupingType creation proposal
            tags:
                - GroupingTypes
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
            - description: CreateGroupingType ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgID}/createGroupings:
        get:
            description: |-
                List all createGroupings proposals. These are proposed changes to create new Grouping records that may be automatically approved or require manual approval depending on system configuration.

                **Filter Syntax:**
                - Filters use exact match only
                - Multiple filters are combined with AND logic
                - Filterable fields: typeID, definedInGroupingID
                - Example: `?employee_id=abc-123&status=active`
            operationId: listCreateGrouping
            parameters:
                - description: Filter by typeID (exact match)
                  in: query
                  name: typeID
                  schema:
                    type: string
                - description: Filter by definedInGroupingID (exact match)
                  in: query
                  name: definedInGroupingID
                  schema:
                    type: string
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination (base64 encoded)
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListCreateGroupingResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List Grouping creation proposals
            tags:
                - Groupings
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
        post:
            description: Create a new proposal to add a Grouping record. The proposal may be automatically approved or require manual approval depending on system configuration.
            operationId: createCreateGrouping
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateCreateGroupingRequest'
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateGrouping'
                    description: Created successfully
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Propose creation of Grouping
            tags:
                - Groupings
                - Proposals
    /{orgID}/createGroupings/{id}:
        get:
            description: Get details of a specific Grouping creation proposal by ID
            operationId: getCreateGrouping
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateGrouping'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get Grouping creation proposal
            tags:
                - Groupings
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
            - description: CreateGrouping ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgID}/createMonitoringTraces:
        get:
            description: List all createMonitoringTraces proposals. These are proposed changes to create new MonitoringTrace records that may be automatically approved or require manual approval depending on system configuration.
            operationId: listCreateMonitoringTrace
            parameters:
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination (base64 encoded)
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListCreateMonitoringTraceResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List MonitoringTrace creation proposals
            tags:
                - MonitoringTraces
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
        post:
            description: Create a new proposal to add a MonitoringTrace record. The proposal may be automatically approved or require manual approval depending on system configuration.
            operationId: createCreateMonitoringTrace
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateCreateMonitoringTraceRequest'
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateMonitoringTrace'
                    description: Created successfully
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Propose creation of MonitoringTrace
            tags:
                - MonitoringTraces
                - Proposals
    /{orgID}/createMonitoringTraces/{id}:
        get:
            description: Get details of a specific MonitoringTrace creation proposal by ID
            operationId: getCreateMonitoringTrace
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateMonitoringTrace'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get MonitoringTrace creation proposal
            tags:
                - MonitoringTraces
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
            - description: CreateMonitoringTrace ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgID}/createPositionAssignments:
        get:
            description: |-
                List all createPositionAssignments proposals. These are proposed changes to create new PositionAssignment records that may be automatically approved or require manual approval depending on system configuration.

                **Filter Syntax:**
                - Filters use exact match only
                - Multiple filters are combined with AND logic
                - Filterable fields: employeeID
                - Example: `?employee_id=abc-123&status=active`
            operationId: listCreatePositionAssignment
            parameters:
                - description: Filter by employeeID (exact match)
                  in: query
                  name: employeeID
                  schema:
                    type: string
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination (base64 encoded)
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListCreatePositionAssignmentResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List PositionAssignment creation proposals
            tags:
                - PositionAssignments
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
        post:
            description: Create a new proposal to add a PositionAssignment record. The proposal may be automatically approved or require manual approval depending on system configuration.
            operationId: createCreatePositionAssignment
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateCreatePositionAssignmentRequest'
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreatePositionAssignment'
                    description: Created successfully
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Propose creation of PositionAssignment
            tags:
                - PositionAssignments
                - Proposals
    /{orgID}/createPositionAssignments/{id}:
        get:
            description: Get details of a specific PositionAssignment creation proposal by ID
            operationId: getCreatePositionAssignment
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreatePositionAssignment'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get PositionAssignment creation proposal
            tags:
                - PositionAssignments
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
            - description: CreatePositionAssignment ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgID}/createRatingScaleLevelDescriptors:
        get:
            description: |-
                List all createRatingScaleLevelDescriptors proposals. These are proposed changes to create new RatingScaleLevelDescriptor records that may be automatically approved or require manual approval depending on system configuration.

                **Filter Syntax:**
                - Filters use exact match only
                - Multiple filters are combined with AND logic
                - Filterable fields: ratingScaleLevelID, skillDefinitionID
                - Example: `?employee_id=abc-123&status=active`
            operationId: listCreateRatingScaleLevelDescriptor
            parameters:
                - description: Filter by ratingScaleLevelID (exact match)
                  in: query
                  name: ratingScaleLevelID
                  schema:
                    type: string
                - description: Filter by skillDefinitionID (exact match)
                  in: query
                  name: skillDefinitionID
                  schema:
                    type: string
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination (base64 encoded)
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListCreateRatingScaleLevelDescriptorResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List RatingScaleLevelDescriptor creation proposals
            tags:
                - RatingScaleLevelDescriptors
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
        post:
            description: Create a new proposal to add a RatingScaleLevelDescriptor record. The proposal may be automatically approved or require manual approval depending on system configuration.
            operationId: createCreateRatingScaleLevelDescriptor
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateCreateRatingScaleLevelDescriptorRequest'
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateRatingScaleLevelDescriptor'
                    description: Created successfully
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Propose creation of RatingScaleLevelDescriptor
            tags:
                - RatingScaleLevelDescriptors
                - Proposals
    /{orgID}/createRatingScaleLevelDescriptors/{id}:
        get:
            description: Get details of a specific RatingScaleLevelDescriptor creation proposal by ID
            operationId: getCreateRatingScaleLevelDescriptor
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateRatingScaleLevelDescriptor'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get RatingScaleLevelDescriptor creation proposal
            tags:
                - RatingScaleLevelDescriptors
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
            - description: CreateRatingScaleLevelDescriptor ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgID}/createRatingScaleLevels:
        get:
            description: |-
                List all createRatingScaleLevels proposals. These are proposed changes to create new RatingScaleLevel records that may be automatically approved or require manual approval depending on system configuration.

                **Filter Syntax:**
                - Filters use exact match only
                - Multiple filters are combined with AND logic
                - Filterable fields: ratingScaleID
                - Example: `?employee_id=abc-123&status=active`
            operationId: listCreateRatingScaleLevel
            parameters:
                - description: Filter by ratingScaleID (exact match)
                  in: query
                  name: ratingScaleID
                  schema:
                    type: string
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination (base64 encoded)
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListCreateRatingScaleLevelResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List RatingScaleLevel creation proposals
            tags:
                - RatingScaleLevels
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
        post:
            description: Create a new proposal to add a RatingScaleLevel record. The proposal may be automatically approved or require manual approval depending on system configuration.
            operationId: createCreateRatingScaleLevel
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateCreateRatingScaleLevelRequest'
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateRatingScaleLevel'
                    description: Created successfully
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Propose creation of RatingScaleLevel
            tags:
                - RatingScaleLevels
                - Proposals
    /{orgID}/createRatingScaleLevels/{id}:
        get:
            description: Get details of a specific RatingScaleLevel creation proposal by ID
            operationId: getCreateRatingScaleLevel
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateRatingScaleLevel'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get RatingScaleLevel creation proposal
            tags:
                - RatingScaleLevels
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
            - description: CreateRatingScaleLevel ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgID}/createRatingScales:
        get:
            description: List all createRatingScales proposals. These are proposed changes to create new RatingScale records that may be automatically approved or require manual approval depending on system configuration.
            operationId: listCreateRatingScale
            parameters:
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination (base64 encoded)
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListCreateRatingScaleResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List RatingScale creation proposals
            tags:
                - RatingScales
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
        post:
            description: Create a new proposal to add a RatingScale record. The proposal may be automatically approved or require manual approval depending on system configuration.
            operationId: createCreateRatingScale
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateCreateRatingScaleRequest'
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateRatingScale'
                    description: Created successfully
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Propose creation of RatingScale
            tags:
                - RatingScales
                - Proposals
    /{orgID}/createRatingScales/{id}:
        get:
            description: Get details of a specific RatingScale creation proposal by ID
            operationId: getCreateRatingScale
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateRatingScale'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get RatingScale creation proposal
            tags:
                - RatingScales
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
            - description: CreateRatingScale ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgID}/createSkillDefinitionTypes:
        get:
            description: List all createSkillDefinitionTypes proposals. These are proposed changes to create new SkillDefinitionType records that may be automatically approved or require manual approval depending on system configuration.
            operationId: listCreateSkillDefinitionType
            parameters:
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination (base64 encoded)
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListCreateSkillDefinitionTypeResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List SkillDefinitionType creation proposals
            tags:
                - SkillDefinitionTypes
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
        post:
            description: Create a new proposal to add a SkillDefinitionType record. The proposal may be automatically approved or require manual approval depending on system configuration.
            operationId: createCreateSkillDefinitionType
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateCreateSkillDefinitionTypeRequest'
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateSkillDefinitionType'
                    description: Created successfully
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Propose creation of SkillDefinitionType
            tags:
                - SkillDefinitionTypes
                - Proposals
    /{orgID}/createSkillDefinitionTypes/{id}:
        get:
            description: Get details of a specific SkillDefinitionType creation proposal by ID
            operationId: getCreateSkillDefinitionType
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateSkillDefinitionType'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get SkillDefinitionType creation proposal
            tags:
                - SkillDefinitionTypes
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
            - description: CreateSkillDefinitionType ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgID}/createSkillDefinitions:
        get:
            description: |-
                List all createSkillDefinitions proposals. These are proposed changes to create new SkillDefinition records that may be automatically approved or require manual approval depending on system configuration.

                **Filter Syntax:**
                - Filters use exact match only
                - Multiple filters are combined with AND logic
                - Filterable fields: ratingScaleID, typeID
                - Example: `?employee_id=abc-123&status=active`
            operationId: listCreateSkillDefinition
            parameters:
                - description: Filter by ratingScaleID (exact match)
                  in: query
                  name: ratingScaleID
                  schema:
                    type: string
                - description: Filter by typeID (exact match)
                  in: query
                  name: typeID
                  schema:
                    type: string
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination (base64 encoded)
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListCreateSkillDefinitionResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List SkillDefinition creation proposals
            tags:
                - SkillDefinitions
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
        post:
            description: Create a new proposal to add a SkillDefinition record. The proposal may be automatically approved or require manual approval depending on system configuration.
            operationId: createCreateSkillDefinition
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateCreateSkillDefinitionRequest'
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateSkillDefinition'
                    description: Created successfully
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Propose creation of SkillDefinition
            tags:
                - SkillDefinitions
                - Proposals
    /{orgID}/createSkillDefinitions/{id}:
        get:
            description: Get details of a specific SkillDefinition creation proposal by ID
            operationId: getCreateSkillDefinition
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateSkillDefinition'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get SkillDefinition creation proposal
            tags:
                - SkillDefinitions
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
            - description: CreateSkillDefinition ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgID}/createSkillPlannings:
        get:
            description: List all createSkillPlannings proposals. These are proposed changes to create new SkillPlanning records that may be automatically approved or require manual approval depending on system configuration.
            operationId: listCreateSkillPlanning
            parameters:
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination (base64 encoded)
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListCreateSkillPlanningResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List SkillPlanning creation proposals
            tags:
                - SkillPlannings
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
        post:
            description: Create a new proposal to add a SkillPlanning record. The proposal may be automatically approved or require manual approval depending on system configuration.
            operationId: createCreateSkillPlanning
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateCreateSkillPlanningRequest'
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateSkillPlanning'
                    description: Created successfully
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Propose creation of SkillPlanning
            tags:
                - SkillPlannings
                - Proposals
    /{orgID}/createSkillPlannings/{id}:
        get:
            description: Get details of a specific SkillPlanning creation proposal by ID
            operationId: getCreateSkillPlanning
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateSkillPlanning'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get SkillPlanning creation proposal
            tags:
                - SkillPlannings
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
            - description: CreateSkillPlanning ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgID}/createSkillResults:
        get:
            description: |-
                List all createSkillResults proposals. These are proposed changes to create new SkillResult records that may be automatically approved or require manual approval depending on system configuration.

                **Filter Syntax:**
                - Filters use exact match only
                - Multiple filters are combined with AND logic
                - Filterable fields: typeOfProofID, scoreID
                - Example: `?employee_id=abc-123&status=active`
            operationId: listCreateSkillResult
            parameters:
                - description: Filter by typeOfProofID (exact match)
                  in: query
                  name: typeOfProofID
                  schema:
                    type: string
                - description: Filter by scoreID (exact match)
                  in: query
                  name: scoreID
                  schema:
                    type: string
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination (base64 encoded)
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListCreateSkillResultResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List SkillResult creation proposals
            tags:
                - SkillResults
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
        post:
            description: Create a new proposal to add a SkillResult record. The proposal may be automatically approved or require manual approval depending on system configuration.
            operationId: createCreateSkillResult
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateCreateSkillResultRequest'
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateSkillResult'
                    description: Created successfully
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Propose creation of SkillResult
            tags:
                - SkillResults
                - Proposals
    /{orgID}/createSkillResults/{id}:
        get:
            description: Get details of a specific SkillResult creation proposal by ID
            operationId: getCreateSkillResult
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateSkillResult'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get SkillResult creation proposal
            tags:
                - SkillResults
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
            - description: CreateSkillResult ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgID}/createTypesOfProof:
        get:
            description: |-
                List all createTypesOfProof proposals. These are proposed changes to create new TypesOfProof records that may be automatically approved or require manual approval depending on system configuration.

                **Filter Syntax:**
                - Filters use exact match only
                - Multiple filters are combined with AND logic
                - Filterable fields: skillDefinitionID
                - Example: `?employee_id=abc-123&status=active`
            operationId: listCreateTypesOfProof
            parameters:
                - description: Filter by skillDefinitionID (exact match)
                  in: query
                  name: skillDefinitionID
                  schema:
                    type: string
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination (base64 encoded)
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListCreateTypesOfProofResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List TypesOfProof creation proposals
            tags:
                - TypesOfProof
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
        post:
            description: Create a new proposal to add a TypesOfProof record. The proposal may be automatically approved or require manual approval depending on system configuration.
            operationId: createCreateTypesOfProof
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateCreateTypesOfProofRequest'
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateTypesOfProof'
                    description: Created successfully
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Propose creation of TypesOfProof
            tags:
                - TypesOfProof
                - Proposals
    /{orgID}/createTypesOfProof/{id}:
        get:
            description: Get details of a specific TypesOfProof creation proposal by ID
            operationId: getCreateTypesOfProof
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateTypesOfProof'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get TypesOfProof creation proposal
            tags:
                - TypesOfProof
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
            - description: CreateTypesOfProof ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgID}/customFieldDefinitions:
        get:
            description: |-
                List customFieldDefinitions

                **Filter Syntax:**
                - Filters use exact match only
                - Multiple filters are combined with AND logic
                - Filterable fields: entityDefinitionID
                - Example: `?employee_id=abc-123&status=active`
            operationId: listCustomFieldDefinition
            parameters:
                - description: Filter by entityDefinitionID (exact match)
                  in: query
                  name: entityDefinitionID
                  schema:
                    type: string
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination (base64 encoded)
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListCustomFieldDefinitionResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List customFieldDefinitions
            tags:
                - CustomFieldDefinitions
                - Querying
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
    /{orgID}/customFieldDefinitions/{id}:
        get:
            description: Get a single customFieldDefinition by ID
            operationId: getCustomFieldDefinition
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CustomFieldDefinition'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get CustomFieldDefinition
            tags:
                - CustomFieldDefinitions
                - Querying
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
            - description: CustomFieldDefinition ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgID}/deleteCustomFieldDefinitions:
        get:
            description: List all deleteCustomFieldDefinitions proposals. These are proposed changes to delete CustomFieldDefinition records that may be automatically approved or require manual approval depending on system configuration.
            operationId: listDeleteCustomFieldDefinition
            parameters:
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination (base64 encoded)
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListDeleteCustomFieldDefinitionResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List CustomFieldDefinition deletion proposals
            tags:
                - CustomFieldDefinitions
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
        post:
            description: Create a new proposal to add a CustomFieldDefinition record. The proposal may be automatically approved or require manual approval depending on system configuration.
            operationId: createDeleteCustomFieldDefinition
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateDeleteCustomFieldDefinitionRequest'
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteCustomFieldDefinition'
                    description: Created successfully
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Propose creation of CustomFieldDefinition
            tags:
                - CustomFieldDefinitions
                - Proposals
    /{orgID}/deleteCustomFieldDefinitions/{id}:
        get:
            description: Get details of a specific CustomFieldDefinition deletion proposal by ID
            operationId: getDeleteCustomFieldDefinition
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteCustomFieldDefinition'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get CustomFieldDefinition deletion proposal
            tags:
                - CustomFieldDefinitions
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
            - description: DeleteCustomFieldDefinition ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgID}/deleteEmployeeUnavailabilities:
        get:
            description: List all deleteEmployeeUnavailabilities proposals. These are proposed changes to delete EmployeeUnavailability records that may be automatically approved or require manual approval depending on system configuration.
            operationId: listDeleteEmployeeUnavailability
            parameters:
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination (base64 encoded)
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListDeleteEmployeeUnavailabilityResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List EmployeeUnavailability deletion proposals
            tags:
                - EmployeeUnavailabilities
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
        post:
            description: Create a new proposal to add a EmployeeUnavailability record. The proposal may be automatically approved or require manual approval depending on system configuration.
            operationId: createDeleteEmployeeUnavailability
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateDeleteEmployeeUnavailabilityRequest'
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteEmployeeUnavailability'
                    description: Created successfully
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Propose creation of EmployeeUnavailability
            tags:
                - EmployeeUnavailabilities
                - Proposals
    /{orgID}/deleteEmployeeUnavailabilities/{id}:
        get:
            description: Get details of a specific EmployeeUnavailability deletion proposal by ID
            operationId: getDeleteEmployeeUnavailability
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteEmployeeUnavailability'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get EmployeeUnavailability deletion proposal
            tags:
                - EmployeeUnavailabilities
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
            - description: DeleteEmployeeUnavailability ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgID}/deleteEmployees:
        get:
            description: List all deleteEmployees proposals. These are proposed changes to delete Employee records that may be automatically approved or require manual approval depending on system configuration.
            operationId: listDeleteEmployee
            parameters:
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination (base64 encoded)
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListDeleteEmployeeResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List Employee deletion proposals
            tags:
                - Employees
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
        post:
            description: Create a new proposal to add a Employee record. The proposal may be automatically approved or require manual approval depending on system configuration.
            operationId: createDeleteEmployee
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateDeleteEmployeeRequest'
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteEmployee'
                    description: Created successfully
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Propose creation of Employee
            tags:
                - Employees
                - Proposals
    /{orgID}/deleteEmployees/{id}:
        get:
            description: Get details of a specific Employee deletion proposal by ID
            operationId: getDeleteEmployee
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteEmployee'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get Employee deletion proposal
            tags:
                - Employees
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
            - description: DeleteEmployee ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgID}/deleteEmploymentContractTypes:
        get:
            description: List all deleteEmploymentContractTypes proposals. These are proposed changes to delete EmploymentContractType records that may be automatically approved or require manual approval depending on system configuration.
            operationId: listDeleteEmploymentContractType
            parameters:
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination (base64 encoded)
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListDeleteEmploymentContractTypeResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List EmploymentContractType deletion proposals
            tags:
                - EmploymentContractTypes
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
        post:
            description: Create a new proposal to add a EmploymentContractType record. The proposal may be automatically approved or require manual approval depending on system configuration.
            operationId: createDeleteEmploymentContractType
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateDeleteEmploymentContractTypeRequest'
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteEmploymentContractType'
                    description: Created successfully
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Propose creation of EmploymentContractType
            tags:
                - EmploymentContractTypes
                - Proposals
    /{orgID}/deleteEmploymentContractTypes/{id}:
        get:
            description: Get details of a specific EmploymentContractType deletion proposal by ID
            operationId: getDeleteEmploymentContractType
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteEmploymentContractType'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get EmploymentContractType deletion proposal
            tags:
                - EmploymentContractTypes
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
            - description: DeleteEmploymentContractType ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgID}/deleteEmploymentContracts:
        get:
            description: List all deleteEmploymentContracts proposals. These are proposed changes to delete EmploymentContract records that may be automatically approved or require manual approval depending on system configuration.
            operationId: listDeleteEmploymentContract
            parameters:
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination (base64 encoded)
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListDeleteEmploymentContractResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List EmploymentContract deletion proposals
            tags:
                - EmploymentContracts
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
        post:
            description: Create a new proposal to add a EmploymentContract record. The proposal may be automatically approved or require manual approval depending on system configuration.
            operationId: createDeleteEmploymentContract
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateDeleteEmploymentContractRequest'
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteEmploymentContract'
                    description: Created successfully
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Propose creation of EmploymentContract
            tags:
                - EmploymentContracts
                - Proposals
    /{orgID}/deleteEmploymentContracts/{id}:
        get:
            description: Get details of a specific EmploymentContract deletion proposal by ID
            operationId: getDeleteEmploymentContract
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteEmploymentContract'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get EmploymentContract deletion proposal
            tags:
                - EmploymentContracts
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
            - description: DeleteEmploymentContract ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgID}/deleteEmploymentRelationTypes:
        get:
            description: List all deleteEmploymentRelationTypes proposals. These are proposed changes to delete EmploymentRelationType records that may be automatically approved or require manual approval depending on system configuration.
            operationId: listDeleteEmploymentRelationType
            parameters:
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination (base64 encoded)
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListDeleteEmploymentRelationTypeResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List EmploymentRelationType deletion proposals
            tags:
                - EmploymentRelationTypes
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
        post:
            description: Create a new proposal to add a EmploymentRelationType record. The proposal may be automatically approved or require manual approval depending on system configuration.
            operationId: createDeleteEmploymentRelationType
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateDeleteEmploymentRelationTypeRequest'
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteEmploymentRelationType'
                    description: Created successfully
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Propose creation of EmploymentRelationType
            tags:
                - EmploymentRelationTypes
                - Proposals
    /{orgID}/deleteEmploymentRelationTypes/{id}:
        get:
            description: Get details of a specific EmploymentRelationType deletion proposal by ID
            operationId: getDeleteEmploymentRelationType
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteEmploymentRelationType'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get EmploymentRelationType deletion proposal
            tags:
                - EmploymentRelationTypes
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
            - description: DeleteEmploymentRelationType ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgID}/deleteEmploymentRelations:
        get:
            description: List all deleteEmploymentRelations proposals. These are proposed changes to delete EmploymentRelation records that may be automatically approved or require manual approval depending on system configuration.
            operationId: listDeleteEmploymentRelation
            parameters:
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination (base64 encoded)
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListDeleteEmploymentRelationResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List EmploymentRelation deletion proposals
            tags:
                - EmploymentRelations
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
        post:
            description: Create a new proposal to add a EmploymentRelation record. The proposal may be automatically approved or require manual approval depending on system configuration.
            operationId: createDeleteEmploymentRelation
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateDeleteEmploymentRelationRequest'
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteEmploymentRelation'
                    description: Created successfully
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Propose creation of EmploymentRelation
            tags:
                - EmploymentRelations
                - Proposals
    /{orgID}/deleteEmploymentRelations/{id}:
        get:
            description: Get details of a specific EmploymentRelation deletion proposal by ID
            operationId: getDeleteEmploymentRelation
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteEmploymentRelation'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get EmploymentRelation deletion proposal
            tags:
                - EmploymentRelations
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
            - description: DeleteEmploymentRelation ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgID}/deleteGroupingTypes:
        get:
            description: List all deleteGroupingTypes proposals. These are proposed changes to delete GroupingType records that may be automatically approved or require manual approval depending on system configuration.
            operationId: listDeleteGroupingType
            parameters:
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination (base64 encoded)
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListDeleteGroupingTypeResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List GroupingType deletion proposals
            tags:
                - GroupingTypes
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
        post:
            description: Create a new proposal to add a GroupingType record. The proposal may be automatically approved or require manual approval depending on system configuration.
            operationId: createDeleteGroupingType
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateDeleteGroupingTypeRequest'
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteGroupingType'
                    description: Created successfully
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Propose creation of GroupingType
            tags:
                - GroupingTypes
                - Proposals
    /{orgID}/deleteGroupingTypes/{id}:
        get:
            description: Get details of a specific GroupingType deletion proposal by ID
            operationId: getDeleteGroupingType
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteGroupingType'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get GroupingType deletion proposal
            tags:
                - GroupingTypes
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
            - description: DeleteGroupingType ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgID}/deleteGroupings:
        get:
            description: List all deleteGroupings proposals. These are proposed changes to delete Grouping records that may be automatically approved or require manual approval depending on system configuration.
            operationId: listDeleteGrouping
            parameters:
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination (base64 encoded)
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListDeleteGroupingResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List Grouping deletion proposals
            tags:
                - Groupings
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
        post:
            description: Create a new proposal to add a Grouping record. The proposal may be automatically approved or require manual approval depending on system configuration.
            operationId: createDeleteGrouping
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateDeleteGroupingRequest'
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteGrouping'
                    description: Created successfully
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Propose creation of Grouping
            tags:
                - Groupings
                - Proposals
    /{orgID}/deleteGroupings/{id}:
        get:
            description: Get details of a specific Grouping deletion proposal by ID
            operationId: getDeleteGrouping
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteGrouping'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get Grouping deletion proposal
            tags:
                - Groupings
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
            - description: DeleteGrouping ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgID}/deleteMonitoringTraces:
        get:
            description: List all deleteMonitoringTraces proposals. These are proposed changes to delete MonitoringTrace records that may be automatically approved or require manual approval depending on system configuration.
            operationId: listDeleteMonitoringTrace
            parameters:
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination (base64 encoded)
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListDeleteMonitoringTraceResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List MonitoringTrace deletion proposals
            tags:
                - MonitoringTraces
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
        post:
            description: Create a new proposal to add a MonitoringTrace record. The proposal may be automatically approved or require manual approval depending on system configuration.
            operationId: createDeleteMonitoringTrace
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateDeleteMonitoringTraceRequest'
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteMonitoringTrace'
                    description: Created successfully
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Propose creation of MonitoringTrace
            tags:
                - MonitoringTraces
                - Proposals
    /{orgID}/deleteMonitoringTraces/{id}:
        get:
            description: Get details of a specific MonitoringTrace deletion proposal by ID
            operationId: getDeleteMonitoringTrace
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteMonitoringTrace'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get MonitoringTrace deletion proposal
            tags:
                - MonitoringTraces
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
            - description: DeleteMonitoringTrace ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgID}/deletePositionAssignments:
        get:
            description: List all deletePositionAssignments proposals. These are proposed changes to delete PositionAssignment records that may be automatically approved or require manual approval depending on system configuration.
            operationId: listDeletePositionAssignment
            parameters:
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination (base64 encoded)
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListDeletePositionAssignmentResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List PositionAssignment deletion proposals
            tags:
                - PositionAssignments
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
        post:
            description: Create a new proposal to add a PositionAssignment record. The proposal may be automatically approved or require manual approval depending on system configuration.
            operationId: createDeletePositionAssignment
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateDeletePositionAssignmentRequest'
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeletePositionAssignment'
                    description: Created successfully
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Propose creation of PositionAssignment
            tags:
                - PositionAssignments
                - Proposals
    /{orgID}/deletePositionAssignments/{id}:
        get:
            description: Get details of a specific PositionAssignment deletion proposal by ID
            operationId: getDeletePositionAssignment
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeletePositionAssignment'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get PositionAssignment deletion proposal
            tags:
                - PositionAssignments
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
            - description: DeletePositionAssignment ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgID}/deleteRatingScaleLevelDescriptors:
        get:
            description: List all deleteRatingScaleLevelDescriptors proposals. These are proposed changes to delete RatingScaleLevelDescriptor records that may be automatically approved or require manual approval depending on system configuration.
            operationId: listDeleteRatingScaleLevelDescriptor
            parameters:
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination (base64 encoded)
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListDeleteRatingScaleLevelDescriptorResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List RatingScaleLevelDescriptor deletion proposals
            tags:
                - RatingScaleLevelDescriptors
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
        post:
            description: Create a new proposal to add a RatingScaleLevelDescriptor record. The proposal may be automatically approved or require manual approval depending on system configuration.
            operationId: createDeleteRatingScaleLevelDescriptor
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateDeleteRatingScaleLevelDescriptorRequest'
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteRatingScaleLevelDescriptor'
                    description: Created successfully
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Propose creation of RatingScaleLevelDescriptor
            tags:
                - RatingScaleLevelDescriptors
                - Proposals
    /{orgID}/deleteRatingScaleLevelDescriptors/{id}:
        get:
            description: Get details of a specific RatingScaleLevelDescriptor deletion proposal by ID
            operationId: getDeleteRatingScaleLevelDescriptor
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteRatingScaleLevelDescriptor'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get RatingScaleLevelDescriptor deletion proposal
            tags:
                - RatingScaleLevelDescriptors
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
            - description: DeleteRatingScaleLevelDescriptor ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgID}/deleteRatingScaleLevels:
        get:
            description: List all deleteRatingScaleLevels proposals. These are proposed changes to delete RatingScaleLevel records that may be automatically approved or require manual approval depending on system configuration.
            operationId: listDeleteRatingScaleLevel
            parameters:
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination (base64 encoded)
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListDeleteRatingScaleLevelResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List RatingScaleLevel deletion proposals
            tags:
                - RatingScaleLevels
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
        post:
            description: Create a new proposal to add a RatingScaleLevel record. The proposal may be automatically approved or require manual approval depending on system configuration.
            operationId: createDeleteRatingScaleLevel
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateDeleteRatingScaleLevelRequest'
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteRatingScaleLevel'
                    description: Created successfully
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Propose creation of RatingScaleLevel
            tags:
                - RatingScaleLevels
                - Proposals
    /{orgID}/deleteRatingScaleLevels/{id}:
        get:
            description: Get details of a specific RatingScaleLevel deletion proposal by ID
            operationId: getDeleteRatingScaleLevel
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteRatingScaleLevel'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get RatingScaleLevel deletion proposal
            tags:
                - RatingScaleLevels
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
            - description: DeleteRatingScaleLevel ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgID}/deleteRatingScales:
        get:
            description: List all deleteRatingScales proposals. These are proposed changes to delete RatingScale records that may be automatically approved or require manual approval depending on system configuration.
            operationId: listDeleteRatingScale
            parameters:
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination (base64 encoded)
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListDeleteRatingScaleResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List RatingScale deletion proposals
            tags:
                - RatingScales
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
        post:
            description: Create a new proposal to add a RatingScale record. The proposal may be automatically approved or require manual approval depending on system configuration.
            operationId: createDeleteRatingScale
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateDeleteRatingScaleRequest'
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteRatingScale'
                    description: Created successfully
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Propose creation of RatingScale
            tags:
                - RatingScales
                - Proposals
    /{orgID}/deleteRatingScales/{id}:
        get:
            description: Get details of a specific RatingScale deletion proposal by ID
            operationId: getDeleteRatingScale
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteRatingScale'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get RatingScale deletion proposal
            tags:
                - RatingScales
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
            - description: DeleteRatingScale ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgID}/deleteSkillDefinitionTypes:
        get:
            description: List all deleteSkillDefinitionTypes proposals. These are proposed changes to delete SkillDefinitionType records that may be automatically approved or require manual approval depending on system configuration.
            operationId: listDeleteSkillDefinitionType
            parameters:
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination (base64 encoded)
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListDeleteSkillDefinitionTypeResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List SkillDefinitionType deletion proposals
            tags:
                - SkillDefinitionTypes
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
        post:
            description: Create a new proposal to add a SkillDefinitionType record. The proposal may be automatically approved or require manual approval depending on system configuration.
            operationId: createDeleteSkillDefinitionType
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateDeleteSkillDefinitionTypeRequest'
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteSkillDefinitionType'
                    description: Created successfully
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Propose creation of SkillDefinitionType
            tags:
                - SkillDefinitionTypes
                - Proposals
    /{orgID}/deleteSkillDefinitionTypes/{id}:
        get:
            description: Get details of a specific SkillDefinitionType deletion proposal by ID
            operationId: getDeleteSkillDefinitionType
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteSkillDefinitionType'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get SkillDefinitionType deletion proposal
            tags:
                - SkillDefinitionTypes
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
            - description: DeleteSkillDefinitionType ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgID}/deleteSkillDefinitions:
        get:
            description: List all deleteSkillDefinitions proposals. These are proposed changes to delete SkillDefinition records that may be automatically approved or require manual approval depending on system configuration.
            operationId: listDeleteSkillDefinition
            parameters:
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination (base64 encoded)
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListDeleteSkillDefinitionResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List SkillDefinition deletion proposals
            tags:
                - SkillDefinitions
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
        post:
            description: Create a new proposal to add a SkillDefinition record. The proposal may be automatically approved or require manual approval depending on system configuration.
            operationId: createDeleteSkillDefinition
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateDeleteSkillDefinitionRequest'
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteSkillDefinition'
                    description: Created successfully
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Propose creation of SkillDefinition
            tags:
                - SkillDefinitions
                - Proposals
    /{orgID}/deleteSkillDefinitions/{id}:
        get:
            description: Get details of a specific SkillDefinition deletion proposal by ID
            operationId: getDeleteSkillDefinition
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteSkillDefinition'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get SkillDefinition deletion proposal
            tags:
                - SkillDefinitions
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
            - description: DeleteSkillDefinition ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgID}/deleteSkillPlannings:
        get:
            description: List all deleteSkillPlannings proposals. These are proposed changes to delete SkillPlanning records that may be automatically approved or require manual approval depending on system configuration.
            operationId: listDeleteSkillPlanning
            parameters:
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination (base64 encoded)
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListDeleteSkillPlanningResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List SkillPlanning deletion proposals
            tags:
                - SkillPlannings
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
        post:
            description: Create a new proposal to add a SkillPlanning record. The proposal may be automatically approved or require manual approval depending on system configuration.
            operationId: createDeleteSkillPlanning
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateDeleteSkillPlanningRequest'
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteSkillPlanning'
                    description: Created successfully
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Propose creation of SkillPlanning
            tags:
                - SkillPlannings
                - Proposals
    /{orgID}/deleteSkillPlannings/{id}:
        get:
            description: Get details of a specific SkillPlanning deletion proposal by ID
            operationId: getDeleteSkillPlanning
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteSkillPlanning'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get SkillPlanning deletion proposal
            tags:
                - SkillPlannings
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
            - description: DeleteSkillPlanning ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgID}/deleteSkillResults:
        get:
            description: List all deleteSkillResults proposals. These are proposed changes to delete SkillResult records that may be automatically approved or require manual approval depending on system configuration.
            operationId: listDeleteSkillResult
            parameters:
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination (base64 encoded)
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListDeleteSkillResultResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List SkillResult deletion proposals
            tags:
                - SkillResults
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
        post:
            description: Create a new proposal to add a SkillResult record. The proposal may be automatically approved or require manual approval depending on system configuration.
            operationId: createDeleteSkillResult
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateDeleteSkillResultRequest'
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteSkillResult'
                    description: Created successfully
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Propose creation of SkillResult
            tags:
                - SkillResults
                - Proposals
    /{orgID}/deleteSkillResults/{id}:
        get:
            description: Get details of a specific SkillResult deletion proposal by ID
            operationId: getDeleteSkillResult
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteSkillResult'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get SkillResult deletion proposal
            tags:
                - SkillResults
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
            - description: DeleteSkillResult ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgID}/deleteTypesOfProof:
        get:
            description: List all deleteTypesOfProof proposals. These are proposed changes to delete TypesOfProof records that may be automatically approved or require manual approval depending on system configuration.
            operationId: listDeleteTypesOfProof
            parameters:
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination (base64 encoded)
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListDeleteTypesOfProofResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List TypesOfProof deletion proposals
            tags:
                - TypesOfProof
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
        post:
            description: Create a new proposal to add a TypesOfProof record. The proposal may be automatically approved or require manual approval depending on system configuration.
            operationId: createDeleteTypesOfProof
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateDeleteTypesOfProofRequest'
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteTypesOfProof'
                    description: Created successfully
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Propose creation of TypesOfProof
            tags:
                - TypesOfProof
                - Proposals
    /{orgID}/deleteTypesOfProof/{id}:
        get:
            description: Get details of a specific TypesOfProof deletion proposal by ID
            operationId: getDeleteTypesOfProof
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteTypesOfProof'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get TypesOfProof deletion proposal
            tags:
                - TypesOfProof
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
            - description: DeleteTypesOfProof ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgID}/employeeUnavailabilities:
        get:
            description: |-
                List employeeUnavailabilities

                **Filter Syntax:**
                - Filters use exact match only
                - Multiple filters are combined with AND logic
                - Filterable fields: employeeID
                - Example: `?employee_id=abc-123&status=active`
            operationId: listEmployeeUnavailability
            parameters:
                - description: Filter by employeeID (exact match)
                  in: query
                  name: employeeID
                  schema:
                    type: string
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination (base64 encoded)
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListEmployeeUnavailabilityResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List employeeUnavailabilities
            tags:
                - EmployeeUnavailabilities
                - Querying
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
    /{orgID}/employeeUnavailabilities/{id}:
        get:
            description: Get a single employeeUnavailability by ID
            operationId: getEmployeeUnavailability
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/EmployeeUnavailability'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get EmployeeUnavailability
            tags:
                - EmployeeUnavailabilities
                - Querying
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
            - description: EmployeeUnavailability ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgID}/employees:
        get:
            description: List employees
            operationId: listEmployee
            parameters:
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination (base64 encoded)
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListEmployeeResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List employees
            tags:
                - Employees
                - Querying
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
    /{orgID}/employees/{id}:
        get:
            description: Get a single employee by ID
            operationId: getEmployee
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Employee'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get Employee
            tags:
                - Employees
                - Querying
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
            - description: Employee ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgID}/employmentContractTypes:
        get:
            description: List employmentContractTypes
            operationId: listEmploymentContractType
            parameters:
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination (base64 encoded)
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListEmploymentContractTypeResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List employmentContractTypes
            tags:
                - EmploymentContractTypes
                - Querying
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
    /{orgID}/employmentContractTypes/{id}:
        get:
            description: Get a single employmentContractType by ID
            operationId: getEmploymentContractType
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/EmploymentContractType'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get EmploymentContractType
            tags:
                - EmploymentContractTypes
                - Querying
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
            - description: EmploymentContractType ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgID}/employmentContracts:
        get:
            description: |-
                List employmentContracts

                **Filter Syntax:**
                - Filters use exact match only
                - Multiple filters are combined with AND logic
                - Filterable fields: contractTypeID, employeeID
                - Example: `?employee_id=abc-123&status=active`
            operationId: listEmploymentContract
            parameters:
                - description: Filter by contractTypeID (exact match)
                  in: query
                  name: contractTypeID
                  schema:
                    type: string
                - description: Filter by employeeID (exact match)
                  in: query
                  name: employeeID
                  schema:
                    type: string
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination (base64 encoded)
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListEmploymentContractResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List employmentContracts
            tags:
                - EmploymentContracts
                - Querying
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
    /{orgID}/employmentContracts/{id}:
        get:
            description: Get a single employmentContract by ID
            operationId: getEmploymentContract
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/EmploymentContract'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get EmploymentContract
            tags:
                - EmploymentContracts
                - Querying
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
            - description: EmploymentContract ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgID}/employmentRelationTypes:
        get:
            description: List employmentRelationTypes
            operationId: listEmploymentRelationType
            parameters:
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination (base64 encoded)
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListEmploymentRelationTypeResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List employmentRelationTypes
            tags:
                - EmploymentRelationTypes
                - Querying
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
    /{orgID}/employmentRelationTypes/{id}:
        get:
            description: Get a single employmentRelationType by ID
            operationId: getEmploymentRelationType
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/EmploymentRelationType'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get EmploymentRelationType
            tags:
                - EmploymentRelationTypes
                - Querying
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
            - description: EmploymentRelationType ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgID}/employmentRelations:
        get:
            description: |-
                List employmentRelations

                **Filter Syntax:**
                - Filters use exact match only
                - Multiple filters are combined with AND logic
                - Filterable fields: toEmployeeID, fromEmployeeID, relationTypeID
                - Example: `?employee_id=abc-123&status=active`
            operationId: listEmploymentRelation
            parameters:
                - description: Filter by toEmployeeID (exact match)
                  in: query
                  name: toEmployeeID
                  schema:
                    type: string
                - description: Filter by fromEmployeeID (exact match)
                  in: query
                  name: fromEmployeeID
                  schema:
                    type: string
                - description: Filter by relationTypeID (exact match)
                  in: query
                  name: relationTypeID
                  schema:
                    type: string
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination (base64 encoded)
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListEmploymentRelationResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List employmentRelations
            tags:
                - EmploymentRelations
                - Querying
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
    /{orgID}/employmentRelations/{id}:
        get:
            description: Get a single employmentRelation by ID
            operationId: getEmploymentRelation
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/EmploymentRelation'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get EmploymentRelation
            tags:
                - EmploymentRelations
                - Querying
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
            - description: EmploymentRelation ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgID}/entityDefinitions:
        get:
            description: List entityDefinitions
            operationId: listEntityDefinition
            parameters:
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination (base64 encoded)
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListEntityDefinitionResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List entityDefinitions
            tags:
                - EntityDefinitions
                - Querying
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
    /{orgID}/entityDefinitions/{id}:
        get:
            description: Get a single entityDefinition by ID
            operationId: getEntityDefinition
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/EntityDefinition'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get EntityDefinition
            tags:
                - EntityDefinitions
                - Querying
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
            - description: EntityDefinition ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgID}/groupingTypes:
        get:
            description: List groupingTypes
            operationId: listGroupingType
            parameters:
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination (base64 encoded)
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListGroupingTypeResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List groupingTypes
            tags:
                - GroupingTypes
                - Querying
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
    /{orgID}/groupingTypes/{id}:
        get:
            description: Get a single groupingType by ID
            operationId: getGroupingType
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GroupingType'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get GroupingType
            tags:
                - GroupingTypes
                - Querying
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
            - description: GroupingType ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgID}/groupings:
        get:
            description: |-
                List groupings

                **Filter Syntax:**
                - Filters use exact match only
                - Multiple filters are combined with AND logic
                - Filterable fields: typeID, definedInGroupingID
                - Example: `?employee_id=abc-123&status=active`
            operationId: listGrouping
            parameters:
                - description: Filter by typeID (exact match)
                  in: query
                  name: typeID
                  schema:
                    type: string
                - description: Filter by definedInGroupingID (exact match)
                  in: query
                  name: definedInGroupingID
                  schema:
                    type: string
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination (base64 encoded)
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListGroupingResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List groupings
            tags:
                - Groupings
                - Querying
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
    /{orgID}/groupings/{id}:
        get:
            description: Get a single grouping by ID
            operationId: getGrouping
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Grouping'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get Grouping
            tags:
                - Groupings
                - Querying
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
            - description: Grouping ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgID}/meta:
        get:
            description: Returns metadata about available API resources and their operations
            operationId: getMeta
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                description: Array of resource definitions
                                items:
                                    properties:
                                        dbName:
                                            description: Database table name
                                            type: string
                                        fields:
                                            description: Resource fields
                                            items:
                                                type: object
                                            type: array
                                        name:
                                            description: Resource name
                                            type: string
                                        operations:
                                            description: Supported operations
                                            items:
                                                enum:
                                                    - list
                                                    - get
                                                    - create
                                                    - update
                                                    - delete
                                                type: string
                                            type: array
                                        restPath:
                                            description: REST API path
                                            type: string
                                        schemaName:
                                            description: Database schema name
                                            type: string
                                    type: object
                                type: array
                    description: API metadata
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get API metadata
            tags:
                - Meta
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
    /{orgID}/monitoringTraces:
        get:
            description: List monitoringTraces
            operationId: listMonitoringTrace
            parameters:
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination (base64 encoded)
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListMonitoringTraceResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List monitoringTraces
            tags:
                - MonitoringTraces
                - Querying
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
    /{orgID}/monitoringTraces/{id}:
        get:
            description: Get a single monitoringTrace by ID
            operationId: getMonitoringTrace
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/MonitoringTrace'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get MonitoringTrace
            tags:
                - MonitoringTraces
                - Querying
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
            - description: MonitoringTrace ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgID}/positionAssignments:
        get:
            description: |-
                List positionAssignments

                **Filter Syntax:**
                - Filters use exact match only
                - Multiple filters are combined with AND logic
                - Filterable fields: employeeID
                - Example: `?employee_id=abc-123&status=active`
            operationId: listPositionAssignment
            parameters:
                - description: Filter by employeeID (exact match)
                  in: query
                  name: employeeID
                  schema:
                    type: string
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination (base64 encoded)
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListPositionAssignmentResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List positionAssignments
            tags:
                - PositionAssignments
                - Querying
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
    /{orgID}/positionAssignments/{id}:
        get:
            description: Get a single positionAssignment by ID
            operationId: getPositionAssignment
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PositionAssignment'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get PositionAssignment
            tags:
                - PositionAssignments
                - Querying
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
            - description: PositionAssignment ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgID}/ratingScaleLevelDescriptors:
        get:
            description: |-
                List ratingScaleLevelDescriptors

                **Filter Syntax:**
                - Filters use exact match only
                - Multiple filters are combined with AND logic
                - Filterable fields: ratingScaleLevelID, skillDefinitionID
                - Example: `?employee_id=abc-123&status=active`
            operationId: listRatingScaleLevelDescriptor
            parameters:
                - description: Filter by ratingScaleLevelID (exact match)
                  in: query
                  name: ratingScaleLevelID
                  schema:
                    type: string
                - description: Filter by skillDefinitionID (exact match)
                  in: query
                  name: skillDefinitionID
                  schema:
                    type: string
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination (base64 encoded)
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListRatingScaleLevelDescriptorResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List ratingScaleLevelDescriptors
            tags:
                - RatingScaleLevelDescriptors
                - Querying
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
    /{orgID}/ratingScaleLevelDescriptors/{id}:
        get:
            description: Get a single ratingScaleLevelDescriptor by ID
            operationId: getRatingScaleLevelDescriptor
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RatingScaleLevelDescriptor'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get RatingScaleLevelDescriptor
            tags:
                - RatingScaleLevelDescriptors
                - Querying
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
            - description: RatingScaleLevelDescriptor ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgID}/ratingScaleLevels:
        get:
            description: |-
                List ratingScaleLevels

                **Filter Syntax:**
                - Filters use exact match only
                - Multiple filters are combined with AND logic
                - Filterable fields: ratingScaleID
                - Example: `?employee_id=abc-123&status=active`
            operationId: listRatingScaleLevel
            parameters:
                - description: Filter by ratingScaleID (exact match)
                  in: query
                  name: ratingScaleID
                  schema:
                    type: string
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination (base64 encoded)
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListRatingScaleLevelResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List ratingScaleLevels
            tags:
                - RatingScaleLevels
                - Querying
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
    /{orgID}/ratingScaleLevels/{id}:
        get:
            description: Get a single ratingScaleLevel by ID
            operationId: getRatingScaleLevel
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RatingScaleLevel'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get RatingScaleLevel
            tags:
                - RatingScaleLevels
                - Querying
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
            - description: RatingScaleLevel ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgID}/ratingScales:
        get:
            description: List ratingScales
            operationId: listRatingScale
            parameters:
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination (base64 encoded)
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListRatingScaleResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List ratingScales
            tags:
                - RatingScales
                - Querying
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
    /{orgID}/ratingScales/{id}:
        get:
            description: Get a single ratingScale by ID
            operationId: getRatingScale
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RatingScale'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get RatingScale
            tags:
                - RatingScales
                - Querying
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
            - description: RatingScale ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgID}/repositories:
        get:
            description: List repositories
            operationId: listRepository
            parameters:
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination (base64 encoded)
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListRepositoryResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List repositories
            tags:
                - Repositories
                - Querying
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
    /{orgID}/repositories/{id}:
        get:
            description: Get a single repository by ID
            operationId: getRepository
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Repository'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get Repository
            tags:
                - Repositories
                - Querying
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
            - description: Repository ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgID}/skillDefinitionTypes:
        get:
            description: List skillDefinitionTypes
            operationId: listSkillDefinitionType
            parameters:
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination (base64 encoded)
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListSkillDefinitionTypeResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List skillDefinitionTypes
            tags:
                - SkillDefinitionTypes
                - Querying
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
    /{orgID}/skillDefinitionTypes/{id}:
        get:
            description: Get a single skillDefinitionType by ID
            operationId: getSkillDefinitionType
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SkillDefinitionType'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get SkillDefinitionType
            tags:
                - SkillDefinitionTypes
                - Querying
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
            - description: SkillDefinitionType ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgID}/skillDefinitions:
        get:
            description: |-
                List skillDefinitions

                **Filter Syntax:**
                - Filters use exact match only
                - Multiple filters are combined with AND logic
                - Filterable fields: ratingScaleID, typeID
                - Example: `?employee_id=abc-123&status=active`
            operationId: listSkillDefinition
            parameters:
                - description: Filter by ratingScaleID (exact match)
                  in: query
                  name: ratingScaleID
                  schema:
                    type: string
                - description: Filter by typeID (exact match)
                  in: query
                  name: typeID
                  schema:
                    type: string
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination (base64 encoded)
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListSkillDefinitionResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List skillDefinitions
            tags:
                - SkillDefinitions
                - Querying
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
    /{orgID}/skillDefinitions/{id}:
        get:
            description: Get a single skillDefinition by ID
            operationId: getSkillDefinition
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SkillDefinition'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get SkillDefinition
            tags:
                - SkillDefinitions
                - Querying
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
            - description: SkillDefinition ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgID}/skillPlannings:
        get:
            description: List skillPlannings
            operationId: listSkillPlanning
            parameters:
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination (base64 encoded)
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListSkillPlanningResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List skillPlannings
            tags:
                - SkillPlannings
                - Querying
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
    /{orgID}/skillPlannings/{id}:
        get:
            description: Get a single skillPlanning by ID
            operationId: getSkillPlanning
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SkillPlanning'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get SkillPlanning
            tags:
                - SkillPlannings
                - Querying
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
            - description: SkillPlanning ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgID}/skillResults:
        get:
            description: |-
                List skillResults

                **Filter Syntax:**
                - Filters use exact match only
                - Multiple filters are combined with AND logic
                - Filterable fields: typeOfProofID, scoreID
                - Example: `?employee_id=abc-123&status=active`
            operationId: listSkillResult
            parameters:
                - description: Filter by typeOfProofID (exact match)
                  in: query
                  name: typeOfProofID
                  schema:
                    type: string
                - description: Filter by scoreID (exact match)
                  in: query
                  name: scoreID
                  schema:
                    type: string
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination (base64 encoded)
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListSkillResultResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List skillResults
            tags:
                - SkillResults
                - Querying
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
    /{orgID}/skillResults/{id}:
        get:
            description: Get a single skillResult by ID
            operationId: getSkillResult
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SkillResult'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get SkillResult
            tags:
                - SkillResults
                - Querying
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
            - description: SkillResult ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgID}/typesOfProof:
        get:
            description: |-
                List typesOfProof

                **Filter Syntax:**
                - Filters use exact match only
                - Multiple filters are combined with AND logic
                - Filterable fields: skillDefinitionID
                - Example: `?employee_id=abc-123&status=active`
            operationId: listTypesOfProof
            parameters:
                - description: Filter by skillDefinitionID (exact match)
                  in: query
                  name: skillDefinitionID
                  schema:
                    type: string
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination (base64 encoded)
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListTypesOfProofResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List typesOfProof
            tags:
                - TypesOfProof
                - Querying
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
    /{orgID}/typesOfProof/{id}:
        get:
            description: Get a single typesOfProof by ID
            operationId: getTypesOfProof
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/TypesOfProof'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get TypesOfProof
            tags:
                - TypesOfProof
                - Querying
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
            - description: TypesOfProof ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgID}/updateCustomFieldDefinitions:
        get:
            description: |-
                List all updateCustomFieldDefinitions proposals. These are proposed changes to update existing CustomFieldDefinition records that may be automatically approved or require manual approval depending on system configuration.

                **Filter Syntax:**
                - Filters use exact match only
                - Multiple filters are combined with AND logic
                - Filterable fields: entityDefinitionID
                - Example: `?employee_id=abc-123&status=active`
            operationId: listUpdateCustomFieldDefinition
            parameters:
                - description: Filter by entityDefinitionID (exact match)
                  in: query
                  name: entityDefinitionID
                  schema:
                    type: string
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination (base64 encoded)
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListUpdateCustomFieldDefinitionResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List CustomFieldDefinition update proposals
            tags:
                - CustomFieldDefinitions
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
        post:
            description: Create a new proposal to add a CustomFieldDefinition record. The proposal may be automatically approved or require manual approval depending on system configuration.
            operationId: createUpdateCustomFieldDefinition
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateUpdateCustomFieldDefinitionRequest'
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateCustomFieldDefinition'
                    description: Created successfully
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Propose creation of CustomFieldDefinition
            tags:
                - CustomFieldDefinitions
                - Proposals
    /{orgID}/updateCustomFieldDefinitions/{id}:
        get:
            description: Get details of a specific CustomFieldDefinition update proposal by ID
            operationId: getUpdateCustomFieldDefinition
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateCustomFieldDefinition'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get CustomFieldDefinition update proposal
            tags:
                - CustomFieldDefinitions
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
            - description: UpdateCustomFieldDefinition ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgID}/updateEmployeeUnavailabilities:
        get:
            description: |-
                List all updateEmployeeUnavailabilities proposals. These are proposed changes to update existing EmployeeUnavailability records that may be automatically approved or require manual approval depending on system configuration.

                **Filter Syntax:**
                - Filters use exact match only
                - Multiple filters are combined with AND logic
                - Filterable fields: employeeID
                - Example: `?employee_id=abc-123&status=active`
            operationId: listUpdateEmployeeUnavailability
            parameters:
                - description: Filter by employeeID (exact match)
                  in: query
                  name: employeeID
                  schema:
                    type: string
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination (base64 encoded)
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListUpdateEmployeeUnavailabilityResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List EmployeeUnavailability update proposals
            tags:
                - EmployeeUnavailabilities
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
        post:
            description: Create a new proposal to add a EmployeeUnavailability record. The proposal may be automatically approved or require manual approval depending on system configuration.
            operationId: createUpdateEmployeeUnavailability
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateUpdateEmployeeUnavailabilityRequest'
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateEmployeeUnavailability'
                    description: Created successfully
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Propose creation of EmployeeUnavailability
            tags:
                - EmployeeUnavailabilities
                - Proposals
    /{orgID}/updateEmployeeUnavailabilities/{id}:
        get:
            description: Get details of a specific EmployeeUnavailability update proposal by ID
            operationId: getUpdateEmployeeUnavailability
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateEmployeeUnavailability'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get EmployeeUnavailability update proposal
            tags:
                - EmployeeUnavailabilities
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
            - description: UpdateEmployeeUnavailability ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgID}/updateEmployees:
        get:
            description: List all updateEmployees proposals. These are proposed changes to update existing Employee records that may be automatically approved or require manual approval depending on system configuration.
            operationId: listUpdateEmployee
            parameters:
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination (base64 encoded)
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListUpdateEmployeeResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List Employee update proposals
            tags:
                - Employees
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
        post:
            description: Create a new proposal to add a Employee record. The proposal may be automatically approved or require manual approval depending on system configuration.
            operationId: createUpdateEmployee
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateUpdateEmployeeRequest'
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateEmployee'
                    description: Created successfully
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Propose creation of Employee
            tags:
                - Employees
                - Proposals
    /{orgID}/updateEmployees/{id}:
        get:
            description: Get details of a specific Employee update proposal by ID
            operationId: getUpdateEmployee
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateEmployee'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get Employee update proposal
            tags:
                - Employees
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
            - description: UpdateEmployee ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgID}/updateEmploymentContractTypes:
        get:
            description: List all updateEmploymentContractTypes proposals. These are proposed changes to update existing EmploymentContractType records that may be automatically approved or require manual approval depending on system configuration.
            operationId: listUpdateEmploymentContractType
            parameters:
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination (base64 encoded)
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListUpdateEmploymentContractTypeResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List EmploymentContractType update proposals
            tags:
                - EmploymentContractTypes
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
        post:
            description: Create a new proposal to add a EmploymentContractType record. The proposal may be automatically approved or require manual approval depending on system configuration.
            operationId: createUpdateEmploymentContractType
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateUpdateEmploymentContractTypeRequest'
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateEmploymentContractType'
                    description: Created successfully
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Propose creation of EmploymentContractType
            tags:
                - EmploymentContractTypes
                - Proposals
    /{orgID}/updateEmploymentContractTypes/{id}:
        get:
            description: Get details of a specific EmploymentContractType update proposal by ID
            operationId: getUpdateEmploymentContractType
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateEmploymentContractType'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get EmploymentContractType update proposal
            tags:
                - EmploymentContractTypes
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
            - description: UpdateEmploymentContractType ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgID}/updateEmploymentContracts:
        get:
            description: |-
                List all updateEmploymentContracts proposals. These are proposed changes to update existing EmploymentContract records that may be automatically approved or require manual approval depending on system configuration.

                **Filter Syntax:**
                - Filters use exact match only
                - Multiple filters are combined with AND logic
                - Filterable fields: contractTypeID, employeeID
                - Example: `?employee_id=abc-123&status=active`
            operationId: listUpdateEmploymentContract
            parameters:
                - description: Filter by contractTypeID (exact match)
                  in: query
                  name: contractTypeID
                  schema:
                    type: string
                - description: Filter by employeeID (exact match)
                  in: query
                  name: employeeID
                  schema:
                    type: string
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination (base64 encoded)
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListUpdateEmploymentContractResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List EmploymentContract update proposals
            tags:
                - EmploymentContracts
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
        post:
            description: Create a new proposal to add a EmploymentContract record. The proposal may be automatically approved or require manual approval depending on system configuration.
            operationId: createUpdateEmploymentContract
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateUpdateEmploymentContractRequest'
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateEmploymentContract'
                    description: Created successfully
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Propose creation of EmploymentContract
            tags:
                - EmploymentContracts
                - Proposals
    /{orgID}/updateEmploymentContracts/{id}:
        get:
            description: Get details of a specific EmploymentContract update proposal by ID
            operationId: getUpdateEmploymentContract
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateEmploymentContract'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get EmploymentContract update proposal
            tags:
                - EmploymentContracts
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
            - description: UpdateEmploymentContract ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgID}/updateEmploymentRelationTypes:
        get:
            description: List all updateEmploymentRelationTypes proposals. These are proposed changes to update existing EmploymentRelationType records that may be automatically approved or require manual approval depending on system configuration.
            operationId: listUpdateEmploymentRelationType
            parameters:
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination (base64 encoded)
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListUpdateEmploymentRelationTypeResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List EmploymentRelationType update proposals
            tags:
                - EmploymentRelationTypes
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
        post:
            description: Create a new proposal to add a EmploymentRelationType record. The proposal may be automatically approved or require manual approval depending on system configuration.
            operationId: createUpdateEmploymentRelationType
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateUpdateEmploymentRelationTypeRequest'
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateEmploymentRelationType'
                    description: Created successfully
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Propose creation of EmploymentRelationType
            tags:
                - EmploymentRelationTypes
                - Proposals
    /{orgID}/updateEmploymentRelationTypes/{id}:
        get:
            description: Get details of a specific EmploymentRelationType update proposal by ID
            operationId: getUpdateEmploymentRelationType
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateEmploymentRelationType'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get EmploymentRelationType update proposal
            tags:
                - EmploymentRelationTypes
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
            - description: UpdateEmploymentRelationType ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgID}/updateEmploymentRelations:
        get:
            description: |-
                List all updateEmploymentRelations proposals. These are proposed changes to update existing EmploymentRelation records that may be automatically approved or require manual approval depending on system configuration.

                **Filter Syntax:**
                - Filters use exact match only
                - Multiple filters are combined with AND logic
                - Filterable fields: toEmployeeID, fromEmployeeID, relationTypeID
                - Example: `?employee_id=abc-123&status=active`
            operationId: listUpdateEmploymentRelation
            parameters:
                - description: Filter by toEmployeeID (exact match)
                  in: query
                  name: toEmployeeID
                  schema:
                    type: string
                - description: Filter by fromEmployeeID (exact match)
                  in: query
                  name: fromEmployeeID
                  schema:
                    type: string
                - description: Filter by relationTypeID (exact match)
                  in: query
                  name: relationTypeID
                  schema:
                    type: string
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination (base64 encoded)
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListUpdateEmploymentRelationResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List EmploymentRelation update proposals
            tags:
                - EmploymentRelations
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
        post:
            description: Create a new proposal to add a EmploymentRelation record. The proposal may be automatically approved or require manual approval depending on system configuration.
            operationId: createUpdateEmploymentRelation
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateUpdateEmploymentRelationRequest'
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateEmploymentRelation'
                    description: Created successfully
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Propose creation of EmploymentRelation
            tags:
                - EmploymentRelations
                - Proposals
    /{orgID}/updateEmploymentRelations/{id}:
        get:
            description: Get details of a specific EmploymentRelation update proposal by ID
            operationId: getUpdateEmploymentRelation
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateEmploymentRelation'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get EmploymentRelation update proposal
            tags:
                - EmploymentRelations
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
            - description: UpdateEmploymentRelation ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgID}/updateGroupingTypes:
        get:
            description: List all updateGroupingTypes proposals. These are proposed changes to update existing GroupingType records that may be automatically approved or require manual approval depending on system configuration.
            operationId: listUpdateGroupingType
            parameters:
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination (base64 encoded)
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListUpdateGroupingTypeResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List GroupingType update proposals
            tags:
                - GroupingTypes
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
        post:
            description: Create a new proposal to add a GroupingType record. The proposal may be automatically approved or require manual approval depending on system configuration.
            operationId: createUpdateGroupingType
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateUpdateGroupingTypeRequest'
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateGroupingType'
                    description: Created successfully
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Propose creation of GroupingType
            tags:
                - GroupingTypes
                - Proposals
    /{orgID}/updateGroupingTypes/{id}:
        get:
            description: Get details of a specific GroupingType update proposal by ID
            operationId: getUpdateGroupingType
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateGroupingType'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get GroupingType update proposal
            tags:
                - GroupingTypes
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
            - description: UpdateGroupingType ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgID}/updateGroupings:
        get:
            description: |-
                List all updateGroupings proposals. These are proposed changes to update existing Grouping records that may be automatically approved or require manual approval depending on system configuration.

                **Filter Syntax:**
                - Filters use exact match only
                - Multiple filters are combined with AND logic
                - Filterable fields: typeID, definedInGroupingID
                - Example: `?employee_id=abc-123&status=active`
            operationId: listUpdateGrouping
            parameters:
                - description: Filter by typeID (exact match)
                  in: query
                  name: typeID
                  schema:
                    type: string
                - description: Filter by definedInGroupingID (exact match)
                  in: query
                  name: definedInGroupingID
                  schema:
                    type: string
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination (base64 encoded)
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListUpdateGroupingResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List Grouping update proposals
            tags:
                - Groupings
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
        post:
            description: Create a new proposal to add a Grouping record. The proposal may be automatically approved or require manual approval depending on system configuration.
            operationId: createUpdateGrouping
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateUpdateGroupingRequest'
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateGrouping'
                    description: Created successfully
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Propose creation of Grouping
            tags:
                - Groupings
                - Proposals
    /{orgID}/updateGroupings/{id}:
        get:
            description: Get details of a specific Grouping update proposal by ID
            operationId: getUpdateGrouping
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateGrouping'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get Grouping update proposal
            tags:
                - Groupings
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
            - description: UpdateGrouping ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgID}/updateMonitoringTraces:
        get:
            description: List all updateMonitoringTraces proposals. These are proposed changes to update existing MonitoringTrace records that may be automatically approved or require manual approval depending on system configuration.
            operationId: listUpdateMonitoringTrace
            parameters:
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination (base64 encoded)
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListUpdateMonitoringTraceResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List MonitoringTrace update proposals
            tags:
                - MonitoringTraces
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
        post:
            description: Create a new proposal to add a MonitoringTrace record. The proposal may be automatically approved or require manual approval depending on system configuration.
            operationId: createUpdateMonitoringTrace
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateUpdateMonitoringTraceRequest'
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateMonitoringTrace'
                    description: Created successfully
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Propose creation of MonitoringTrace
            tags:
                - MonitoringTraces
                - Proposals
    /{orgID}/updateMonitoringTraces/{id}:
        get:
            description: Get details of a specific MonitoringTrace update proposal by ID
            operationId: getUpdateMonitoringTrace
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateMonitoringTrace'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get MonitoringTrace update proposal
            tags:
                - MonitoringTraces
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
            - description: UpdateMonitoringTrace ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgID}/updatePositionAssignments:
        get:
            description: |-
                List all updatePositionAssignments proposals. These are proposed changes to update existing PositionAssignment records that may be automatically approved or require manual approval depending on system configuration.

                **Filter Syntax:**
                - Filters use exact match only
                - Multiple filters are combined with AND logic
                - Filterable fields: employeeID
                - Example: `?employee_id=abc-123&status=active`
            operationId: listUpdatePositionAssignment
            parameters:
                - description: Filter by employeeID (exact match)
                  in: query
                  name: employeeID
                  schema:
                    type: string
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination (base64 encoded)
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListUpdatePositionAssignmentResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List PositionAssignment update proposals
            tags:
                - PositionAssignments
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
        post:
            description: Create a new proposal to add a PositionAssignment record. The proposal may be automatically approved or require manual approval depending on system configuration.
            operationId: createUpdatePositionAssignment
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateUpdatePositionAssignmentRequest'
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdatePositionAssignment'
                    description: Created successfully
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Propose creation of PositionAssignment
            tags:
                - PositionAssignments
                - Proposals
    /{orgID}/updatePositionAssignments/{id}:
        get:
            description: Get details of a specific PositionAssignment update proposal by ID
            operationId: getUpdatePositionAssignment
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdatePositionAssignment'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get PositionAssignment update proposal
            tags:
                - PositionAssignments
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
            - description: UpdatePositionAssignment ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgID}/updateRatingScaleLevelDescriptors:
        get:
            description: List all updateRatingScaleLevelDescriptors proposals. These are proposed changes to update existing RatingScaleLevelDescriptor records that may be automatically approved or require manual approval depending on system configuration.
            operationId: listUpdateRatingScaleLevelDescriptor
            parameters:
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination (base64 encoded)
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListUpdateRatingScaleLevelDescriptorResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List RatingScaleLevelDescriptor update proposals
            tags:
                - RatingScaleLevelDescriptors
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
        post:
            description: Create a new proposal to add a RatingScaleLevelDescriptor record. The proposal may be automatically approved or require manual approval depending on system configuration.
            operationId: createUpdateRatingScaleLevelDescriptor
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateUpdateRatingScaleLevelDescriptorRequest'
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateRatingScaleLevelDescriptor'
                    description: Created successfully
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Propose creation of RatingScaleLevelDescriptor
            tags:
                - RatingScaleLevelDescriptors
                - Proposals
    /{orgID}/updateRatingScaleLevelDescriptors/{id}:
        get:
            description: Get details of a specific RatingScaleLevelDescriptor update proposal by ID
            operationId: getUpdateRatingScaleLevelDescriptor
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateRatingScaleLevelDescriptor'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get RatingScaleLevelDescriptor update proposal
            tags:
                - RatingScaleLevelDescriptors
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
            - description: UpdateRatingScaleLevelDescriptor ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgID}/updateRatingScaleLevels:
        get:
            description: List all updateRatingScaleLevels proposals. These are proposed changes to update existing RatingScaleLevel records that may be automatically approved or require manual approval depending on system configuration.
            operationId: listUpdateRatingScaleLevel
            parameters:
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination (base64 encoded)
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListUpdateRatingScaleLevelResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List RatingScaleLevel update proposals
            tags:
                - RatingScaleLevels
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
        post:
            description: Create a new proposal to add a RatingScaleLevel record. The proposal may be automatically approved or require manual approval depending on system configuration.
            operationId: createUpdateRatingScaleLevel
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateUpdateRatingScaleLevelRequest'
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateRatingScaleLevel'
                    description: Created successfully
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Propose creation of RatingScaleLevel
            tags:
                - RatingScaleLevels
                - Proposals
    /{orgID}/updateRatingScaleLevels/{id}:
        get:
            description: Get details of a specific RatingScaleLevel update proposal by ID
            operationId: getUpdateRatingScaleLevel
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateRatingScaleLevel'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get RatingScaleLevel update proposal
            tags:
                - RatingScaleLevels
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
            - description: UpdateRatingScaleLevel ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgID}/updateRatingScales:
        get:
            description: List all updateRatingScales proposals. These are proposed changes to update existing RatingScale records that may be automatically approved or require manual approval depending on system configuration.
            operationId: listUpdateRatingScale
            parameters:
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination (base64 encoded)
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListUpdateRatingScaleResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List RatingScale update proposals
            tags:
                - RatingScales
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
        post:
            description: Create a new proposal to add a RatingScale record. The proposal may be automatically approved or require manual approval depending on system configuration.
            operationId: createUpdateRatingScale
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateUpdateRatingScaleRequest'
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateRatingScale'
                    description: Created successfully
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Propose creation of RatingScale
            tags:
                - RatingScales
                - Proposals
    /{orgID}/updateRatingScales/{id}:
        get:
            description: Get details of a specific RatingScale update proposal by ID
            operationId: getUpdateRatingScale
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateRatingScale'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get RatingScale update proposal
            tags:
                - RatingScales
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
            - description: UpdateRatingScale ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgID}/updateSkillDefinitionTypes:
        get:
            description: List all updateSkillDefinitionTypes proposals. These are proposed changes to update existing SkillDefinitionType records that may be automatically approved or require manual approval depending on system configuration.
            operationId: listUpdateSkillDefinitionType
            parameters:
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination (base64 encoded)
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListUpdateSkillDefinitionTypeResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List SkillDefinitionType update proposals
            tags:
                - SkillDefinitionTypes
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
        post:
            description: Create a new proposal to add a SkillDefinitionType record. The proposal may be automatically approved or require manual approval depending on system configuration.
            operationId: createUpdateSkillDefinitionType
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateUpdateSkillDefinitionTypeRequest'
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateSkillDefinitionType'
                    description: Created successfully
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Propose creation of SkillDefinitionType
            tags:
                - SkillDefinitionTypes
                - Proposals
    /{orgID}/updateSkillDefinitionTypes/{id}:
        get:
            description: Get details of a specific SkillDefinitionType update proposal by ID
            operationId: getUpdateSkillDefinitionType
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateSkillDefinitionType'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get SkillDefinitionType update proposal
            tags:
                - SkillDefinitionTypes
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
            - description: UpdateSkillDefinitionType ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgID}/updateSkillDefinitions:
        get:
            description: |-
                List all updateSkillDefinitions proposals. These are proposed changes to update existing SkillDefinition records that may be automatically approved or require manual approval depending on system configuration.

                **Filter Syntax:**
                - Filters use exact match only
                - Multiple filters are combined with AND logic
                - Filterable fields: ratingScaleID, typeID
                - Example: `?employee_id=abc-123&status=active`
            operationId: listUpdateSkillDefinition
            parameters:
                - description: Filter by ratingScaleID (exact match)
                  in: query
                  name: ratingScaleID
                  schema:
                    type: string
                - description: Filter by typeID (exact match)
                  in: query
                  name: typeID
                  schema:
                    type: string
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination (base64 encoded)
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListUpdateSkillDefinitionResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List SkillDefinition update proposals
            tags:
                - SkillDefinitions
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
        post:
            description: Create a new proposal to add a SkillDefinition record. The proposal may be automatically approved or require manual approval depending on system configuration.
            operationId: createUpdateSkillDefinition
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateUpdateSkillDefinitionRequest'
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateSkillDefinition'
                    description: Created successfully
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Propose creation of SkillDefinition
            tags:
                - SkillDefinitions
                - Proposals
    /{orgID}/updateSkillDefinitions/{id}:
        get:
            description: Get details of a specific SkillDefinition update proposal by ID
            operationId: getUpdateSkillDefinition
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateSkillDefinition'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get SkillDefinition update proposal
            tags:
                - SkillDefinitions
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
            - description: UpdateSkillDefinition ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgID}/updateSkillPlannings:
        get:
            description: List all updateSkillPlannings proposals. These are proposed changes to update existing SkillPlanning records that may be automatically approved or require manual approval depending on system configuration.
            operationId: listUpdateSkillPlanning
            parameters:
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination (base64 encoded)
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListUpdateSkillPlanningResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List SkillPlanning update proposals
            tags:
                - SkillPlannings
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
        post:
            description: Create a new proposal to add a SkillPlanning record. The proposal may be automatically approved or require manual approval depending on system configuration.
            operationId: createUpdateSkillPlanning
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateUpdateSkillPlanningRequest'
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateSkillPlanning'
                    description: Created successfully
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Propose creation of SkillPlanning
            tags:
                - SkillPlannings
                - Proposals
    /{orgID}/updateSkillPlannings/{id}:
        get:
            description: Get details of a specific SkillPlanning update proposal by ID
            operationId: getUpdateSkillPlanning
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateSkillPlanning'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get SkillPlanning update proposal
            tags:
                - SkillPlannings
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
            - description: UpdateSkillPlanning ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgID}/updateSkillResults:
        get:
            description: |-
                List all updateSkillResults proposals. These are proposed changes to update existing SkillResult records that may be automatically approved or require manual approval depending on system configuration.

                **Filter Syntax:**
                - Filters use exact match only
                - Multiple filters are combined with AND logic
                - Filterable fields: typeOfProofID, scoreID
                - Example: `?employee_id=abc-123&status=active`
            operationId: listUpdateSkillResult
            parameters:
                - description: Filter by typeOfProofID (exact match)
                  in: query
                  name: typeOfProofID
                  schema:
                    type: string
                - description: Filter by scoreID (exact match)
                  in: query
                  name: scoreID
                  schema:
                    type: string
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination (base64 encoded)
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListUpdateSkillResultResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List SkillResult update proposals
            tags:
                - SkillResults
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
        post:
            description: Create a new proposal to add a SkillResult record. The proposal may be automatically approved or require manual approval depending on system configuration.
            operationId: createUpdateSkillResult
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateUpdateSkillResultRequest'
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateSkillResult'
                    description: Created successfully
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Propose creation of SkillResult
            tags:
                - SkillResults
                - Proposals
    /{orgID}/updateSkillResults/{id}:
        get:
            description: Get details of a specific SkillResult update proposal by ID
            operationId: getUpdateSkillResult
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateSkillResult'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get SkillResult update proposal
            tags:
                - SkillResults
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
            - description: UpdateSkillResult ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgID}/updateTypesOfProof:
        get:
            description: |-
                List all updateTypesOfProof proposals. These are proposed changes to update existing TypesOfProof records that may be automatically approved or require manual approval depending on system configuration.

                **Filter Syntax:**
                - Filters use exact match only
                - Multiple filters are combined with AND logic
                - Filterable fields: skillDefinitionID
                - Example: `?employee_id=abc-123&status=active`
            operationId: listUpdateTypesOfProof
            parameters:
                - description: Filter by skillDefinitionID (exact match)
                  in: query
                  name: skillDefinitionID
                  schema:
                    type: string
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination (base64 encoded)
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListUpdateTypesOfProofResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List TypesOfProof update proposals
            tags:
                - TypesOfProof
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
        post:
            description: Create a new proposal to add a TypesOfProof record. The proposal may be automatically approved or require manual approval depending on system configuration.
            operationId: createUpdateTypesOfProof
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateUpdateTypesOfProofRequest'
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateTypesOfProof'
                    description: Created successfully
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Propose creation of TypesOfProof
            tags:
                - TypesOfProof
                - Proposals
    /{orgID}/updateTypesOfProof/{id}:
        get:
            description: Get details of a specific TypesOfProof update proposal by ID
            operationId: getUpdateTypesOfProof
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateTypesOfProof'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get TypesOfProof update proposal
            tags:
                - TypesOfProof
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgID
              required: true
              schema:
                type: string
            - description: UpdateTypesOfProof ID
              in: path
              name: id
              required: true
              schema:
                type: string
security:
    - apiKey: []
servers:
    - description: Production server
      url: https://matrix.ag5.com/api/orgkeep/v4
tags:
    - description: Operations for Querying
      name: Querying
    - description: Operations for CustomFieldDefinitions
      name: CustomFieldDefinitions
    - description: Operations for EmployeeUnavailabilities
      name: EmployeeUnavailabilities
    - description: Operations for Employees
      name: Employees
    - description: Operations for EmploymentContractTypes
      name: EmploymentContractTypes
    - description: Operations for EmploymentContracts
      name: EmploymentContracts
    - description: Operations for EmploymentRelationTypes
      name: EmploymentRelationTypes
    - description: Operations for EmploymentRelations
      name: EmploymentRelations
    - description: Operations for EntityDefinitions
      name: EntityDefinitions
    - description: Operations for GroupingTypes
      name: GroupingTypes
    - description: Operations for Groupings
      name: Groupings
    - description: Operations for MonitoringTraces
      name: MonitoringTraces
    - description: Operations for PositionAssignments
      name: PositionAssignments
    - description: Operations for RatingScaleLevelDescriptors
      name: RatingScaleLevelDescriptors
    - description: Operations for RatingScaleLevels
      name: RatingScaleLevels
    - description: Operations for RatingScales
      name: RatingScales
    - description: Operations for Repositories
      name: Repositories
    - description: Operations for SkillDefinitionTypes
      name: SkillDefinitionTypes
    - description: Operations for SkillDefinitions
      name: SkillDefinitions
    - description: Operations for SkillPlannings
      name: SkillPlannings
    - description: Operations for SkillResults
      name: SkillResults
    - description: Operations for TypesOfProof
      name: TypesOfProof
    - description: API metadata operations
      name: Meta
x-webhooks:
    proposalStatusChanged:
        post:
            description: Triggered when a proposal's status changes
            requestBody:
                content:
                    application/json:
                        schema:
                            properties:
                                newStatus:
                                    type: string
                                previousStatus:
                                    type: string
                                proposalId:
                                    format: uuid
                                    type: string
                                timestamp:
                                    format: date-time
                                    type: string
                            type: object
                required: true
            summary: Proposal status changed
