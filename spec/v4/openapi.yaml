components:
    parameters:
        cursor:
            description: |
                Cursor for pagination. This should be the `nextCursor` value from a previous response.
                Leave empty to start from the beginning.
            in: query
            name: cursor
            schema:
                type: string
        limit:
            description: Maximum number of items to return (1-1000)
            in: query
            name: limit
            schema:
                default: 10
                maximum: 1000
                minimum: 1
                type: integer
    responses:
        BadRequest:
            content:
                application/json:
                    examples:
                        invalidInput:
                            summary: Invalid input data
                            value:
                                code: INVALID_INPUT
                                details:
                                    field: email
                                    reason: Invalid email format
                                message: The provided input data is invalid
                    schema:
                        $ref: '#/components/schemas/Error'
            description: Bad request
        InternalError:
            content:
                application/json:
                    examples:
                        internalError:
                            summary: Internal server error
                            value:
                                code: INTERNAL_ERROR
                                message: An unexpected error occurred
                    schema:
                        $ref: '#/components/schemas/Error'
            description: Internal server error
        NotFound:
            content:
                application/json:
                    examples:
                        resourceNotFound:
                            summary: Resource not found
                            value:
                                code: NOT_FOUND
                                details:
                                    id: 123e4567-e89b-12d3-a456-426614174000
                                    resource: employee
                                message: The requested resource was not found
                    schema:
                        $ref: '#/components/schemas/Error'
            description: Not found
        RateLimitExceeded:
            content:
                application/json:
                    examples:
                        rateLimitExceeded:
                            summary: Rate limit exceeded
                            value:
                                code: RATE_LIMIT_EXCEEDED
                                message: Too many requests. Please retry after some time.
                    schema:
                        $ref: '#/components/schemas/Error'
            description: Rate limit exceeded
            headers:
                X-RateLimit-Limit:
                    description: The rate limit ceiling for the current period
                    schema:
                        type: integer
                X-RateLimit-Remaining:
                    description: The number of requests remaining in the current period
                    schema:
                        type: integer
                X-RateLimit-Reset:
                    description: The time at which the current period resets
                    schema:
                        type: integer
        Unauthorized:
            content:
                application/json:
                    examples:
                        invalidApiKey:
                            summary: Invalid API key
                            value:
                                code: INVALID_TOKEN
                                message: The provided API key is invalid or expired
                        missingApiKey:
                            summary: Missing API key
                            value:
                                code: MISSING_AUTH
                                message: API key is required. Please provide the X-API-Key header
                    schema:
                        $ref: '#/components/schemas/Error'
            description: Unauthorized
    schemas:
        CreateCreateCustomFieldDefinitionProposalRequest:
            properties:
                code:
                    type: string
                entityDefinitionID:
                    format: uuid
                    type: string
                name:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                repositoryID:
                    format: uuid
                    type: string
            required:
                - repositoryID
                - code
                - name
                - entityDefinitionID
            type: object
        CreateCreateEmployeeProposalRequest:
            properties:
                birthDate:
                    format: date
                    type: string
                customValues:
                    additionalProperties:
                        type: string
                    description: Custom field values - only declared custom fields for this entity type are allowed
                    example:
                        department: Engineering
                        employeeId: EMP-12345
                        location: Amsterdam
                    type: object
                email:
                    format: email
                    type: string
                employeeNumber:
                    type: string
                firstName:
                    type: string
                initials:
                    type: string
                remark:
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                surname:
                    type: string
            required:
                - repositoryID
                - surname
            type: object
        CreateCreateEmployeeUnavailabilityProposalRequest:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                employeeID:
                    format: uuid
                    type: string
                reason:
                    type: string
                repositoryID:
                    format: uuid
                    type: string
            required:
                - repositoryID
                - activePeriod
                - employeeID
            type: object
        CreateCreateEmploymentContractProposalRequest:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                contractTypeID:
                    format: uuid
                    type: string
                employeeID:
                    format: uuid
                    type: string
                repositoryID:
                    format: uuid
                    type: string
            required:
                - repositoryID
                - activePeriod
                - employeeID
            type: object
        CreateCreateEmploymentContractTypeProposalRequest:
            properties:
                code:
                    type: string
                name:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                repositoryID:
                    format: uuid
                    type: string
            required:
                - repositoryID
                - code
                - name
            type: object
        CreateCreateEmploymentRelationProposalRequest:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                fromEmployeeID:
                    format: uuid
                    type: string
                relationTypeID:
                    format: uuid
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                toEmployeeID:
                    format: uuid
                    type: string
            required:
                - repositoryID
                - activePeriod
                - toEmployeeID
                - fromEmployeeID
                - relationTypeID
            type: object
        CreateCreateEmploymentRelationTypeProposalRequest:
            properties:
                code:
                    type: string
                name:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                repositoryID:
                    format: uuid
                    type: string
            required:
                - repositoryID
                - code
                - name
            type: object
        CreateCreateGroupingProposalRequest:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                code:
                    type: string
                customValues:
                    additionalProperties:
                        type: string
                    description: Custom field values - only declared custom fields for this entity type are allowed
                    example:
                        department: Engineering
                        employeeId: EMP-12345
                        location: Amsterdam
                    type: object
                definedInGroupingID:
                    format: uuid
                    type: string
                description:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                name:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                repositoryID:
                    format: uuid
                    type: string
                typeID:
                    format: uuid
                    type: string
            required:
                - repositoryID
                - code
                - name
                - activePeriod
            type: object
        CreateCreateGroupingTypeProposalRequest:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                code:
                    type: string
                customValues:
                    additionalProperties:
                        type: string
                    description: Custom field values - only declared custom fields for this entity type are allowed
                    example:
                        department: Engineering
                        employeeId: EMP-12345
                        location: Amsterdam
                    type: object
                name:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                repositoryID:
                    format: uuid
                    type: string
            required:
                - repositoryID
                - code
                - name
                - activePeriod
            type: object
        CreateCreateMonitoringTraceProposalRequest:
            properties:
                executedAt:
                    format: date-time
                    type: string
                remark:
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestedAt:
                    format: date-time
                    type: string
            required:
                - repositoryID
            type: object
        CreateCreatePositionAssignmentProposalRequest:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                employeeID:
                    format: uuid
                    type: string
                remark:
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                tagIDs:
                    items:
                        format: uuid
                        type: string
                    type: array
            required:
                - repositoryID
                - employeeID
                - activePeriod
                - tagIDs
            type: object
        CreateCreateRatingScaleLevelDescriptorProposalRequest:
            properties:
                description:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                ratingScaleLevelID:
                    format: uuid
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                skillDefinitionID:
                    format: uuid
                    type: string
            required:
                - repositoryID
                - ratingScaleLevelID
                - skillDefinitionID
                - description
            type: object
        CreateCreateRatingScaleLevelProposalRequest:
            properties:
                code:
                    type: string
                customValues:
                    additionalProperties:
                        type: string
                    description: Custom field values - only declared custom fields for this entity type are allowed
                    example:
                        department: Engineering
                        employeeId: EMP-12345
                        location: Amsterdam
                    type: object
                description:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                name:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                ratingScaleID:
                    format: uuid
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                scoreOrder:
                    format: int32
                    type: integer
            required:
                - repositoryID
                - ratingScaleID
                - scoreOrder
                - code
                - name
            type: object
        CreateCreateRatingScaleProposalRequest:
            properties:
                code:
                    type: string
                customValues:
                    additionalProperties:
                        type: string
                    description: Custom field values - only declared custom fields for this entity type are allowed
                    example:
                        department: Engineering
                        employeeId: EMP-12345
                        location: Amsterdam
                    type: object
                name:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                repositoryID:
                    format: uuid
                    type: string
            required:
                - repositoryID
                - code
                - name
            type: object
        CreateCreateSkillDefinitionProposalRequest:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                code:
                    type: string
                customValues:
                    additionalProperties:
                        type: string
                    description: Custom field values - only declared custom fields for this entity type are allowed
                    example:
                        department: Engineering
                        employeeId: EMP-12345
                        location: Amsterdam
                    type: object
                description:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                name:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                ratingScaleID:
                    format: uuid
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                typeID:
                    format: uuid
                    type: string
            required:
                - repositoryID
                - name
                - ratingScaleID
                - activePeriod
            type: object
        CreateCreateSkillDefinitionTypeProposalRequest:
            properties:
                code:
                    type: string
                customValues:
                    additionalProperties:
                        type: string
                    description: Custom field values - only declared custom fields for this entity type are allowed
                    example:
                        department: Engineering
                        employeeId: EMP-12345
                        location: Amsterdam
                    type: object
                name:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                repositoryID:
                    format: uuid
                    type: string
            required:
                - repositoryID
                - code
                - name
            type: object
        CreateCreateSkillPlanningProposalRequest:
            properties:
                closeDate:
                    format: date
                    type: string
                customValues:
                    additionalProperties:
                        type: string
                    description: Custom field values - only declared custom fields for this entity type are allowed
                    example:
                        department: Engineering
                        employeeId: EMP-12345
                        location: Amsterdam
                    type: object
                deadlineDate:
                    format: date
                    type: string
                employeeID:
                    format: uuid
                    type: string
                fromDate:
                    format: date
                    type: string
                remark:
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                skillDefinitionID:
                    format: uuid
                    type: string
                typeOfProofID:
                    format: uuid
                    type: string
            required:
                - repositoryID
                - employeeID
                - fromDate
                - skillDefinitionID
            type: object
        CreateCreateSkillResultProposalRequest:
            properties:
                customValues:
                    additionalProperties:
                        type: string
                    description: Custom field values - only declared custom fields for this entity type are allowed
                    example:
                        department: Engineering
                        employeeId: EMP-12345
                        location: Amsterdam
                    type: object
                employeeID:
                    format: uuid
                    type: string
                expirationDate:
                    format: date
                    type: string
                issueDate:
                    format: date
                    type: string
                remark:
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                scoreID:
                    format: uuid
                    type: string
                typeOfProofID:
                    format: uuid
                    type: string
            required:
                - repositoryID
                - employeeID
                - issueDate
                - typeOfProofID
            type: object
        CreateCreateTypeOfProofProposalRequest:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                code:
                    type: string
                customValues:
                    additionalProperties:
                        type: string
                    description: Custom field values - only declared custom fields for this entity type are allowed
                    example:
                        department: Engineering
                        employeeId: EMP-12345
                        location: Amsterdam
                    type: object
                description:
                    type: string
                name:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                repositoryID:
                    format: uuid
                    type: string
                skillDefinitionID:
                    format: uuid
                    type: string
            required:
                - repositoryID
                - name
                - skillDefinitionID
                - activePeriod
            type: object
        CreateCustomFieldDefinitionProposal:
            properties:
                code:
                    type: string
                entityDefinitionID:
                    format: uuid
                    type: string
                isProposalExecutionFailed:
                    readOnly: true
                    type: boolean
                isProposalResolved:
                    example: false
                    readOnly: true
                    type: boolean
                name:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                proposalExecutionErrorText:
                    readOnly: true
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestID:
                    format: uuid
                    readOnly: true
                    type: string
                subjectID:
                    format: uuid
                    readOnly: true
                    type: string
            required:
                - requestID
                - isProposalResolved
                - isProposalExecutionFailed
                - subjectID
                - repositoryID
                - code
                - name
                - entityDefinitionID
            type: object
        CreateCustomFieldDefinitionRequest:
            properties:
                code:
                    type: string
                createdAt:
                    format: date-time
                    type: string
                entityDefinitionID:
                    format: uuid
                    type: string
                lastModifiedAt:
                    format: date-time
                    type: string
                name:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                repositoryID:
                    format: uuid
                    type: string
            required:
                - createdAt
                - lastModifiedAt
                - repositoryID
                - code
                - name
                - entityDefinitionID
            type: object
        CreateDeleteCustomFieldDefinitionProposalRequest:
            properties:
                id:
                    format: uuid
                    type: string
                repositoryID:
                    format: uuid
                    type: string
            required:
                - id
                - repositoryID
            type: object
        CreateDeleteEmployeeProposalRequest:
            properties:
                id:
                    format: uuid
                    type: string
                repositoryID:
                    format: uuid
                    type: string
            required:
                - id
                - repositoryID
            type: object
        CreateDeleteEmployeeUnavailabilityProposalRequest:
            properties:
                id:
                    format: uuid
                    type: string
                repositoryID:
                    format: uuid
                    type: string
            required:
                - id
                - repositoryID
            type: object
        CreateDeleteEmploymentContractProposalRequest:
            properties:
                id:
                    format: uuid
                    type: string
                repositoryID:
                    format: uuid
                    type: string
            required:
                - id
                - repositoryID
            type: object
        CreateDeleteEmploymentContractTypeProposalRequest:
            properties:
                id:
                    format: uuid
                    type: string
                repositoryID:
                    format: uuid
                    type: string
            required:
                - id
                - repositoryID
            type: object
        CreateDeleteEmploymentRelationProposalRequest:
            properties:
                id:
                    format: uuid
                    type: string
                repositoryID:
                    format: uuid
                    type: string
            required:
                - id
                - repositoryID
            type: object
        CreateDeleteEmploymentRelationTypeProposalRequest:
            properties:
                id:
                    format: uuid
                    type: string
                repositoryID:
                    format: uuid
                    type: string
            required:
                - id
                - repositoryID
            type: object
        CreateDeleteGroupingProposalRequest:
            properties:
                id:
                    format: uuid
                    type: string
                repositoryID:
                    format: uuid
                    type: string
            required:
                - id
                - repositoryID
            type: object
        CreateDeleteGroupingTypeProposalRequest:
            properties:
                id:
                    format: uuid
                    type: string
                repositoryID:
                    format: uuid
                    type: string
            required:
                - id
                - repositoryID
            type: object
        CreateDeleteMonitoringTraceProposalRequest:
            properties:
                id:
                    format: uuid
                    type: string
                repositoryID:
                    format: uuid
                    type: string
            required:
                - id
                - repositoryID
            type: object
        CreateDeletePositionAssignmentProposalRequest:
            properties:
                id:
                    format: uuid
                    type: string
                repositoryID:
                    format: uuid
                    type: string
            required:
                - id
                - repositoryID
            type: object
        CreateDeleteRatingScaleLevelDescriptorProposalRequest:
            properties:
                id:
                    format: uuid
                    type: string
                repositoryID:
                    format: uuid
                    type: string
            required:
                - id
                - repositoryID
            type: object
        CreateDeleteRatingScaleLevelProposalRequest:
            properties:
                id:
                    format: uuid
                    type: string
                repositoryID:
                    format: uuid
                    type: string
            required:
                - id
                - repositoryID
            type: object
        CreateDeleteRatingScaleProposalRequest:
            properties:
                id:
                    format: uuid
                    type: string
                repositoryID:
                    format: uuid
                    type: string
            required:
                - id
                - repositoryID
            type: object
        CreateDeleteSkillDefinitionProposalRequest:
            properties:
                id:
                    format: uuid
                    type: string
                repositoryID:
                    format: uuid
                    type: string
            required:
                - id
                - repositoryID
            type: object
        CreateDeleteSkillDefinitionTypeProposalRequest:
            properties:
                id:
                    format: uuid
                    type: string
                repositoryID:
                    format: uuid
                    type: string
            required:
                - id
                - repositoryID
            type: object
        CreateDeleteSkillPlanningProposalRequest:
            properties:
                id:
                    format: uuid
                    type: string
                repositoryID:
                    format: uuid
                    type: string
            required:
                - id
                - repositoryID
            type: object
        CreateDeleteSkillResultProposalRequest:
            properties:
                id:
                    format: uuid
                    type: string
                repositoryID:
                    format: uuid
                    type: string
            required:
                - id
                - repositoryID
            type: object
        CreateDeleteTypeOfProofProposalRequest:
            properties:
                id:
                    format: uuid
                    type: string
                repositoryID:
                    format: uuid
                    type: string
            required:
                - id
                - repositoryID
            type: object
        CreateEmployeeProposal:
            properties:
                birthDate:
                    format: date
                    type: string
                customValues:
                    additionalProperties:
                        type: string
                    description: Custom field values - only declared custom fields for this entity type are allowed
                    example:
                        department: Engineering
                        employeeId: EMP-12345
                        location: Amsterdam
                    type: object
                email:
                    format: email
                    type: string
                employeeNumber:
                    type: string
                firstName:
                    type: string
                initials:
                    type: string
                isProposalExecutionFailed:
                    readOnly: true
                    type: boolean
                isProposalResolved:
                    example: false
                    readOnly: true
                    type: boolean
                proposalExecutionErrorText:
                    readOnly: true
                    type: string
                remark:
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestID:
                    format: uuid
                    readOnly: true
                    type: string
                subjectID:
                    format: uuid
                    readOnly: true
                    type: string
                surname:
                    type: string
            required:
                - requestID
                - isProposalResolved
                - isProposalExecutionFailed
                - subjectID
                - repositoryID
                - surname
            type: object
        CreateEmployeeRequest:
            properties:
                birthDate:
                    format: date
                    type: string
                createdAt:
                    format: date-time
                    type: string
                customValues:
                    additionalProperties:
                        type: string
                    description: Custom field values - only declared custom fields for this entity type are allowed
                    example:
                        department: Engineering
                        employeeId: EMP-12345
                        location: Amsterdam
                    type: object
                email:
                    format: email
                    type: string
                employeeNumber:
                    type: string
                firstName:
                    type: string
                initials:
                    type: string
                lastModifiedAt:
                    format: date-time
                    type: string
                remark:
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                surname:
                    type: string
            required:
                - createdAt
                - lastModifiedAt
                - repositoryID
                - surname
            type: object
        CreateEmployeeUnavailabilityProposal:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                employeeID:
                    format: uuid
                    type: string
                isProposalExecutionFailed:
                    readOnly: true
                    type: boolean
                isProposalResolved:
                    example: false
                    readOnly: true
                    type: boolean
                proposalExecutionErrorText:
                    readOnly: true
                    type: string
                reason:
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestID:
                    format: uuid
                    readOnly: true
                    type: string
                subjectID:
                    format: uuid
                    readOnly: true
                    type: string
            required:
                - requestID
                - isProposalResolved
                - isProposalExecutionFailed
                - subjectID
                - repositoryID
                - activePeriod
                - employeeID
            type: object
        CreateEmployeeUnavailabilityRequest:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                createdAt:
                    format: date-time
                    type: string
                employeeID:
                    format: uuid
                    type: string
                lastModifiedAt:
                    format: date-time
                    type: string
                reason:
                    type: string
                repositoryID:
                    format: uuid
                    type: string
            required:
                - createdAt
                - lastModifiedAt
                - repositoryID
                - activePeriod
                - employeeID
            type: object
        CreateEmploymentContractProposal:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                contractTypeID:
                    format: uuid
                    type: string
                employeeID:
                    format: uuid
                    type: string
                isProposalExecutionFailed:
                    readOnly: true
                    type: boolean
                isProposalResolved:
                    example: false
                    readOnly: true
                    type: boolean
                proposalExecutionErrorText:
                    readOnly: true
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestID:
                    format: uuid
                    readOnly: true
                    type: string
                subjectID:
                    format: uuid
                    readOnly: true
                    type: string
            required:
                - requestID
                - isProposalResolved
                - isProposalExecutionFailed
                - subjectID
                - repositoryID
                - activePeriod
                - employeeID
            type: object
        CreateEmploymentContractRequest:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                contractTypeID:
                    format: uuid
                    type: string
                createdAt:
                    format: date-time
                    type: string
                employeeID:
                    format: uuid
                    type: string
                lastModifiedAt:
                    format: date-time
                    type: string
                repositoryID:
                    format: uuid
                    type: string
            required:
                - createdAt
                - lastModifiedAt
                - repositoryID
                - activePeriod
                - employeeID
            type: object
        CreateEmploymentContractTypeProposal:
            properties:
                code:
                    type: string
                isProposalExecutionFailed:
                    readOnly: true
                    type: boolean
                isProposalResolved:
                    example: false
                    readOnly: true
                    type: boolean
                name:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                proposalExecutionErrorText:
                    readOnly: true
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestID:
                    format: uuid
                    readOnly: true
                    type: string
                subjectID:
                    format: uuid
                    readOnly: true
                    type: string
            required:
                - requestID
                - isProposalResolved
                - isProposalExecutionFailed
                - subjectID
                - repositoryID
                - code
                - name
            type: object
        CreateEmploymentContractTypeRequest:
            properties:
                code:
                    type: string
                createdAt:
                    format: date-time
                    type: string
                lastModifiedAt:
                    format: date-time
                    type: string
                name:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                repositoryID:
                    format: uuid
                    type: string
            required:
                - createdAt
                - lastModifiedAt
                - repositoryID
                - code
                - name
            type: object
        CreateEmploymentRelationProposal:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                fromEmployeeID:
                    format: uuid
                    type: string
                isProposalExecutionFailed:
                    readOnly: true
                    type: boolean
                isProposalResolved:
                    example: false
                    readOnly: true
                    type: boolean
                proposalExecutionErrorText:
                    readOnly: true
                    type: string
                relationTypeID:
                    format: uuid
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestID:
                    format: uuid
                    readOnly: true
                    type: string
                subjectID:
                    format: uuid
                    readOnly: true
                    type: string
                toEmployeeID:
                    format: uuid
                    type: string
            required:
                - requestID
                - isProposalResolved
                - isProposalExecutionFailed
                - subjectID
                - repositoryID
                - activePeriod
                - toEmployeeID
                - fromEmployeeID
                - relationTypeID
            type: object
        CreateEmploymentRelationRequest:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                createdAt:
                    format: date-time
                    type: string
                fromEmployeeID:
                    format: uuid
                    type: string
                lastModifiedAt:
                    format: date-time
                    type: string
                relationTypeID:
                    format: uuid
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                toEmployeeID:
                    format: uuid
                    type: string
            required:
                - createdAt
                - lastModifiedAt
                - repositoryID
                - activePeriod
                - toEmployeeID
                - fromEmployeeID
                - relationTypeID
            type: object
        CreateEmploymentRelationTypeProposal:
            properties:
                code:
                    type: string
                isProposalExecutionFailed:
                    readOnly: true
                    type: boolean
                isProposalResolved:
                    example: false
                    readOnly: true
                    type: boolean
                name:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                proposalExecutionErrorText:
                    readOnly: true
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestID:
                    format: uuid
                    readOnly: true
                    type: string
                subjectID:
                    format: uuid
                    readOnly: true
                    type: string
            required:
                - requestID
                - isProposalResolved
                - isProposalExecutionFailed
                - subjectID
                - repositoryID
                - code
                - name
            type: object
        CreateEmploymentRelationTypeRequest:
            properties:
                code:
                    type: string
                createdAt:
                    format: date-time
                    type: string
                lastModifiedAt:
                    format: date-time
                    type: string
                name:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                repositoryID:
                    format: uuid
                    type: string
            required:
                - createdAt
                - lastModifiedAt
                - repositoryID
                - code
                - name
            type: object
        CreateEntityDefinitionRequest:
            properties:
                code:
                    type: string
                name:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
            required:
                - code
                - name
            type: object
        CreateGroupingProposal:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                code:
                    type: string
                customValues:
                    additionalProperties:
                        type: string
                    description: Custom field values - only declared custom fields for this entity type are allowed
                    example:
                        department: Engineering
                        employeeId: EMP-12345
                        location: Amsterdam
                    type: object
                definedInGroupingID:
                    format: uuid
                    type: string
                description:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                isProposalExecutionFailed:
                    readOnly: true
                    type: boolean
                isProposalResolved:
                    example: false
                    readOnly: true
                    type: boolean
                name:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                proposalExecutionErrorText:
                    readOnly: true
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestID:
                    format: uuid
                    readOnly: true
                    type: string
                subjectID:
                    format: uuid
                    readOnly: true
                    type: string
                typeID:
                    format: uuid
                    type: string
            required:
                - requestID
                - isProposalResolved
                - isProposalExecutionFailed
                - subjectID
                - repositoryID
                - code
                - name
                - activePeriod
            type: object
        CreateGroupingRequest:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                code:
                    type: string
                createdAt:
                    format: date-time
                    type: string
                customValues:
                    additionalProperties:
                        type: string
                    description: Custom field values - only declared custom fields for this entity type are allowed
                    example:
                        department: Engineering
                        employeeId: EMP-12345
                        location: Amsterdam
                    type: object
                definedInGroupingID:
                    format: uuid
                    type: string
                description:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                lastModifiedAt:
                    format: date-time
                    type: string
                name:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                repositoryID:
                    format: uuid
                    type: string
                typeID:
                    format: uuid
                    type: string
            required:
                - createdAt
                - lastModifiedAt
                - repositoryID
                - code
                - name
                - activePeriod
            type: object
        CreateGroupingTypeProposal:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                code:
                    type: string
                customValues:
                    additionalProperties:
                        type: string
                    description: Custom field values - only declared custom fields for this entity type are allowed
                    example:
                        department: Engineering
                        employeeId: EMP-12345
                        location: Amsterdam
                    type: object
                isProposalExecutionFailed:
                    readOnly: true
                    type: boolean
                isProposalResolved:
                    example: false
                    readOnly: true
                    type: boolean
                name:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                proposalExecutionErrorText:
                    readOnly: true
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestID:
                    format: uuid
                    readOnly: true
                    type: string
                subjectID:
                    format: uuid
                    readOnly: true
                    type: string
            required:
                - requestID
                - isProposalResolved
                - isProposalExecutionFailed
                - subjectID
                - repositoryID
                - code
                - name
                - activePeriod
            type: object
        CreateGroupingTypeRequest:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                code:
                    type: string
                createdAt:
                    format: date-time
                    type: string
                customValues:
                    additionalProperties:
                        type: string
                    description: Custom field values - only declared custom fields for this entity type are allowed
                    example:
                        department: Engineering
                        employeeId: EMP-12345
                        location: Amsterdam
                    type: object
                lastModifiedAt:
                    format: date-time
                    type: string
                name:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                repositoryID:
                    format: uuid
                    type: string
            required:
                - createdAt
                - lastModifiedAt
                - repositoryID
                - code
                - name
                - activePeriod
            type: object
        CreateMonitoringTraceProposal:
            properties:
                executedAt:
                    format: date-time
                    type: string
                isProposalExecutionFailed:
                    readOnly: true
                    type: boolean
                isProposalResolved:
                    example: false
                    readOnly: true
                    type: boolean
                proposalExecutionErrorText:
                    readOnly: true
                    type: string
                remark:
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestID:
                    format: uuid
                    readOnly: true
                    type: string
                requestedAt:
                    format: date-time
                    type: string
                subjectID:
                    format: uuid
                    readOnly: true
                    type: string
            required:
                - requestID
                - isProposalResolved
                - isProposalExecutionFailed
                - subjectID
                - repositoryID
            type: object
        CreateMonitoringTraceRequest:
            properties:
                createdAt:
                    format: date-time
                    type: string
                executedAt:
                    format: date-time
                    type: string
                lastModifiedAt:
                    format: date-time
                    type: string
                remark:
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestedAt:
                    format: date-time
                    type: string
            required:
                - createdAt
                - lastModifiedAt
                - repositoryID
            type: object
        CreatePositionAssignmentProposal:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                employeeID:
                    format: uuid
                    type: string
                isProposalExecutionFailed:
                    readOnly: true
                    type: boolean
                isProposalResolved:
                    example: false
                    readOnly: true
                    type: boolean
                proposalExecutionErrorText:
                    readOnly: true
                    type: string
                remark:
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestID:
                    format: uuid
                    readOnly: true
                    type: string
                subjectID:
                    format: uuid
                    readOnly: true
                    type: string
                tagIDs:
                    items:
                        format: uuid
                        type: string
                    type: array
            required:
                - requestID
                - isProposalResolved
                - isProposalExecutionFailed
                - subjectID
                - repositoryID
                - employeeID
                - activePeriod
                - tagIDs
            type: object
        CreatePositionAssignmentRequest:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                createdAt:
                    format: date-time
                    type: string
                employeeID:
                    format: uuid
                    type: string
                lastModifiedAt:
                    format: date-time
                    type: string
                remark:
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                tagIDs:
                    items:
                        format: uuid
                        type: string
                    type: array
            required:
                - createdAt
                - lastModifiedAt
                - repositoryID
                - employeeID
                - activePeriod
                - tagIDs
            type: object
        CreateRatingScaleLevelDescriptorProposal:
            properties:
                description:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                isProposalExecutionFailed:
                    readOnly: true
                    type: boolean
                isProposalResolved:
                    example: false
                    readOnly: true
                    type: boolean
                proposalExecutionErrorText:
                    readOnly: true
                    type: string
                ratingScaleLevelID:
                    format: uuid
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestID:
                    format: uuid
                    readOnly: true
                    type: string
                skillDefinitionID:
                    format: uuid
                    type: string
                subjectID:
                    format: uuid
                    readOnly: true
                    type: string
            required:
                - requestID
                - isProposalResolved
                - isProposalExecutionFailed
                - subjectID
                - repositoryID
                - ratingScaleLevelID
                - skillDefinitionID
                - description
            type: object
        CreateRatingScaleLevelDescriptorRequest:
            properties:
                createdAt:
                    format: date-time
                    type: string
                description:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                lastModifiedAt:
                    format: date-time
                    type: string
                ratingScaleLevelID:
                    format: uuid
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                skillDefinitionID:
                    format: uuid
                    type: string
            required:
                - createdAt
                - lastModifiedAt
                - repositoryID
                - ratingScaleLevelID
                - skillDefinitionID
                - description
            type: object
        CreateRatingScaleLevelProposal:
            properties:
                code:
                    type: string
                customValues:
                    additionalProperties:
                        type: string
                    description: Custom field values - only declared custom fields for this entity type are allowed
                    example:
                        department: Engineering
                        employeeId: EMP-12345
                        location: Amsterdam
                    type: object
                description:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                isProposalExecutionFailed:
                    readOnly: true
                    type: boolean
                isProposalResolved:
                    example: false
                    readOnly: true
                    type: boolean
                name:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                proposalExecutionErrorText:
                    readOnly: true
                    type: string
                ratingScaleID:
                    format: uuid
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestID:
                    format: uuid
                    readOnly: true
                    type: string
                scoreOrder:
                    format: int32
                    type: integer
                subjectID:
                    format: uuid
                    readOnly: true
                    type: string
            required:
                - requestID
                - isProposalResolved
                - isProposalExecutionFailed
                - subjectID
                - repositoryID
                - ratingScaleID
                - scoreOrder
                - code
                - name
            type: object
        CreateRatingScaleLevelRequest:
            properties:
                code:
                    type: string
                createdAt:
                    format: date-time
                    type: string
                customValues:
                    additionalProperties:
                        type: string
                    description: Custom field values - only declared custom fields for this entity type are allowed
                    example:
                        department: Engineering
                        employeeId: EMP-12345
                        location: Amsterdam
                    type: object
                description:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                lastModifiedAt:
                    format: date-time
                    type: string
                name:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                ratingScaleID:
                    format: uuid
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                scoreOrder:
                    format: int32
                    type: integer
            required:
                - createdAt
                - lastModifiedAt
                - repositoryID
                - ratingScaleID
                - scoreOrder
                - code
                - name
            type: object
        CreateRatingScaleProposal:
            properties:
                code:
                    type: string
                customValues:
                    additionalProperties:
                        type: string
                    description: Custom field values - only declared custom fields for this entity type are allowed
                    example:
                        department: Engineering
                        employeeId: EMP-12345
                        location: Amsterdam
                    type: object
                isProposalExecutionFailed:
                    readOnly: true
                    type: boolean
                isProposalResolved:
                    example: false
                    readOnly: true
                    type: boolean
                name:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                proposalExecutionErrorText:
                    readOnly: true
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestID:
                    format: uuid
                    readOnly: true
                    type: string
                subjectID:
                    format: uuid
                    readOnly: true
                    type: string
            required:
                - requestID
                - isProposalResolved
                - isProposalExecutionFailed
                - subjectID
                - repositoryID
                - code
                - name
            type: object
        CreateRatingScaleRequest:
            properties:
                code:
                    type: string
                createdAt:
                    format: date-time
                    type: string
                customValues:
                    additionalProperties:
                        type: string
                    description: Custom field values - only declared custom fields for this entity type are allowed
                    example:
                        department: Engineering
                        employeeId: EMP-12345
                        location: Amsterdam
                    type: object
                lastModifiedAt:
                    format: date-time
                    type: string
                name:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                repositoryID:
                    format: uuid
                    type: string
            required:
                - createdAt
                - lastModifiedAt
                - repositoryID
                - code
                - name
            type: object
        CreateRepositoryRequest:
            properties:
                code:
                    type: string
            required:
                - code
            type: object
        CreateSkillDefinitionProposal:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                code:
                    type: string
                customValues:
                    additionalProperties:
                        type: string
                    description: Custom field values - only declared custom fields for this entity type are allowed
                    example:
                        department: Engineering
                        employeeId: EMP-12345
                        location: Amsterdam
                    type: object
                description:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                isProposalExecutionFailed:
                    readOnly: true
                    type: boolean
                isProposalResolved:
                    example: false
                    readOnly: true
                    type: boolean
                name:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                proposalExecutionErrorText:
                    readOnly: true
                    type: string
                ratingScaleID:
                    format: uuid
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestID:
                    format: uuid
                    readOnly: true
                    type: string
                subjectID:
                    format: uuid
                    readOnly: true
                    type: string
                typeID:
                    format: uuid
                    type: string
            required:
                - requestID
                - isProposalResolved
                - isProposalExecutionFailed
                - subjectID
                - repositoryID
                - name
                - ratingScaleID
                - activePeriod
            type: object
        CreateSkillDefinitionRequest:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                code:
                    type: string
                createdAt:
                    format: date-time
                    type: string
                customValues:
                    additionalProperties:
                        type: string
                    description: Custom field values - only declared custom fields for this entity type are allowed
                    example:
                        department: Engineering
                        employeeId: EMP-12345
                        location: Amsterdam
                    type: object
                description:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                lastModifiedAt:
                    format: date-time
                    type: string
                name:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                ratingScaleID:
                    format: uuid
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                typeID:
                    format: uuid
                    type: string
            required:
                - createdAt
                - lastModifiedAt
                - repositoryID
                - name
                - ratingScaleID
                - activePeriod
            type: object
        CreateSkillDefinitionTypeProposal:
            properties:
                code:
                    type: string
                customValues:
                    additionalProperties:
                        type: string
                    description: Custom field values - only declared custom fields for this entity type are allowed
                    example:
                        department: Engineering
                        employeeId: EMP-12345
                        location: Amsterdam
                    type: object
                isProposalExecutionFailed:
                    readOnly: true
                    type: boolean
                isProposalResolved:
                    example: false
                    readOnly: true
                    type: boolean
                name:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                proposalExecutionErrorText:
                    readOnly: true
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestID:
                    format: uuid
                    readOnly: true
                    type: string
                subjectID:
                    format: uuid
                    readOnly: true
                    type: string
            required:
                - requestID
                - isProposalResolved
                - isProposalExecutionFailed
                - subjectID
                - repositoryID
                - code
                - name
            type: object
        CreateSkillDefinitionTypeRequest:
            properties:
                code:
                    type: string
                createdAt:
                    format: date-time
                    type: string
                customValues:
                    additionalProperties:
                        type: string
                    description: Custom field values - only declared custom fields for this entity type are allowed
                    example:
                        department: Engineering
                        employeeId: EMP-12345
                        location: Amsterdam
                    type: object
                lastModifiedAt:
                    format: date-time
                    type: string
                name:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                repositoryID:
                    format: uuid
                    type: string
            required:
                - createdAt
                - lastModifiedAt
                - repositoryID
                - code
                - name
            type: object
        CreateSkillPlanningProposal:
            properties:
                closeDate:
                    format: date
                    type: string
                customValues:
                    additionalProperties:
                        type: string
                    description: Custom field values - only declared custom fields for this entity type are allowed
                    example:
                        department: Engineering
                        employeeId: EMP-12345
                        location: Amsterdam
                    type: object
                deadlineDate:
                    format: date
                    type: string
                employeeID:
                    format: uuid
                    type: string
                fromDate:
                    format: date
                    type: string
                isProposalExecutionFailed:
                    readOnly: true
                    type: boolean
                isProposalResolved:
                    example: false
                    readOnly: true
                    type: boolean
                proposalExecutionErrorText:
                    readOnly: true
                    type: string
                remark:
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestID:
                    format: uuid
                    readOnly: true
                    type: string
                skillDefinitionID:
                    format: uuid
                    type: string
                subjectID:
                    format: uuid
                    readOnly: true
                    type: string
                typeOfProofID:
                    format: uuid
                    type: string
            required:
                - requestID
                - isProposalResolved
                - isProposalExecutionFailed
                - subjectID
                - repositoryID
                - employeeID
                - fromDate
                - skillDefinitionID
            type: object
        CreateSkillPlanningRequest:
            properties:
                closeDate:
                    format: date
                    type: string
                createdAt:
                    format: date-time
                    type: string
                customValues:
                    additionalProperties:
                        type: string
                    description: Custom field values - only declared custom fields for this entity type are allowed
                    example:
                        department: Engineering
                        employeeId: EMP-12345
                        location: Amsterdam
                    type: object
                deadlineDate:
                    format: date
                    type: string
                employeeID:
                    format: uuid
                    type: string
                fromDate:
                    format: date
                    type: string
                lastModifiedAt:
                    format: date-time
                    type: string
                remark:
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                skillDefinitionID:
                    format: uuid
                    type: string
                typeOfProofID:
                    format: uuid
                    type: string
            required:
                - createdAt
                - lastModifiedAt
                - repositoryID
                - employeeID
                - fromDate
                - skillDefinitionID
            type: object
        CreateSkillResultProposal:
            properties:
                customValues:
                    additionalProperties:
                        type: string
                    description: Custom field values - only declared custom fields for this entity type are allowed
                    example:
                        department: Engineering
                        employeeId: EMP-12345
                        location: Amsterdam
                    type: object
                employeeID:
                    format: uuid
                    type: string
                expirationDate:
                    format: date
                    type: string
                isProposalExecutionFailed:
                    readOnly: true
                    type: boolean
                isProposalResolved:
                    example: false
                    readOnly: true
                    type: boolean
                issueDate:
                    format: date
                    type: string
                proposalExecutionErrorText:
                    readOnly: true
                    type: string
                remark:
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestID:
                    format: uuid
                    readOnly: true
                    type: string
                scoreID:
                    format: uuid
                    type: string
                subjectID:
                    format: uuid
                    readOnly: true
                    type: string
                typeOfProofID:
                    format: uuid
                    type: string
            required:
                - requestID
                - isProposalResolved
                - isProposalExecutionFailed
                - subjectID
                - repositoryID
                - employeeID
                - issueDate
                - typeOfProofID
            type: object
        CreateSkillResultRequest:
            properties:
                createdAt:
                    format: date-time
                    type: string
                customValues:
                    additionalProperties:
                        type: string
                    description: Custom field values - only declared custom fields for this entity type are allowed
                    example:
                        department: Engineering
                        employeeId: EMP-12345
                        location: Amsterdam
                    type: object
                employeeID:
                    format: uuid
                    type: string
                expirationDate:
                    format: date
                    type: string
                issueDate:
                    format: date
                    type: string
                lastModifiedAt:
                    format: date-time
                    type: string
                remark:
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                scoreID:
                    format: uuid
                    type: string
                typeOfProofID:
                    format: uuid
                    type: string
            required:
                - createdAt
                - lastModifiedAt
                - repositoryID
                - employeeID
                - issueDate
                - typeOfProofID
            type: object
        CreateTypeOfProofProposal:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                code:
                    type: string
                customValues:
                    additionalProperties:
                        type: string
                    description: Custom field values - only declared custom fields for this entity type are allowed
                    example:
                        department: Engineering
                        employeeId: EMP-12345
                        location: Amsterdam
                    type: object
                description:
                    type: string
                isProposalExecutionFailed:
                    readOnly: true
                    type: boolean
                isProposalResolved:
                    example: false
                    readOnly: true
                    type: boolean
                name:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                proposalExecutionErrorText:
                    readOnly: true
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestID:
                    format: uuid
                    readOnly: true
                    type: string
                skillDefinitionID:
                    format: uuid
                    type: string
                subjectID:
                    format: uuid
                    readOnly: true
                    type: string
            required:
                - requestID
                - isProposalResolved
                - isProposalExecutionFailed
                - subjectID
                - repositoryID
                - name
                - skillDefinitionID
                - activePeriod
            type: object
        CreateTypeOfProofRequest:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                code:
                    type: string
                createdAt:
                    format: date-time
                    type: string
                customValues:
                    additionalProperties:
                        type: string
                    description: Custom field values - only declared custom fields for this entity type are allowed
                    example:
                        department: Engineering
                        employeeId: EMP-12345
                        location: Amsterdam
                    type: object
                description:
                    type: string
                lastModifiedAt:
                    format: date-time
                    type: string
                name:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                repositoryID:
                    format: uuid
                    type: string
                skillDefinitionID:
                    format: uuid
                    type: string
            required:
                - createdAt
                - lastModifiedAt
                - repositoryID
                - name
                - skillDefinitionID
                - activePeriod
            type: object
        CreateUpdateCustomFieldDefinitionProposalRequest:
            properties:
                code:
                    description: Omit this field to keep current value
                    type: string
                entityDefinitionID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                id:
                    format: uuid
                    type: string
                name:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys (omit to keep current value)
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                repositoryID:
                    format: uuid
                    type: string
            required:
                - id
                - repositoryID
            type: object
        CreateUpdateEmployeeProposalRequest:
            properties:
                birthDate:
                    description: Omit this field to keep current value
                    format: date
                    type: string
                customValues:
                    additionalProperties:
                        type: string
                    description: Custom field values - only declared custom fields for this entity type are allowed (omit to keep current value)
                    example:
                        department: Engineering
                        employeeId: EMP-12345
                        location: Amsterdam
                    type: object
                email:
                    description: Omit this field to keep current value
                    format: email
                    type: string
                employeeNumber:
                    description: Omit this field to keep current value
                    type: string
                firstName:
                    description: Omit this field to keep current value
                    type: string
                id:
                    format: uuid
                    type: string
                initials:
                    description: Omit this field to keep current value
                    type: string
                remark:
                    description: Omit this field to keep current value
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                surname:
                    description: Omit this field to keep current value
                    type: string
            required:
                - id
                - repositoryID
            type: object
        CreateUpdateEmployeeUnavailabilityProposalRequest:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end) (omit to keep current value)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                employeeID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                id:
                    format: uuid
                    type: string
                reason:
                    description: Omit this field to keep current value
                    type: string
                repositoryID:
                    format: uuid
                    type: string
            required:
                - id
                - repositoryID
            type: object
        CreateUpdateEmploymentContractProposalRequest:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end) (omit to keep current value)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                contractTypeID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                employeeID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                id:
                    format: uuid
                    type: string
                repositoryID:
                    format: uuid
                    type: string
            required:
                - id
                - repositoryID
            type: object
        CreateUpdateEmploymentContractTypeProposalRequest:
            properties:
                code:
                    description: Omit this field to keep current value
                    type: string
                id:
                    format: uuid
                    type: string
                name:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys (omit to keep current value)
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                repositoryID:
                    format: uuid
                    type: string
            required:
                - id
                - repositoryID
            type: object
        CreateUpdateEmploymentRelationProposalRequest:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end) (omit to keep current value)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                fromEmployeeID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                id:
                    format: uuid
                    type: string
                relationTypeID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                toEmployeeID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
            required:
                - id
                - repositoryID
            type: object
        CreateUpdateEmploymentRelationTypeProposalRequest:
            properties:
                code:
                    description: Omit this field to keep current value
                    type: string
                id:
                    format: uuid
                    type: string
                name:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys (omit to keep current value)
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                repositoryID:
                    format: uuid
                    type: string
            required:
                - id
                - repositoryID
            type: object
        CreateUpdateGroupingProposalRequest:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end) (omit to keep current value)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                code:
                    description: Omit this field to keep current value
                    type: string
                customValues:
                    additionalProperties:
                        type: string
                    description: Custom field values - only declared custom fields for this entity type are allowed (omit to keep current value)
                    example:
                        department: Engineering
                        employeeId: EMP-12345
                        location: Amsterdam
                    type: object
                definedInGroupingID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                description:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys (omit to keep current value)
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                id:
                    format: uuid
                    type: string
                name:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys (omit to keep current value)
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                repositoryID:
                    format: uuid
                    type: string
                typeID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
            required:
                - id
                - repositoryID
            type: object
        CreateUpdateGroupingTypeProposalRequest:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end) (omit to keep current value)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                code:
                    description: Omit this field to keep current value
                    type: string
                customValues:
                    additionalProperties:
                        type: string
                    description: Custom field values - only declared custom fields for this entity type are allowed (omit to keep current value)
                    example:
                        department: Engineering
                        employeeId: EMP-12345
                        location: Amsterdam
                    type: object
                id:
                    format: uuid
                    type: string
                name:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys (omit to keep current value)
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                repositoryID:
                    format: uuid
                    type: string
            required:
                - id
                - repositoryID
            type: object
        CreateUpdateMonitoringTraceProposalRequest:
            properties:
                executedAt:
                    description: Omit this field to keep current value
                    format: date-time
                    type: string
                id:
                    format: uuid
                    type: string
                remark:
                    description: Omit this field to keep current value
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestedAt:
                    description: Omit this field to keep current value
                    format: date-time
                    type: string
            required:
                - id
                - repositoryID
            type: object
        CreateUpdatePositionAssignmentProposalRequest:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end) (omit to keep current value)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                employeeID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                id:
                    format: uuid
                    type: string
                remark:
                    description: Omit this field to keep current value
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                tagIDs:
                    description: Omit this field to keep current value
                    items:
                        format: uuid
                        type: string
                    type: array
            required:
                - id
                - repositoryID
            type: object
        CreateUpdateRatingScaleLevelDescriptorProposalRequest:
            properties:
                description:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys (omit to keep current value)
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                id:
                    format: uuid
                    type: string
                repositoryID:
                    format: uuid
                    type: string
            required:
                - id
                - repositoryID
            type: object
        CreateUpdateRatingScaleLevelProposalRequest:
            properties:
                code:
                    description: Omit this field to keep current value
                    type: string
                customValues:
                    additionalProperties:
                        type: string
                    description: Custom field values - only declared custom fields for this entity type are allowed (omit to keep current value)
                    example:
                        department: Engineering
                        employeeId: EMP-12345
                        location: Amsterdam
                    type: object
                description:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys (omit to keep current value)
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                id:
                    format: uuid
                    type: string
                name:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys (omit to keep current value)
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                repositoryID:
                    format: uuid
                    type: string
            required:
                - id
                - repositoryID
            type: object
        CreateUpdateRatingScaleProposalRequest:
            properties:
                code:
                    description: Omit this field to keep current value
                    type: string
                customValues:
                    additionalProperties:
                        type: string
                    description: Custom field values - only declared custom fields for this entity type are allowed (omit to keep current value)
                    example:
                        department: Engineering
                        employeeId: EMP-12345
                        location: Amsterdam
                    type: object
                id:
                    format: uuid
                    type: string
                name:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys (omit to keep current value)
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                repositoryID:
                    format: uuid
                    type: string
            required:
                - id
                - repositoryID
            type: object
        CreateUpdateSkillDefinitionProposalRequest:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end) (omit to keep current value)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                code:
                    description: Omit this field to keep current value
                    type: string
                customValues:
                    additionalProperties:
                        type: string
                    description: Custom field values - only declared custom fields for this entity type are allowed (omit to keep current value)
                    example:
                        department: Engineering
                        employeeId: EMP-12345
                        location: Amsterdam
                    type: object
                description:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys (omit to keep current value)
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                id:
                    format: uuid
                    type: string
                name:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys (omit to keep current value)
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                ratingScaleID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                typeID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
            required:
                - id
                - repositoryID
            type: object
        CreateUpdateSkillDefinitionTypeProposalRequest:
            properties:
                code:
                    description: Omit this field to keep current value
                    type: string
                customValues:
                    additionalProperties:
                        type: string
                    description: Custom field values - only declared custom fields for this entity type are allowed (omit to keep current value)
                    example:
                        department: Engineering
                        employeeId: EMP-12345
                        location: Amsterdam
                    type: object
                id:
                    format: uuid
                    type: string
                name:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys (omit to keep current value)
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                repositoryID:
                    format: uuid
                    type: string
            required:
                - id
                - repositoryID
            type: object
        CreateUpdateSkillPlanningProposalRequest:
            properties:
                closeDate:
                    description: Omit this field to keep current value
                    format: date
                    type: string
                customValues:
                    additionalProperties:
                        type: string
                    description: Custom field values - only declared custom fields for this entity type are allowed (omit to keep current value)
                    example:
                        department: Engineering
                        employeeId: EMP-12345
                        location: Amsterdam
                    type: object
                deadlineDate:
                    description: Omit this field to keep current value
                    format: date
                    type: string
                employeeID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                fromDate:
                    description: Omit this field to keep current value
                    format: date
                    type: string
                id:
                    format: uuid
                    type: string
                remark:
                    description: Omit this field to keep current value
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                skillDefinitionID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                typeOfProofID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
            required:
                - id
                - repositoryID
            type: object
        CreateUpdateSkillResultProposalRequest:
            properties:
                customValues:
                    additionalProperties:
                        type: string
                    description: Custom field values - only declared custom fields for this entity type are allowed (omit to keep current value)
                    example:
                        department: Engineering
                        employeeId: EMP-12345
                        location: Amsterdam
                    type: object
                employeeID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                expirationDate:
                    description: Omit this field to keep current value
                    format: date
                    type: string
                id:
                    format: uuid
                    type: string
                issueDate:
                    description: Omit this field to keep current value
                    format: date
                    type: string
                remark:
                    description: Omit this field to keep current value
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                scoreID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                typeOfProofID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
            required:
                - id
                - repositoryID
            type: object
        CreateUpdateTypeOfProofProposalRequest:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end) (omit to keep current value)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                code:
                    description: Omit this field to keep current value
                    type: string
                customValues:
                    additionalProperties:
                        type: string
                    description: Custom field values - only declared custom fields for this entity type are allowed (omit to keep current value)
                    example:
                        department: Engineering
                        employeeId: EMP-12345
                        location: Amsterdam
                    type: object
                description:
                    description: Omit this field to keep current value
                    type: string
                id:
                    format: uuid
                    type: string
                name:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys (omit to keep current value)
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                repositoryID:
                    format: uuid
                    type: string
                skillDefinitionID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
            required:
                - id
                - repositoryID
            type: object
        CustomFieldDefinition:
            properties:
                code:
                    type: string
                createdAt:
                    format: date-time
                    type: string
                entityDefinitionID:
                    format: uuid
                    type: string
                id:
                    format: uuid
                    type: string
                lastModifiedAt:
                    format: date-time
                    type: string
                name:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                repositoryID:
                    format: uuid
                    type: string
            required:
                - id
                - createdAt
                - lastModifiedAt
                - repositoryID
                - code
                - name
                - entityDefinitionID
            type: object
        DeleteCustomFieldDefinitionProposal:
            properties:
                id:
                    format: uuid
                    type: string
                isProposalExecutionFailed:
                    readOnly: true
                    type: boolean
                isProposalResolved:
                    example: false
                    readOnly: true
                    type: boolean
                proposalExecutionErrorText:
                    readOnly: true
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestID:
                    format: uuid
                    readOnly: true
                    type: string
            required:
                - requestID
                - isProposalResolved
                - isProposalExecutionFailed
                - id
                - repositoryID
            type: object
        DeleteEmployeeProposal:
            properties:
                id:
                    format: uuid
                    type: string
                isProposalExecutionFailed:
                    readOnly: true
                    type: boolean
                isProposalResolved:
                    example: false
                    readOnly: true
                    type: boolean
                proposalExecutionErrorText:
                    readOnly: true
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestID:
                    format: uuid
                    readOnly: true
                    type: string
            required:
                - requestID
                - isProposalResolved
                - isProposalExecutionFailed
                - id
                - repositoryID
            type: object
        DeleteEmployeeUnavailabilityProposal:
            properties:
                id:
                    format: uuid
                    type: string
                isProposalExecutionFailed:
                    readOnly: true
                    type: boolean
                isProposalResolved:
                    example: false
                    readOnly: true
                    type: boolean
                proposalExecutionErrorText:
                    readOnly: true
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestID:
                    format: uuid
                    readOnly: true
                    type: string
            required:
                - requestID
                - isProposalResolved
                - isProposalExecutionFailed
                - id
                - repositoryID
            type: object
        DeleteEmploymentContractProposal:
            properties:
                id:
                    format: uuid
                    type: string
                isProposalExecutionFailed:
                    readOnly: true
                    type: boolean
                isProposalResolved:
                    example: false
                    readOnly: true
                    type: boolean
                proposalExecutionErrorText:
                    readOnly: true
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestID:
                    format: uuid
                    readOnly: true
                    type: string
            required:
                - requestID
                - isProposalResolved
                - isProposalExecutionFailed
                - id
                - repositoryID
            type: object
        DeleteEmploymentContractTypeProposal:
            properties:
                id:
                    format: uuid
                    type: string
                isProposalExecutionFailed:
                    readOnly: true
                    type: boolean
                isProposalResolved:
                    example: false
                    readOnly: true
                    type: boolean
                proposalExecutionErrorText:
                    readOnly: true
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestID:
                    format: uuid
                    readOnly: true
                    type: string
            required:
                - requestID
                - isProposalResolved
                - isProposalExecutionFailed
                - id
                - repositoryID
            type: object
        DeleteEmploymentRelationProposal:
            properties:
                id:
                    format: uuid
                    type: string
                isProposalExecutionFailed:
                    readOnly: true
                    type: boolean
                isProposalResolved:
                    example: false
                    readOnly: true
                    type: boolean
                proposalExecutionErrorText:
                    readOnly: true
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestID:
                    format: uuid
                    readOnly: true
                    type: string
            required:
                - requestID
                - isProposalResolved
                - isProposalExecutionFailed
                - id
                - repositoryID
            type: object
        DeleteEmploymentRelationTypeProposal:
            properties:
                id:
                    format: uuid
                    type: string
                isProposalExecutionFailed:
                    readOnly: true
                    type: boolean
                isProposalResolved:
                    example: false
                    readOnly: true
                    type: boolean
                proposalExecutionErrorText:
                    readOnly: true
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestID:
                    format: uuid
                    readOnly: true
                    type: string
            required:
                - requestID
                - isProposalResolved
                - isProposalExecutionFailed
                - id
                - repositoryID
            type: object
        DeleteGroupingProposal:
            properties:
                id:
                    format: uuid
                    type: string
                isProposalExecutionFailed:
                    readOnly: true
                    type: boolean
                isProposalResolved:
                    example: false
                    readOnly: true
                    type: boolean
                proposalExecutionErrorText:
                    readOnly: true
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestID:
                    format: uuid
                    readOnly: true
                    type: string
            required:
                - requestID
                - isProposalResolved
                - isProposalExecutionFailed
                - id
                - repositoryID
            type: object
        DeleteGroupingTypeProposal:
            properties:
                id:
                    format: uuid
                    type: string
                isProposalExecutionFailed:
                    readOnly: true
                    type: boolean
                isProposalResolved:
                    example: false
                    readOnly: true
                    type: boolean
                proposalExecutionErrorText:
                    readOnly: true
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestID:
                    format: uuid
                    readOnly: true
                    type: string
            required:
                - requestID
                - isProposalResolved
                - isProposalExecutionFailed
                - id
                - repositoryID
            type: object
        DeleteMonitoringTraceProposal:
            properties:
                id:
                    format: uuid
                    type: string
                isProposalExecutionFailed:
                    readOnly: true
                    type: boolean
                isProposalResolved:
                    example: false
                    readOnly: true
                    type: boolean
                proposalExecutionErrorText:
                    readOnly: true
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestID:
                    format: uuid
                    readOnly: true
                    type: string
            required:
                - requestID
                - isProposalResolved
                - isProposalExecutionFailed
                - id
                - repositoryID
            type: object
        DeletePositionAssignmentProposal:
            properties:
                id:
                    format: uuid
                    type: string
                isProposalExecutionFailed:
                    readOnly: true
                    type: boolean
                isProposalResolved:
                    example: false
                    readOnly: true
                    type: boolean
                proposalExecutionErrorText:
                    readOnly: true
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestID:
                    format: uuid
                    readOnly: true
                    type: string
            required:
                - requestID
                - isProposalResolved
                - isProposalExecutionFailed
                - id
                - repositoryID
            type: object
        DeleteRatingScaleLevelDescriptorProposal:
            properties:
                id:
                    format: uuid
                    type: string
                isProposalExecutionFailed:
                    readOnly: true
                    type: boolean
                isProposalResolved:
                    example: false
                    readOnly: true
                    type: boolean
                proposalExecutionErrorText:
                    readOnly: true
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestID:
                    format: uuid
                    readOnly: true
                    type: string
            required:
                - requestID
                - isProposalResolved
                - isProposalExecutionFailed
                - id
                - repositoryID
            type: object
        DeleteRatingScaleLevelProposal:
            properties:
                id:
                    format: uuid
                    type: string
                isProposalExecutionFailed:
                    readOnly: true
                    type: boolean
                isProposalResolved:
                    example: false
                    readOnly: true
                    type: boolean
                proposalExecutionErrorText:
                    readOnly: true
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestID:
                    format: uuid
                    readOnly: true
                    type: string
            required:
                - requestID
                - isProposalResolved
                - isProposalExecutionFailed
                - id
                - repositoryID
            type: object
        DeleteRatingScaleProposal:
            properties:
                id:
                    format: uuid
                    type: string
                isProposalExecutionFailed:
                    readOnly: true
                    type: boolean
                isProposalResolved:
                    example: false
                    readOnly: true
                    type: boolean
                proposalExecutionErrorText:
                    readOnly: true
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestID:
                    format: uuid
                    readOnly: true
                    type: string
            required:
                - requestID
                - isProposalResolved
                - isProposalExecutionFailed
                - id
                - repositoryID
            type: object
        DeleteSkillDefinitionProposal:
            properties:
                id:
                    format: uuid
                    type: string
                isProposalExecutionFailed:
                    readOnly: true
                    type: boolean
                isProposalResolved:
                    example: false
                    readOnly: true
                    type: boolean
                proposalExecutionErrorText:
                    readOnly: true
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestID:
                    format: uuid
                    readOnly: true
                    type: string
            required:
                - requestID
                - isProposalResolved
                - isProposalExecutionFailed
                - id
                - repositoryID
            type: object
        DeleteSkillDefinitionTypeProposal:
            properties:
                id:
                    format: uuid
                    type: string
                isProposalExecutionFailed:
                    readOnly: true
                    type: boolean
                isProposalResolved:
                    example: false
                    readOnly: true
                    type: boolean
                proposalExecutionErrorText:
                    readOnly: true
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestID:
                    format: uuid
                    readOnly: true
                    type: string
            required:
                - requestID
                - isProposalResolved
                - isProposalExecutionFailed
                - id
                - repositoryID
            type: object
        DeleteSkillPlanningProposal:
            properties:
                id:
                    format: uuid
                    type: string
                isProposalExecutionFailed:
                    readOnly: true
                    type: boolean
                isProposalResolved:
                    example: false
                    readOnly: true
                    type: boolean
                proposalExecutionErrorText:
                    readOnly: true
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestID:
                    format: uuid
                    readOnly: true
                    type: string
            required:
                - requestID
                - isProposalResolved
                - isProposalExecutionFailed
                - id
                - repositoryID
            type: object
        DeleteSkillResultProposal:
            properties:
                id:
                    format: uuid
                    type: string
                isProposalExecutionFailed:
                    readOnly: true
                    type: boolean
                isProposalResolved:
                    example: false
                    readOnly: true
                    type: boolean
                proposalExecutionErrorText:
                    readOnly: true
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestID:
                    format: uuid
                    readOnly: true
                    type: string
            required:
                - requestID
                - isProposalResolved
                - isProposalExecutionFailed
                - id
                - repositoryID
            type: object
        DeleteTypeOfProofProposal:
            properties:
                id:
                    format: uuid
                    type: string
                isProposalExecutionFailed:
                    readOnly: true
                    type: boolean
                isProposalResolved:
                    example: false
                    readOnly: true
                    type: boolean
                proposalExecutionErrorText:
                    readOnly: true
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestID:
                    format: uuid
                    readOnly: true
                    type: string
            required:
                - requestID
                - isProposalResolved
                - isProposalExecutionFailed
                - id
                - repositoryID
            type: object
        Employee:
            properties:
                birthDate:
                    format: date
                    type: string
                createdAt:
                    format: date-time
                    type: string
                customValues:
                    additionalProperties:
                        type: string
                    description: Custom field values - only declared custom fields for this entity type are allowed
                    example:
                        department: Engineering
                        employeeId: EMP-12345
                        location: Amsterdam
                    type: object
                email:
                    format: email
                    type: string
                employeeNumber:
                    type: string
                firstName:
                    type: string
                id:
                    format: uuid
                    type: string
                initials:
                    type: string
                lastModifiedAt:
                    format: date-time
                    type: string
                remark:
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                surname:
                    type: string
            required:
                - id
                - createdAt
                - lastModifiedAt
                - repositoryID
                - surname
            type: object
        EmployeeUnavailability:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                createdAt:
                    format: date-time
                    type: string
                employeeID:
                    format: uuid
                    type: string
                id:
                    format: uuid
                    type: string
                lastModifiedAt:
                    format: date-time
                    type: string
                reason:
                    type: string
                repositoryID:
                    format: uuid
                    type: string
            required:
                - id
                - createdAt
                - lastModifiedAt
                - repositoryID
                - activePeriod
                - employeeID
            type: object
        EmploymentContract:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                contractTypeID:
                    format: uuid
                    type: string
                createdAt:
                    format: date-time
                    type: string
                employeeID:
                    format: uuid
                    type: string
                id:
                    format: uuid
                    type: string
                lastModifiedAt:
                    format: date-time
                    type: string
                repositoryID:
                    format: uuid
                    type: string
            required:
                - id
                - createdAt
                - lastModifiedAt
                - repositoryID
                - activePeriod
                - employeeID
            type: object
        EmploymentContractType:
            properties:
                code:
                    type: string
                createdAt:
                    format: date-time
                    type: string
                id:
                    format: uuid
                    type: string
                lastModifiedAt:
                    format: date-time
                    type: string
                name:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                repositoryID:
                    format: uuid
                    type: string
            required:
                - id
                - createdAt
                - lastModifiedAt
                - repositoryID
                - code
                - name
            type: object
        EmploymentRelation:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                createdAt:
                    format: date-time
                    type: string
                fromEmployeeID:
                    format: uuid
                    type: string
                id:
                    format: uuid
                    type: string
                lastModifiedAt:
                    format: date-time
                    type: string
                relationTypeID:
                    format: uuid
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                toEmployeeID:
                    format: uuid
                    type: string
            required:
                - id
                - createdAt
                - lastModifiedAt
                - repositoryID
                - activePeriod
                - toEmployeeID
                - fromEmployeeID
                - relationTypeID
            type: object
        EmploymentRelationType:
            properties:
                code:
                    type: string
                createdAt:
                    format: date-time
                    type: string
                id:
                    format: uuid
                    type: string
                lastModifiedAt:
                    format: date-time
                    type: string
                name:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                repositoryID:
                    format: uuid
                    type: string
            required:
                - id
                - createdAt
                - lastModifiedAt
                - repositoryID
                - code
                - name
            type: object
        EntityDefinition:
            properties:
                code:
                    type: string
                id:
                    format: uuid
                    type: string
                name:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
            required:
                - id
                - code
                - name
            type: object
        Error:
            properties:
                code:
                    description: Machine-readable error code
                    enum:
                        - INVALID_INPUT
                        - MISSING_AUTH
                        - INVALID_TOKEN
                        - NOT_FOUND
                        - INTERNAL_ERROR
                        - RATE_LIMIT_EXCEEDED
                        - PROPOSAL_CONFLICT
                        - APPROVAL_REQUIRED
                    type: string
                details:
                    additionalProperties: true
                    description: Additional error details
                    type: object
                message:
                    description: Human-readable error message
                    type: string
                requestId:
                    description: Unique request identifier for support
                    type: string
            required:
                - code
                - message
            type: object
        Grouping:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                code:
                    type: string
                createdAt:
                    format: date-time
                    type: string
                customValues:
                    additionalProperties:
                        type: string
                    description: Custom field values - only declared custom fields for this entity type are allowed
                    example:
                        department: Engineering
                        employeeId: EMP-12345
                        location: Amsterdam
                    type: object
                definedInGroupingID:
                    format: uuid
                    type: string
                description:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                id:
                    format: uuid
                    type: string
                lastModifiedAt:
                    format: date-time
                    type: string
                name:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                repositoryID:
                    format: uuid
                    type: string
                typeID:
                    format: uuid
                    type: string
            required:
                - id
                - createdAt
                - lastModifiedAt
                - repositoryID
                - code
                - name
                - activePeriod
            type: object
        GroupingType:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                code:
                    type: string
                createdAt:
                    format: date-time
                    type: string
                customValues:
                    additionalProperties:
                        type: string
                    description: Custom field values - only declared custom fields for this entity type are allowed
                    example:
                        department: Engineering
                        employeeId: EMP-12345
                        location: Amsterdam
                    type: object
                id:
                    format: uuid
                    type: string
                lastModifiedAt:
                    format: date-time
                    type: string
                name:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                repositoryID:
                    format: uuid
                    type: string
            required:
                - id
                - createdAt
                - lastModifiedAt
                - repositoryID
                - code
                - name
                - activePeriod
            type: object
        ListCreateCustomFieldDefinitionProposalResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/CreateCustomFieldDefinitionProposal'
                    type: array
                pagination:
                    properties:
                        count:
                            description: Actual number of items returned in this page
                            format: int64
                            type: integer
                        hasMore:
                            description: Indicates if there are more items to fetch
                            type: boolean
                        limit:
                            description: Maximum number of items requested for this page
                            format: int64
                            type: integer
                        nextCursor:
                            description: Cursor for the next page. Pass this value in the 'cursor' parameter to get the next page.
                            type: string
                        total:
                            description: Total number of items matching the query
                            format: int64
                            type: integer
                    required:
                        - total
                        - limit
                        - count
                        - hasMore
                    type: object
            required:
                - data
                - pagination
            type: object
        ListCreateEmployeeProposalResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/CreateEmployeeProposal'
                    type: array
                pagination:
                    properties:
                        count:
                            description: Actual number of items returned in this page
                            format: int64
                            type: integer
                        hasMore:
                            description: Indicates if there are more items to fetch
                            type: boolean
                        limit:
                            description: Maximum number of items requested for this page
                            format: int64
                            type: integer
                        nextCursor:
                            description: Cursor for the next page. Pass this value in the 'cursor' parameter to get the next page.
                            type: string
                        total:
                            description: Total number of items matching the query
                            format: int64
                            type: integer
                    required:
                        - total
                        - limit
                        - count
                        - hasMore
                    type: object
            required:
                - data
                - pagination
            type: object
        ListCreateEmployeeUnavailabilityProposalResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/CreateEmployeeUnavailabilityProposal'
                    type: array
                pagination:
                    properties:
                        count:
                            description: Actual number of items returned in this page
                            format: int64
                            type: integer
                        hasMore:
                            description: Indicates if there are more items to fetch
                            type: boolean
                        limit:
                            description: Maximum number of items requested for this page
                            format: int64
                            type: integer
                        nextCursor:
                            description: Cursor for the next page. Pass this value in the 'cursor' parameter to get the next page.
                            type: string
                        total:
                            description: Total number of items matching the query
                            format: int64
                            type: integer
                    required:
                        - total
                        - limit
                        - count
                        - hasMore
                    type: object
            required:
                - data
                - pagination
            type: object
        ListCreateEmploymentContractProposalResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/CreateEmploymentContractProposal'
                    type: array
                pagination:
                    properties:
                        count:
                            description: Actual number of items returned in this page
                            format: int64
                            type: integer
                        hasMore:
                            description: Indicates if there are more items to fetch
                            type: boolean
                        limit:
                            description: Maximum number of items requested for this page
                            format: int64
                            type: integer
                        nextCursor:
                            description: Cursor for the next page. Pass this value in the 'cursor' parameter to get the next page.
                            type: string
                        total:
                            description: Total number of items matching the query
                            format: int64
                            type: integer
                    required:
                        - total
                        - limit
                        - count
                        - hasMore
                    type: object
            required:
                - data
                - pagination
            type: object
        ListCreateEmploymentContractTypeProposalResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/CreateEmploymentContractTypeProposal'
                    type: array
                pagination:
                    properties:
                        count:
                            description: Actual number of items returned in this page
                            format: int64
                            type: integer
                        hasMore:
                            description: Indicates if there are more items to fetch
                            type: boolean
                        limit:
                            description: Maximum number of items requested for this page
                            format: int64
                            type: integer
                        nextCursor:
                            description: Cursor for the next page. Pass this value in the 'cursor' parameter to get the next page.
                            type: string
                        total:
                            description: Total number of items matching the query
                            format: int64
                            type: integer
                    required:
                        - total
                        - limit
                        - count
                        - hasMore
                    type: object
            required:
                - data
                - pagination
            type: object
        ListCreateEmploymentRelationProposalResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/CreateEmploymentRelationProposal'
                    type: array
                pagination:
                    properties:
                        count:
                            description: Actual number of items returned in this page
                            format: int64
                            type: integer
                        hasMore:
                            description: Indicates if there are more items to fetch
                            type: boolean
                        limit:
                            description: Maximum number of items requested for this page
                            format: int64
                            type: integer
                        nextCursor:
                            description: Cursor for the next page. Pass this value in the 'cursor' parameter to get the next page.
                            type: string
                        total:
                            description: Total number of items matching the query
                            format: int64
                            type: integer
                    required:
                        - total
                        - limit
                        - count
                        - hasMore
                    type: object
            required:
                - data
                - pagination
            type: object
        ListCreateEmploymentRelationTypeProposalResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/CreateEmploymentRelationTypeProposal'
                    type: array
                pagination:
                    properties:
                        count:
                            description: Actual number of items returned in this page
                            format: int64
                            type: integer
                        hasMore:
                            description: Indicates if there are more items to fetch
                            type: boolean
                        limit:
                            description: Maximum number of items requested for this page
                            format: int64
                            type: integer
                        nextCursor:
                            description: Cursor for the next page. Pass this value in the 'cursor' parameter to get the next page.
                            type: string
                        total:
                            description: Total number of items matching the query
                            format: int64
                            type: integer
                    required:
                        - total
                        - limit
                        - count
                        - hasMore
                    type: object
            required:
                - data
                - pagination
            type: object
        ListCreateGroupingProposalResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/CreateGroupingProposal'
                    type: array
                pagination:
                    properties:
                        count:
                            description: Actual number of items returned in this page
                            format: int64
                            type: integer
                        hasMore:
                            description: Indicates if there are more items to fetch
                            type: boolean
                        limit:
                            description: Maximum number of items requested for this page
                            format: int64
                            type: integer
                        nextCursor:
                            description: Cursor for the next page. Pass this value in the 'cursor' parameter to get the next page.
                            type: string
                        total:
                            description: Total number of items matching the query
                            format: int64
                            type: integer
                    required:
                        - total
                        - limit
                        - count
                        - hasMore
                    type: object
            required:
                - data
                - pagination
            type: object
        ListCreateGroupingTypeProposalResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/CreateGroupingTypeProposal'
                    type: array
                pagination:
                    properties:
                        count:
                            description: Actual number of items returned in this page
                            format: int64
                            type: integer
                        hasMore:
                            description: Indicates if there are more items to fetch
                            type: boolean
                        limit:
                            description: Maximum number of items requested for this page
                            format: int64
                            type: integer
                        nextCursor:
                            description: Cursor for the next page. Pass this value in the 'cursor' parameter to get the next page.
                            type: string
                        total:
                            description: Total number of items matching the query
                            format: int64
                            type: integer
                    required:
                        - total
                        - limit
                        - count
                        - hasMore
                    type: object
            required:
                - data
                - pagination
            type: object
        ListCreateMonitoringTraceProposalResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/CreateMonitoringTraceProposal'
                    type: array
                pagination:
                    properties:
                        count:
                            description: Actual number of items returned in this page
                            format: int64
                            type: integer
                        hasMore:
                            description: Indicates if there are more items to fetch
                            type: boolean
                        limit:
                            description: Maximum number of items requested for this page
                            format: int64
                            type: integer
                        nextCursor:
                            description: Cursor for the next page. Pass this value in the 'cursor' parameter to get the next page.
                            type: string
                        total:
                            description: Total number of items matching the query
                            format: int64
                            type: integer
                    required:
                        - total
                        - limit
                        - count
                        - hasMore
                    type: object
            required:
                - data
                - pagination
            type: object
        ListCreatePositionAssignmentProposalResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/CreatePositionAssignmentProposal'
                    type: array
                pagination:
                    properties:
                        count:
                            description: Actual number of items returned in this page
                            format: int64
                            type: integer
                        hasMore:
                            description: Indicates if there are more items to fetch
                            type: boolean
                        limit:
                            description: Maximum number of items requested for this page
                            format: int64
                            type: integer
                        nextCursor:
                            description: Cursor for the next page. Pass this value in the 'cursor' parameter to get the next page.
                            type: string
                        total:
                            description: Total number of items matching the query
                            format: int64
                            type: integer
                    required:
                        - total
                        - limit
                        - count
                        - hasMore
                    type: object
            required:
                - data
                - pagination
            type: object
        ListCreateRatingScaleLevelDescriptorProposalResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/CreateRatingScaleLevelDescriptorProposal'
                    type: array
                pagination:
                    properties:
                        count:
                            description: Actual number of items returned in this page
                            format: int64
                            type: integer
                        hasMore:
                            description: Indicates if there are more items to fetch
                            type: boolean
                        limit:
                            description: Maximum number of items requested for this page
                            format: int64
                            type: integer
                        nextCursor:
                            description: Cursor for the next page. Pass this value in the 'cursor' parameter to get the next page.
                            type: string
                        total:
                            description: Total number of items matching the query
                            format: int64
                            type: integer
                    required:
                        - total
                        - limit
                        - count
                        - hasMore
                    type: object
            required:
                - data
                - pagination
            type: object
        ListCreateRatingScaleLevelProposalResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/CreateRatingScaleLevelProposal'
                    type: array
                pagination:
                    properties:
                        count:
                            description: Actual number of items returned in this page
                            format: int64
                            type: integer
                        hasMore:
                            description: Indicates if there are more items to fetch
                            type: boolean
                        limit:
                            description: Maximum number of items requested for this page
                            format: int64
                            type: integer
                        nextCursor:
                            description: Cursor for the next page. Pass this value in the 'cursor' parameter to get the next page.
                            type: string
                        total:
                            description: Total number of items matching the query
                            format: int64
                            type: integer
                    required:
                        - total
                        - limit
                        - count
                        - hasMore
                    type: object
            required:
                - data
                - pagination
            type: object
        ListCreateRatingScaleProposalResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/CreateRatingScaleProposal'
                    type: array
                pagination:
                    properties:
                        count:
                            description: Actual number of items returned in this page
                            format: int64
                            type: integer
                        hasMore:
                            description: Indicates if there are more items to fetch
                            type: boolean
                        limit:
                            description: Maximum number of items requested for this page
                            format: int64
                            type: integer
                        nextCursor:
                            description: Cursor for the next page. Pass this value in the 'cursor' parameter to get the next page.
                            type: string
                        total:
                            description: Total number of items matching the query
                            format: int64
                            type: integer
                    required:
                        - total
                        - limit
                        - count
                        - hasMore
                    type: object
            required:
                - data
                - pagination
            type: object
        ListCreateSkillDefinitionProposalResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/CreateSkillDefinitionProposal'
                    type: array
                pagination:
                    properties:
                        count:
                            description: Actual number of items returned in this page
                            format: int64
                            type: integer
                        hasMore:
                            description: Indicates if there are more items to fetch
                            type: boolean
                        limit:
                            description: Maximum number of items requested for this page
                            format: int64
                            type: integer
                        nextCursor:
                            description: Cursor for the next page. Pass this value in the 'cursor' parameter to get the next page.
                            type: string
                        total:
                            description: Total number of items matching the query
                            format: int64
                            type: integer
                    required:
                        - total
                        - limit
                        - count
                        - hasMore
                    type: object
            required:
                - data
                - pagination
            type: object
        ListCreateSkillDefinitionTypeProposalResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/CreateSkillDefinitionTypeProposal'
                    type: array
                pagination:
                    properties:
                        count:
                            description: Actual number of items returned in this page
                            format: int64
                            type: integer
                        hasMore:
                            description: Indicates if there are more items to fetch
                            type: boolean
                        limit:
                            description: Maximum number of items requested for this page
                            format: int64
                            type: integer
                        nextCursor:
                            description: Cursor for the next page. Pass this value in the 'cursor' parameter to get the next page.
                            type: string
                        total:
                            description: Total number of items matching the query
                            format: int64
                            type: integer
                    required:
                        - total
                        - limit
                        - count
                        - hasMore
                    type: object
            required:
                - data
                - pagination
            type: object
        ListCreateSkillPlanningProposalResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/CreateSkillPlanningProposal'
                    type: array
                pagination:
                    properties:
                        count:
                            description: Actual number of items returned in this page
                            format: int64
                            type: integer
                        hasMore:
                            description: Indicates if there are more items to fetch
                            type: boolean
                        limit:
                            description: Maximum number of items requested for this page
                            format: int64
                            type: integer
                        nextCursor:
                            description: Cursor for the next page. Pass this value in the 'cursor' parameter to get the next page.
                            type: string
                        total:
                            description: Total number of items matching the query
                            format: int64
                            type: integer
                    required:
                        - total
                        - limit
                        - count
                        - hasMore
                    type: object
            required:
                - data
                - pagination
            type: object
        ListCreateSkillResultProposalResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/CreateSkillResultProposal'
                    type: array
                pagination:
                    properties:
                        count:
                            description: Actual number of items returned in this page
                            format: int64
                            type: integer
                        hasMore:
                            description: Indicates if there are more items to fetch
                            type: boolean
                        limit:
                            description: Maximum number of items requested for this page
                            format: int64
                            type: integer
                        nextCursor:
                            description: Cursor for the next page. Pass this value in the 'cursor' parameter to get the next page.
                            type: string
                        total:
                            description: Total number of items matching the query
                            format: int64
                            type: integer
                    required:
                        - total
                        - limit
                        - count
                        - hasMore
                    type: object
            required:
                - data
                - pagination
            type: object
        ListCreateTypeOfProofProposalResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/CreateTypeOfProofProposal'
                    type: array
                pagination:
                    properties:
                        count:
                            description: Actual number of items returned in this page
                            format: int64
                            type: integer
                        hasMore:
                            description: Indicates if there are more items to fetch
                            type: boolean
                        limit:
                            description: Maximum number of items requested for this page
                            format: int64
                            type: integer
                        nextCursor:
                            description: Cursor for the next page. Pass this value in the 'cursor' parameter to get the next page.
                            type: string
                        total:
                            description: Total number of items matching the query
                            format: int64
                            type: integer
                    required:
                        - total
                        - limit
                        - count
                        - hasMore
                    type: object
            required:
                - data
                - pagination
            type: object
        ListCustomFieldDefinitionResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/CustomFieldDefinition'
                    type: array
                pagination:
                    properties:
                        count:
                            description: Actual number of items returned in this page
                            format: int64
                            type: integer
                        hasMore:
                            description: Indicates if there are more items to fetch
                            type: boolean
                        limit:
                            description: Maximum number of items requested for this page
                            format: int64
                            type: integer
                        nextCursor:
                            description: Cursor for the next page. Pass this value in the 'cursor' parameter to get the next page.
                            type: string
                        total:
                            description: Total number of items matching the query
                            format: int64
                            type: integer
                    required:
                        - total
                        - limit
                        - count
                        - hasMore
                    type: object
            required:
                - data
                - pagination
            type: object
        ListDeleteCustomFieldDefinitionProposalResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/DeleteCustomFieldDefinitionProposal'
                    type: array
                pagination:
                    properties:
                        count:
                            description: Actual number of items returned in this page
                            format: int64
                            type: integer
                        hasMore:
                            description: Indicates if there are more items to fetch
                            type: boolean
                        limit:
                            description: Maximum number of items requested for this page
                            format: int64
                            type: integer
                        nextCursor:
                            description: Cursor for the next page. Pass this value in the 'cursor' parameter to get the next page.
                            type: string
                        total:
                            description: Total number of items matching the query
                            format: int64
                            type: integer
                    required:
                        - total
                        - limit
                        - count
                        - hasMore
                    type: object
            required:
                - data
                - pagination
            type: object
        ListDeleteEmployeeProposalResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/DeleteEmployeeProposal'
                    type: array
                pagination:
                    properties:
                        count:
                            description: Actual number of items returned in this page
                            format: int64
                            type: integer
                        hasMore:
                            description: Indicates if there are more items to fetch
                            type: boolean
                        limit:
                            description: Maximum number of items requested for this page
                            format: int64
                            type: integer
                        nextCursor:
                            description: Cursor for the next page. Pass this value in the 'cursor' parameter to get the next page.
                            type: string
                        total:
                            description: Total number of items matching the query
                            format: int64
                            type: integer
                    required:
                        - total
                        - limit
                        - count
                        - hasMore
                    type: object
            required:
                - data
                - pagination
            type: object
        ListDeleteEmployeeUnavailabilityProposalResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/DeleteEmployeeUnavailabilityProposal'
                    type: array
                pagination:
                    properties:
                        count:
                            description: Actual number of items returned in this page
                            format: int64
                            type: integer
                        hasMore:
                            description: Indicates if there are more items to fetch
                            type: boolean
                        limit:
                            description: Maximum number of items requested for this page
                            format: int64
                            type: integer
                        nextCursor:
                            description: Cursor for the next page. Pass this value in the 'cursor' parameter to get the next page.
                            type: string
                        total:
                            description: Total number of items matching the query
                            format: int64
                            type: integer
                    required:
                        - total
                        - limit
                        - count
                        - hasMore
                    type: object
            required:
                - data
                - pagination
            type: object
        ListDeleteEmploymentContractProposalResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/DeleteEmploymentContractProposal'
                    type: array
                pagination:
                    properties:
                        count:
                            description: Actual number of items returned in this page
                            format: int64
                            type: integer
                        hasMore:
                            description: Indicates if there are more items to fetch
                            type: boolean
                        limit:
                            description: Maximum number of items requested for this page
                            format: int64
                            type: integer
                        nextCursor:
                            description: Cursor for the next page. Pass this value in the 'cursor' parameter to get the next page.
                            type: string
                        total:
                            description: Total number of items matching the query
                            format: int64
                            type: integer
                    required:
                        - total
                        - limit
                        - count
                        - hasMore
                    type: object
            required:
                - data
                - pagination
            type: object
        ListDeleteEmploymentContractTypeProposalResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/DeleteEmploymentContractTypeProposal'
                    type: array
                pagination:
                    properties:
                        count:
                            description: Actual number of items returned in this page
                            format: int64
                            type: integer
                        hasMore:
                            description: Indicates if there are more items to fetch
                            type: boolean
                        limit:
                            description: Maximum number of items requested for this page
                            format: int64
                            type: integer
                        nextCursor:
                            description: Cursor for the next page. Pass this value in the 'cursor' parameter to get the next page.
                            type: string
                        total:
                            description: Total number of items matching the query
                            format: int64
                            type: integer
                    required:
                        - total
                        - limit
                        - count
                        - hasMore
                    type: object
            required:
                - data
                - pagination
            type: object
        ListDeleteEmploymentRelationProposalResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/DeleteEmploymentRelationProposal'
                    type: array
                pagination:
                    properties:
                        count:
                            description: Actual number of items returned in this page
                            format: int64
                            type: integer
                        hasMore:
                            description: Indicates if there are more items to fetch
                            type: boolean
                        limit:
                            description: Maximum number of items requested for this page
                            format: int64
                            type: integer
                        nextCursor:
                            description: Cursor for the next page. Pass this value in the 'cursor' parameter to get the next page.
                            type: string
                        total:
                            description: Total number of items matching the query
                            format: int64
                            type: integer
                    required:
                        - total
                        - limit
                        - count
                        - hasMore
                    type: object
            required:
                - data
                - pagination
            type: object
        ListDeleteEmploymentRelationTypeProposalResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/DeleteEmploymentRelationTypeProposal'
                    type: array
                pagination:
                    properties:
                        count:
                            description: Actual number of items returned in this page
                            format: int64
                            type: integer
                        hasMore:
                            description: Indicates if there are more items to fetch
                            type: boolean
                        limit:
                            description: Maximum number of items requested for this page
                            format: int64
                            type: integer
                        nextCursor:
                            description: Cursor for the next page. Pass this value in the 'cursor' parameter to get the next page.
                            type: string
                        total:
                            description: Total number of items matching the query
                            format: int64
                            type: integer
                    required:
                        - total
                        - limit
                        - count
                        - hasMore
                    type: object
            required:
                - data
                - pagination
            type: object
        ListDeleteGroupingProposalResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/DeleteGroupingProposal'
                    type: array
                pagination:
                    properties:
                        count:
                            description: Actual number of items returned in this page
                            format: int64
                            type: integer
                        hasMore:
                            description: Indicates if there are more items to fetch
                            type: boolean
                        limit:
                            description: Maximum number of items requested for this page
                            format: int64
                            type: integer
                        nextCursor:
                            description: Cursor for the next page. Pass this value in the 'cursor' parameter to get the next page.
                            type: string
                        total:
                            description: Total number of items matching the query
                            format: int64
                            type: integer
                    required:
                        - total
                        - limit
                        - count
                        - hasMore
                    type: object
            required:
                - data
                - pagination
            type: object
        ListDeleteGroupingTypeProposalResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/DeleteGroupingTypeProposal'
                    type: array
                pagination:
                    properties:
                        count:
                            description: Actual number of items returned in this page
                            format: int64
                            type: integer
                        hasMore:
                            description: Indicates if there are more items to fetch
                            type: boolean
                        limit:
                            description: Maximum number of items requested for this page
                            format: int64
                            type: integer
                        nextCursor:
                            description: Cursor for the next page. Pass this value in the 'cursor' parameter to get the next page.
                            type: string
                        total:
                            description: Total number of items matching the query
                            format: int64
                            type: integer
                    required:
                        - total
                        - limit
                        - count
                        - hasMore
                    type: object
            required:
                - data
                - pagination
            type: object
        ListDeleteMonitoringTraceProposalResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/DeleteMonitoringTraceProposal'
                    type: array
                pagination:
                    properties:
                        count:
                            description: Actual number of items returned in this page
                            format: int64
                            type: integer
                        hasMore:
                            description: Indicates if there are more items to fetch
                            type: boolean
                        limit:
                            description: Maximum number of items requested for this page
                            format: int64
                            type: integer
                        nextCursor:
                            description: Cursor for the next page. Pass this value in the 'cursor' parameter to get the next page.
                            type: string
                        total:
                            description: Total number of items matching the query
                            format: int64
                            type: integer
                    required:
                        - total
                        - limit
                        - count
                        - hasMore
                    type: object
            required:
                - data
                - pagination
            type: object
        ListDeletePositionAssignmentProposalResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/DeletePositionAssignmentProposal'
                    type: array
                pagination:
                    properties:
                        count:
                            description: Actual number of items returned in this page
                            format: int64
                            type: integer
                        hasMore:
                            description: Indicates if there are more items to fetch
                            type: boolean
                        limit:
                            description: Maximum number of items requested for this page
                            format: int64
                            type: integer
                        nextCursor:
                            description: Cursor for the next page. Pass this value in the 'cursor' parameter to get the next page.
                            type: string
                        total:
                            description: Total number of items matching the query
                            format: int64
                            type: integer
                    required:
                        - total
                        - limit
                        - count
                        - hasMore
                    type: object
            required:
                - data
                - pagination
            type: object
        ListDeleteRatingScaleLevelDescriptorProposalResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/DeleteRatingScaleLevelDescriptorProposal'
                    type: array
                pagination:
                    properties:
                        count:
                            description: Actual number of items returned in this page
                            format: int64
                            type: integer
                        hasMore:
                            description: Indicates if there are more items to fetch
                            type: boolean
                        limit:
                            description: Maximum number of items requested for this page
                            format: int64
                            type: integer
                        nextCursor:
                            description: Cursor for the next page. Pass this value in the 'cursor' parameter to get the next page.
                            type: string
                        total:
                            description: Total number of items matching the query
                            format: int64
                            type: integer
                    required:
                        - total
                        - limit
                        - count
                        - hasMore
                    type: object
            required:
                - data
                - pagination
            type: object
        ListDeleteRatingScaleLevelProposalResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/DeleteRatingScaleLevelProposal'
                    type: array
                pagination:
                    properties:
                        count:
                            description: Actual number of items returned in this page
                            format: int64
                            type: integer
                        hasMore:
                            description: Indicates if there are more items to fetch
                            type: boolean
                        limit:
                            description: Maximum number of items requested for this page
                            format: int64
                            type: integer
                        nextCursor:
                            description: Cursor for the next page. Pass this value in the 'cursor' parameter to get the next page.
                            type: string
                        total:
                            description: Total number of items matching the query
                            format: int64
                            type: integer
                    required:
                        - total
                        - limit
                        - count
                        - hasMore
                    type: object
            required:
                - data
                - pagination
            type: object
        ListDeleteRatingScaleProposalResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/DeleteRatingScaleProposal'
                    type: array
                pagination:
                    properties:
                        count:
                            description: Actual number of items returned in this page
                            format: int64
                            type: integer
                        hasMore:
                            description: Indicates if there are more items to fetch
                            type: boolean
                        limit:
                            description: Maximum number of items requested for this page
                            format: int64
                            type: integer
                        nextCursor:
                            description: Cursor for the next page. Pass this value in the 'cursor' parameter to get the next page.
                            type: string
                        total:
                            description: Total number of items matching the query
                            format: int64
                            type: integer
                    required:
                        - total
                        - limit
                        - count
                        - hasMore
                    type: object
            required:
                - data
                - pagination
            type: object
        ListDeleteSkillDefinitionProposalResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/DeleteSkillDefinitionProposal'
                    type: array
                pagination:
                    properties:
                        count:
                            description: Actual number of items returned in this page
                            format: int64
                            type: integer
                        hasMore:
                            description: Indicates if there are more items to fetch
                            type: boolean
                        limit:
                            description: Maximum number of items requested for this page
                            format: int64
                            type: integer
                        nextCursor:
                            description: Cursor for the next page. Pass this value in the 'cursor' parameter to get the next page.
                            type: string
                        total:
                            description: Total number of items matching the query
                            format: int64
                            type: integer
                    required:
                        - total
                        - limit
                        - count
                        - hasMore
                    type: object
            required:
                - data
                - pagination
            type: object
        ListDeleteSkillDefinitionTypeProposalResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/DeleteSkillDefinitionTypeProposal'
                    type: array
                pagination:
                    properties:
                        count:
                            description: Actual number of items returned in this page
                            format: int64
                            type: integer
                        hasMore:
                            description: Indicates if there are more items to fetch
                            type: boolean
                        limit:
                            description: Maximum number of items requested for this page
                            format: int64
                            type: integer
                        nextCursor:
                            description: Cursor for the next page. Pass this value in the 'cursor' parameter to get the next page.
                            type: string
                        total:
                            description: Total number of items matching the query
                            format: int64
                            type: integer
                    required:
                        - total
                        - limit
                        - count
                        - hasMore
                    type: object
            required:
                - data
                - pagination
            type: object
        ListDeleteSkillPlanningProposalResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/DeleteSkillPlanningProposal'
                    type: array
                pagination:
                    properties:
                        count:
                            description: Actual number of items returned in this page
                            format: int64
                            type: integer
                        hasMore:
                            description: Indicates if there are more items to fetch
                            type: boolean
                        limit:
                            description: Maximum number of items requested for this page
                            format: int64
                            type: integer
                        nextCursor:
                            description: Cursor for the next page. Pass this value in the 'cursor' parameter to get the next page.
                            type: string
                        total:
                            description: Total number of items matching the query
                            format: int64
                            type: integer
                    required:
                        - total
                        - limit
                        - count
                        - hasMore
                    type: object
            required:
                - data
                - pagination
            type: object
        ListDeleteSkillResultProposalResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/DeleteSkillResultProposal'
                    type: array
                pagination:
                    properties:
                        count:
                            description: Actual number of items returned in this page
                            format: int64
                            type: integer
                        hasMore:
                            description: Indicates if there are more items to fetch
                            type: boolean
                        limit:
                            description: Maximum number of items requested for this page
                            format: int64
                            type: integer
                        nextCursor:
                            description: Cursor for the next page. Pass this value in the 'cursor' parameter to get the next page.
                            type: string
                        total:
                            description: Total number of items matching the query
                            format: int64
                            type: integer
                    required:
                        - total
                        - limit
                        - count
                        - hasMore
                    type: object
            required:
                - data
                - pagination
            type: object
        ListDeleteTypeOfProofProposalResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/DeleteTypeOfProofProposal'
                    type: array
                pagination:
                    properties:
                        count:
                            description: Actual number of items returned in this page
                            format: int64
                            type: integer
                        hasMore:
                            description: Indicates if there are more items to fetch
                            type: boolean
                        limit:
                            description: Maximum number of items requested for this page
                            format: int64
                            type: integer
                        nextCursor:
                            description: Cursor for the next page. Pass this value in the 'cursor' parameter to get the next page.
                            type: string
                        total:
                            description: Total number of items matching the query
                            format: int64
                            type: integer
                    required:
                        - total
                        - limit
                        - count
                        - hasMore
                    type: object
            required:
                - data
                - pagination
            type: object
        ListEmployeeResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/Employee'
                    type: array
                pagination:
                    properties:
                        count:
                            description: Actual number of items returned in this page
                            format: int64
                            type: integer
                        hasMore:
                            description: Indicates if there are more items to fetch
                            type: boolean
                        limit:
                            description: Maximum number of items requested for this page
                            format: int64
                            type: integer
                        nextCursor:
                            description: Cursor for the next page. Pass this value in the 'cursor' parameter to get the next page.
                            type: string
                        total:
                            description: Total number of items matching the query
                            format: int64
                            type: integer
                    required:
                        - total
                        - limit
                        - count
                        - hasMore
                    type: object
            required:
                - data
                - pagination
            type: object
        ListEmployeeUnavailabilityResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/EmployeeUnavailability'
                    type: array
                pagination:
                    properties:
                        count:
                            description: Actual number of items returned in this page
                            format: int64
                            type: integer
                        hasMore:
                            description: Indicates if there are more items to fetch
                            type: boolean
                        limit:
                            description: Maximum number of items requested for this page
                            format: int64
                            type: integer
                        nextCursor:
                            description: Cursor for the next page. Pass this value in the 'cursor' parameter to get the next page.
                            type: string
                        total:
                            description: Total number of items matching the query
                            format: int64
                            type: integer
                    required:
                        - total
                        - limit
                        - count
                        - hasMore
                    type: object
            required:
                - data
                - pagination
            type: object
        ListEmploymentContractResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/EmploymentContract'
                    type: array
                pagination:
                    properties:
                        count:
                            description: Actual number of items returned in this page
                            format: int64
                            type: integer
                        hasMore:
                            description: Indicates if there are more items to fetch
                            type: boolean
                        limit:
                            description: Maximum number of items requested for this page
                            format: int64
                            type: integer
                        nextCursor:
                            description: Cursor for the next page. Pass this value in the 'cursor' parameter to get the next page.
                            type: string
                        total:
                            description: Total number of items matching the query
                            format: int64
                            type: integer
                    required:
                        - total
                        - limit
                        - count
                        - hasMore
                    type: object
            required:
                - data
                - pagination
            type: object
        ListEmploymentContractTypeResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/EmploymentContractType'
                    type: array
                pagination:
                    properties:
                        count:
                            description: Actual number of items returned in this page
                            format: int64
                            type: integer
                        hasMore:
                            description: Indicates if there are more items to fetch
                            type: boolean
                        limit:
                            description: Maximum number of items requested for this page
                            format: int64
                            type: integer
                        nextCursor:
                            description: Cursor for the next page. Pass this value in the 'cursor' parameter to get the next page.
                            type: string
                        total:
                            description: Total number of items matching the query
                            format: int64
                            type: integer
                    required:
                        - total
                        - limit
                        - count
                        - hasMore
                    type: object
            required:
                - data
                - pagination
            type: object
        ListEmploymentRelationResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/EmploymentRelation'
                    type: array
                pagination:
                    properties:
                        count:
                            description: Actual number of items returned in this page
                            format: int64
                            type: integer
                        hasMore:
                            description: Indicates if there are more items to fetch
                            type: boolean
                        limit:
                            description: Maximum number of items requested for this page
                            format: int64
                            type: integer
                        nextCursor:
                            description: Cursor for the next page. Pass this value in the 'cursor' parameter to get the next page.
                            type: string
                        total:
                            description: Total number of items matching the query
                            format: int64
                            type: integer
                    required:
                        - total
                        - limit
                        - count
                        - hasMore
                    type: object
            required:
                - data
                - pagination
            type: object
        ListEmploymentRelationTypeResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/EmploymentRelationType'
                    type: array
                pagination:
                    properties:
                        count:
                            description: Actual number of items returned in this page
                            format: int64
                            type: integer
                        hasMore:
                            description: Indicates if there are more items to fetch
                            type: boolean
                        limit:
                            description: Maximum number of items requested for this page
                            format: int64
                            type: integer
                        nextCursor:
                            description: Cursor for the next page. Pass this value in the 'cursor' parameter to get the next page.
                            type: string
                        total:
                            description: Total number of items matching the query
                            format: int64
                            type: integer
                    required:
                        - total
                        - limit
                        - count
                        - hasMore
                    type: object
            required:
                - data
                - pagination
            type: object
        ListEntityDefinitionResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/EntityDefinition'
                    type: array
                pagination:
                    properties:
                        count:
                            description: Actual number of items returned in this page
                            format: int64
                            type: integer
                        hasMore:
                            description: Indicates if there are more items to fetch
                            type: boolean
                        limit:
                            description: Maximum number of items requested for this page
                            format: int64
                            type: integer
                        nextCursor:
                            description: Cursor for the next page. Pass this value in the 'cursor' parameter to get the next page.
                            type: string
                        total:
                            description: Total number of items matching the query
                            format: int64
                            type: integer
                    required:
                        - total
                        - limit
                        - count
                        - hasMore
                    type: object
            required:
                - data
                - pagination
            type: object
        ListGroupingResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/Grouping'
                    type: array
                pagination:
                    properties:
                        count:
                            description: Actual number of items returned in this page
                            format: int64
                            type: integer
                        hasMore:
                            description: Indicates if there are more items to fetch
                            type: boolean
                        limit:
                            description: Maximum number of items requested for this page
                            format: int64
                            type: integer
                        nextCursor:
                            description: Cursor for the next page. Pass this value in the 'cursor' parameter to get the next page.
                            type: string
                        total:
                            description: Total number of items matching the query
                            format: int64
                            type: integer
                    required:
                        - total
                        - limit
                        - count
                        - hasMore
                    type: object
            required:
                - data
                - pagination
            type: object
        ListGroupingTypeResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/GroupingType'
                    type: array
                pagination:
                    properties:
                        count:
                            description: Actual number of items returned in this page
                            format: int64
                            type: integer
                        hasMore:
                            description: Indicates if there are more items to fetch
                            type: boolean
                        limit:
                            description: Maximum number of items requested for this page
                            format: int64
                            type: integer
                        nextCursor:
                            description: Cursor for the next page. Pass this value in the 'cursor' parameter to get the next page.
                            type: string
                        total:
                            description: Total number of items matching the query
                            format: int64
                            type: integer
                    required:
                        - total
                        - limit
                        - count
                        - hasMore
                    type: object
            required:
                - data
                - pagination
            type: object
        ListMonitoringTraceResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/MonitoringTrace'
                    type: array
                pagination:
                    properties:
                        count:
                            description: Actual number of items returned in this page
                            format: int64
                            type: integer
                        hasMore:
                            description: Indicates if there are more items to fetch
                            type: boolean
                        limit:
                            description: Maximum number of items requested for this page
                            format: int64
                            type: integer
                        nextCursor:
                            description: Cursor for the next page. Pass this value in the 'cursor' parameter to get the next page.
                            type: string
                        total:
                            description: Total number of items matching the query
                            format: int64
                            type: integer
                    required:
                        - total
                        - limit
                        - count
                        - hasMore
                    type: object
            required:
                - data
                - pagination
            type: object
        ListPositionAssignmentResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/PositionAssignment'
                    type: array
                pagination:
                    properties:
                        count:
                            description: Actual number of items returned in this page
                            format: int64
                            type: integer
                        hasMore:
                            description: Indicates if there are more items to fetch
                            type: boolean
                        limit:
                            description: Maximum number of items requested for this page
                            format: int64
                            type: integer
                        nextCursor:
                            description: Cursor for the next page. Pass this value in the 'cursor' parameter to get the next page.
                            type: string
                        total:
                            description: Total number of items matching the query
                            format: int64
                            type: integer
                    required:
                        - total
                        - limit
                        - count
                        - hasMore
                    type: object
            required:
                - data
                - pagination
            type: object
        ListRatingScaleLevelDescriptorResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/RatingScaleLevelDescriptor'
                    type: array
                pagination:
                    properties:
                        count:
                            description: Actual number of items returned in this page
                            format: int64
                            type: integer
                        hasMore:
                            description: Indicates if there are more items to fetch
                            type: boolean
                        limit:
                            description: Maximum number of items requested for this page
                            format: int64
                            type: integer
                        nextCursor:
                            description: Cursor for the next page. Pass this value in the 'cursor' parameter to get the next page.
                            type: string
                        total:
                            description: Total number of items matching the query
                            format: int64
                            type: integer
                    required:
                        - total
                        - limit
                        - count
                        - hasMore
                    type: object
            required:
                - data
                - pagination
            type: object
        ListRatingScaleLevelResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/RatingScaleLevel'
                    type: array
                pagination:
                    properties:
                        count:
                            description: Actual number of items returned in this page
                            format: int64
                            type: integer
                        hasMore:
                            description: Indicates if there are more items to fetch
                            type: boolean
                        limit:
                            description: Maximum number of items requested for this page
                            format: int64
                            type: integer
                        nextCursor:
                            description: Cursor for the next page. Pass this value in the 'cursor' parameter to get the next page.
                            type: string
                        total:
                            description: Total number of items matching the query
                            format: int64
                            type: integer
                    required:
                        - total
                        - limit
                        - count
                        - hasMore
                    type: object
            required:
                - data
                - pagination
            type: object
        ListRatingScaleResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/RatingScale'
                    type: array
                pagination:
                    properties:
                        count:
                            description: Actual number of items returned in this page
                            format: int64
                            type: integer
                        hasMore:
                            description: Indicates if there are more items to fetch
                            type: boolean
                        limit:
                            description: Maximum number of items requested for this page
                            format: int64
                            type: integer
                        nextCursor:
                            description: Cursor for the next page. Pass this value in the 'cursor' parameter to get the next page.
                            type: string
                        total:
                            description: Total number of items matching the query
                            format: int64
                            type: integer
                    required:
                        - total
                        - limit
                        - count
                        - hasMore
                    type: object
            required:
                - data
                - pagination
            type: object
        ListRepositoryResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/Repository'
                    type: array
                pagination:
                    properties:
                        count:
                            description: Actual number of items returned in this page
                            format: int64
                            type: integer
                        hasMore:
                            description: Indicates if there are more items to fetch
                            type: boolean
                        limit:
                            description: Maximum number of items requested for this page
                            format: int64
                            type: integer
                        nextCursor:
                            description: Cursor for the next page. Pass this value in the 'cursor' parameter to get the next page.
                            type: string
                        total:
                            description: Total number of items matching the query
                            format: int64
                            type: integer
                    required:
                        - total
                        - limit
                        - count
                        - hasMore
                    type: object
            required:
                - data
                - pagination
            type: object
        ListSkillDefinitionResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/SkillDefinition'
                    type: array
                pagination:
                    properties:
                        count:
                            description: Actual number of items returned in this page
                            format: int64
                            type: integer
                        hasMore:
                            description: Indicates if there are more items to fetch
                            type: boolean
                        limit:
                            description: Maximum number of items requested for this page
                            format: int64
                            type: integer
                        nextCursor:
                            description: Cursor for the next page. Pass this value in the 'cursor' parameter to get the next page.
                            type: string
                        total:
                            description: Total number of items matching the query
                            format: int64
                            type: integer
                    required:
                        - total
                        - limit
                        - count
                        - hasMore
                    type: object
            required:
                - data
                - pagination
            type: object
        ListSkillDefinitionTypeResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/SkillDefinitionType'
                    type: array
                pagination:
                    properties:
                        count:
                            description: Actual number of items returned in this page
                            format: int64
                            type: integer
                        hasMore:
                            description: Indicates if there are more items to fetch
                            type: boolean
                        limit:
                            description: Maximum number of items requested for this page
                            format: int64
                            type: integer
                        nextCursor:
                            description: Cursor for the next page. Pass this value in the 'cursor' parameter to get the next page.
                            type: string
                        total:
                            description: Total number of items matching the query
                            format: int64
                            type: integer
                    required:
                        - total
                        - limit
                        - count
                        - hasMore
                    type: object
            required:
                - data
                - pagination
            type: object
        ListSkillPlanningResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/SkillPlanning'
                    type: array
                pagination:
                    properties:
                        count:
                            description: Actual number of items returned in this page
                            format: int64
                            type: integer
                        hasMore:
                            description: Indicates if there are more items to fetch
                            type: boolean
                        limit:
                            description: Maximum number of items requested for this page
                            format: int64
                            type: integer
                        nextCursor:
                            description: Cursor for the next page. Pass this value in the 'cursor' parameter to get the next page.
                            type: string
                        total:
                            description: Total number of items matching the query
                            format: int64
                            type: integer
                    required:
                        - total
                        - limit
                        - count
                        - hasMore
                    type: object
            required:
                - data
                - pagination
            type: object
        ListSkillResultResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/SkillResult'
                    type: array
                pagination:
                    properties:
                        count:
                            description: Actual number of items returned in this page
                            format: int64
                            type: integer
                        hasMore:
                            description: Indicates if there are more items to fetch
                            type: boolean
                        limit:
                            description: Maximum number of items requested for this page
                            format: int64
                            type: integer
                        nextCursor:
                            description: Cursor for the next page. Pass this value in the 'cursor' parameter to get the next page.
                            type: string
                        total:
                            description: Total number of items matching the query
                            format: int64
                            type: integer
                    required:
                        - total
                        - limit
                        - count
                        - hasMore
                    type: object
            required:
                - data
                - pagination
            type: object
        ListTypeOfProofResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/TypeOfProof'
                    type: array
                pagination:
                    properties:
                        count:
                            description: Actual number of items returned in this page
                            format: int64
                            type: integer
                        hasMore:
                            description: Indicates if there are more items to fetch
                            type: boolean
                        limit:
                            description: Maximum number of items requested for this page
                            format: int64
                            type: integer
                        nextCursor:
                            description: Cursor for the next page. Pass this value in the 'cursor' parameter to get the next page.
                            type: string
                        total:
                            description: Total number of items matching the query
                            format: int64
                            type: integer
                    required:
                        - total
                        - limit
                        - count
                        - hasMore
                    type: object
            required:
                - data
                - pagination
            type: object
        ListUpdateCustomFieldDefinitionProposalResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/UpdateCustomFieldDefinitionProposal'
                    type: array
                pagination:
                    properties:
                        count:
                            description: Actual number of items returned in this page
                            format: int64
                            type: integer
                        hasMore:
                            description: Indicates if there are more items to fetch
                            type: boolean
                        limit:
                            description: Maximum number of items requested for this page
                            format: int64
                            type: integer
                        nextCursor:
                            description: Cursor for the next page. Pass this value in the 'cursor' parameter to get the next page.
                            type: string
                        total:
                            description: Total number of items matching the query
                            format: int64
                            type: integer
                    required:
                        - total
                        - limit
                        - count
                        - hasMore
                    type: object
            required:
                - data
                - pagination
            type: object
        ListUpdateEmployeeProposalResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/UpdateEmployeeProposal'
                    type: array
                pagination:
                    properties:
                        count:
                            description: Actual number of items returned in this page
                            format: int64
                            type: integer
                        hasMore:
                            description: Indicates if there are more items to fetch
                            type: boolean
                        limit:
                            description: Maximum number of items requested for this page
                            format: int64
                            type: integer
                        nextCursor:
                            description: Cursor for the next page. Pass this value in the 'cursor' parameter to get the next page.
                            type: string
                        total:
                            description: Total number of items matching the query
                            format: int64
                            type: integer
                    required:
                        - total
                        - limit
                        - count
                        - hasMore
                    type: object
            required:
                - data
                - pagination
            type: object
        ListUpdateEmployeeUnavailabilityProposalResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/UpdateEmployeeUnavailabilityProposal'
                    type: array
                pagination:
                    properties:
                        count:
                            description: Actual number of items returned in this page
                            format: int64
                            type: integer
                        hasMore:
                            description: Indicates if there are more items to fetch
                            type: boolean
                        limit:
                            description: Maximum number of items requested for this page
                            format: int64
                            type: integer
                        nextCursor:
                            description: Cursor for the next page. Pass this value in the 'cursor' parameter to get the next page.
                            type: string
                        total:
                            description: Total number of items matching the query
                            format: int64
                            type: integer
                    required:
                        - total
                        - limit
                        - count
                        - hasMore
                    type: object
            required:
                - data
                - pagination
            type: object
        ListUpdateEmploymentContractProposalResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/UpdateEmploymentContractProposal'
                    type: array
                pagination:
                    properties:
                        count:
                            description: Actual number of items returned in this page
                            format: int64
                            type: integer
                        hasMore:
                            description: Indicates if there are more items to fetch
                            type: boolean
                        limit:
                            description: Maximum number of items requested for this page
                            format: int64
                            type: integer
                        nextCursor:
                            description: Cursor for the next page. Pass this value in the 'cursor' parameter to get the next page.
                            type: string
                        total:
                            description: Total number of items matching the query
                            format: int64
                            type: integer
                    required:
                        - total
                        - limit
                        - count
                        - hasMore
                    type: object
            required:
                - data
                - pagination
            type: object
        ListUpdateEmploymentContractTypeProposalResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/UpdateEmploymentContractTypeProposal'
                    type: array
                pagination:
                    properties:
                        count:
                            description: Actual number of items returned in this page
                            format: int64
                            type: integer
                        hasMore:
                            description: Indicates if there are more items to fetch
                            type: boolean
                        limit:
                            description: Maximum number of items requested for this page
                            format: int64
                            type: integer
                        nextCursor:
                            description: Cursor for the next page. Pass this value in the 'cursor' parameter to get the next page.
                            type: string
                        total:
                            description: Total number of items matching the query
                            format: int64
                            type: integer
                    required:
                        - total
                        - limit
                        - count
                        - hasMore
                    type: object
            required:
                - data
                - pagination
            type: object
        ListUpdateEmploymentRelationProposalResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/UpdateEmploymentRelationProposal'
                    type: array
                pagination:
                    properties:
                        count:
                            description: Actual number of items returned in this page
                            format: int64
                            type: integer
                        hasMore:
                            description: Indicates if there are more items to fetch
                            type: boolean
                        limit:
                            description: Maximum number of items requested for this page
                            format: int64
                            type: integer
                        nextCursor:
                            description: Cursor for the next page. Pass this value in the 'cursor' parameter to get the next page.
                            type: string
                        total:
                            description: Total number of items matching the query
                            format: int64
                            type: integer
                    required:
                        - total
                        - limit
                        - count
                        - hasMore
                    type: object
            required:
                - data
                - pagination
            type: object
        ListUpdateEmploymentRelationTypeProposalResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/UpdateEmploymentRelationTypeProposal'
                    type: array
                pagination:
                    properties:
                        count:
                            description: Actual number of items returned in this page
                            format: int64
                            type: integer
                        hasMore:
                            description: Indicates if there are more items to fetch
                            type: boolean
                        limit:
                            description: Maximum number of items requested for this page
                            format: int64
                            type: integer
                        nextCursor:
                            description: Cursor for the next page. Pass this value in the 'cursor' parameter to get the next page.
                            type: string
                        total:
                            description: Total number of items matching the query
                            format: int64
                            type: integer
                    required:
                        - total
                        - limit
                        - count
                        - hasMore
                    type: object
            required:
                - data
                - pagination
            type: object
        ListUpdateGroupingProposalResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/UpdateGroupingProposal'
                    type: array
                pagination:
                    properties:
                        count:
                            description: Actual number of items returned in this page
                            format: int64
                            type: integer
                        hasMore:
                            description: Indicates if there are more items to fetch
                            type: boolean
                        limit:
                            description: Maximum number of items requested for this page
                            format: int64
                            type: integer
                        nextCursor:
                            description: Cursor for the next page. Pass this value in the 'cursor' parameter to get the next page.
                            type: string
                        total:
                            description: Total number of items matching the query
                            format: int64
                            type: integer
                    required:
                        - total
                        - limit
                        - count
                        - hasMore
                    type: object
            required:
                - data
                - pagination
            type: object
        ListUpdateGroupingTypeProposalResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/UpdateGroupingTypeProposal'
                    type: array
                pagination:
                    properties:
                        count:
                            description: Actual number of items returned in this page
                            format: int64
                            type: integer
                        hasMore:
                            description: Indicates if there are more items to fetch
                            type: boolean
                        limit:
                            description: Maximum number of items requested for this page
                            format: int64
                            type: integer
                        nextCursor:
                            description: Cursor for the next page. Pass this value in the 'cursor' parameter to get the next page.
                            type: string
                        total:
                            description: Total number of items matching the query
                            format: int64
                            type: integer
                    required:
                        - total
                        - limit
                        - count
                        - hasMore
                    type: object
            required:
                - data
                - pagination
            type: object
        ListUpdateMonitoringTraceProposalResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/UpdateMonitoringTraceProposal'
                    type: array
                pagination:
                    properties:
                        count:
                            description: Actual number of items returned in this page
                            format: int64
                            type: integer
                        hasMore:
                            description: Indicates if there are more items to fetch
                            type: boolean
                        limit:
                            description: Maximum number of items requested for this page
                            format: int64
                            type: integer
                        nextCursor:
                            description: Cursor for the next page. Pass this value in the 'cursor' parameter to get the next page.
                            type: string
                        total:
                            description: Total number of items matching the query
                            format: int64
                            type: integer
                    required:
                        - total
                        - limit
                        - count
                        - hasMore
                    type: object
            required:
                - data
                - pagination
            type: object
        ListUpdatePositionAssignmentProposalResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/UpdatePositionAssignmentProposal'
                    type: array
                pagination:
                    properties:
                        count:
                            description: Actual number of items returned in this page
                            format: int64
                            type: integer
                        hasMore:
                            description: Indicates if there are more items to fetch
                            type: boolean
                        limit:
                            description: Maximum number of items requested for this page
                            format: int64
                            type: integer
                        nextCursor:
                            description: Cursor for the next page. Pass this value in the 'cursor' parameter to get the next page.
                            type: string
                        total:
                            description: Total number of items matching the query
                            format: int64
                            type: integer
                    required:
                        - total
                        - limit
                        - count
                        - hasMore
                    type: object
            required:
                - data
                - pagination
            type: object
        ListUpdateRatingScaleLevelDescriptorProposalResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/UpdateRatingScaleLevelDescriptorProposal'
                    type: array
                pagination:
                    properties:
                        count:
                            description: Actual number of items returned in this page
                            format: int64
                            type: integer
                        hasMore:
                            description: Indicates if there are more items to fetch
                            type: boolean
                        limit:
                            description: Maximum number of items requested for this page
                            format: int64
                            type: integer
                        nextCursor:
                            description: Cursor for the next page. Pass this value in the 'cursor' parameter to get the next page.
                            type: string
                        total:
                            description: Total number of items matching the query
                            format: int64
                            type: integer
                    required:
                        - total
                        - limit
                        - count
                        - hasMore
                    type: object
            required:
                - data
                - pagination
            type: object
        ListUpdateRatingScaleLevelProposalResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/UpdateRatingScaleLevelProposal'
                    type: array
                pagination:
                    properties:
                        count:
                            description: Actual number of items returned in this page
                            format: int64
                            type: integer
                        hasMore:
                            description: Indicates if there are more items to fetch
                            type: boolean
                        limit:
                            description: Maximum number of items requested for this page
                            format: int64
                            type: integer
                        nextCursor:
                            description: Cursor for the next page. Pass this value in the 'cursor' parameter to get the next page.
                            type: string
                        total:
                            description: Total number of items matching the query
                            format: int64
                            type: integer
                    required:
                        - total
                        - limit
                        - count
                        - hasMore
                    type: object
            required:
                - data
                - pagination
            type: object
        ListUpdateRatingScaleProposalResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/UpdateRatingScaleProposal'
                    type: array
                pagination:
                    properties:
                        count:
                            description: Actual number of items returned in this page
                            format: int64
                            type: integer
                        hasMore:
                            description: Indicates if there are more items to fetch
                            type: boolean
                        limit:
                            description: Maximum number of items requested for this page
                            format: int64
                            type: integer
                        nextCursor:
                            description: Cursor for the next page. Pass this value in the 'cursor' parameter to get the next page.
                            type: string
                        total:
                            description: Total number of items matching the query
                            format: int64
                            type: integer
                    required:
                        - total
                        - limit
                        - count
                        - hasMore
                    type: object
            required:
                - data
                - pagination
            type: object
        ListUpdateSkillDefinitionProposalResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/UpdateSkillDefinitionProposal'
                    type: array
                pagination:
                    properties:
                        count:
                            description: Actual number of items returned in this page
                            format: int64
                            type: integer
                        hasMore:
                            description: Indicates if there are more items to fetch
                            type: boolean
                        limit:
                            description: Maximum number of items requested for this page
                            format: int64
                            type: integer
                        nextCursor:
                            description: Cursor for the next page. Pass this value in the 'cursor' parameter to get the next page.
                            type: string
                        total:
                            description: Total number of items matching the query
                            format: int64
                            type: integer
                    required:
                        - total
                        - limit
                        - count
                        - hasMore
                    type: object
            required:
                - data
                - pagination
            type: object
        ListUpdateSkillDefinitionTypeProposalResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/UpdateSkillDefinitionTypeProposal'
                    type: array
                pagination:
                    properties:
                        count:
                            description: Actual number of items returned in this page
                            format: int64
                            type: integer
                        hasMore:
                            description: Indicates if there are more items to fetch
                            type: boolean
                        limit:
                            description: Maximum number of items requested for this page
                            format: int64
                            type: integer
                        nextCursor:
                            description: Cursor for the next page. Pass this value in the 'cursor' parameter to get the next page.
                            type: string
                        total:
                            description: Total number of items matching the query
                            format: int64
                            type: integer
                    required:
                        - total
                        - limit
                        - count
                        - hasMore
                    type: object
            required:
                - data
                - pagination
            type: object
        ListUpdateSkillPlanningProposalResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/UpdateSkillPlanningProposal'
                    type: array
                pagination:
                    properties:
                        count:
                            description: Actual number of items returned in this page
                            format: int64
                            type: integer
                        hasMore:
                            description: Indicates if there are more items to fetch
                            type: boolean
                        limit:
                            description: Maximum number of items requested for this page
                            format: int64
                            type: integer
                        nextCursor:
                            description: Cursor for the next page. Pass this value in the 'cursor' parameter to get the next page.
                            type: string
                        total:
                            description: Total number of items matching the query
                            format: int64
                            type: integer
                    required:
                        - total
                        - limit
                        - count
                        - hasMore
                    type: object
            required:
                - data
                - pagination
            type: object
        ListUpdateSkillResultProposalResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/UpdateSkillResultProposal'
                    type: array
                pagination:
                    properties:
                        count:
                            description: Actual number of items returned in this page
                            format: int64
                            type: integer
                        hasMore:
                            description: Indicates if there are more items to fetch
                            type: boolean
                        limit:
                            description: Maximum number of items requested for this page
                            format: int64
                            type: integer
                        nextCursor:
                            description: Cursor for the next page. Pass this value in the 'cursor' parameter to get the next page.
                            type: string
                        total:
                            description: Total number of items matching the query
                            format: int64
                            type: integer
                    required:
                        - total
                        - limit
                        - count
                        - hasMore
                    type: object
            required:
                - data
                - pagination
            type: object
        ListUpdateTypeOfProofProposalResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/UpdateTypeOfProofProposal'
                    type: array
                pagination:
                    properties:
                        count:
                            description: Actual number of items returned in this page
                            format: int64
                            type: integer
                        hasMore:
                            description: Indicates if there are more items to fetch
                            type: boolean
                        limit:
                            description: Maximum number of items requested for this page
                            format: int64
                            type: integer
                        nextCursor:
                            description: Cursor for the next page. Pass this value in the 'cursor' parameter to get the next page.
                            type: string
                        total:
                            description: Total number of items matching the query
                            format: int64
                            type: integer
                    required:
                        - total
                        - limit
                        - count
                        - hasMore
                    type: object
            required:
                - data
                - pagination
            type: object
        MonitoringTrace:
            properties:
                createdAt:
                    format: date-time
                    type: string
                executedAt:
                    format: date-time
                    type: string
                id:
                    format: uuid
                    type: string
                lastModifiedAt:
                    format: date-time
                    type: string
                remark:
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestedAt:
                    format: date-time
                    type: string
            required:
                - id
                - createdAt
                - lastModifiedAt
                - repositoryID
            type: object
        PaginationInfo:
            properties:
                hasMore:
                    description: Whether there are more pages
                    type: boolean
                limit:
                    description: Maximum number of items returned
                    type: integer
                nextCursor:
                    description: Cursor for the next page (if available)
                    type: string
                total:
                    description: Total number of items available
                    type: integer
            required:
                - total
                - limit
            type: object
        PositionAssignment:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                createdAt:
                    format: date-time
                    type: string
                employeeID:
                    format: uuid
                    type: string
                id:
                    format: uuid
                    type: string
                lastModifiedAt:
                    format: date-time
                    type: string
                remark:
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                tagIDs:
                    items:
                        format: uuid
                        type: string
                    type: array
            required:
                - id
                - createdAt
                - lastModifiedAt
                - repositoryID
                - employeeID
                - activePeriod
                - tagIDs
            type: object
        RatingScale:
            properties:
                code:
                    type: string
                createdAt:
                    format: date-time
                    type: string
                customValues:
                    additionalProperties:
                        type: string
                    description: Custom field values - only declared custom fields for this entity type are allowed
                    example:
                        department: Engineering
                        employeeId: EMP-12345
                        location: Amsterdam
                    type: object
                id:
                    format: uuid
                    type: string
                lastModifiedAt:
                    format: date-time
                    type: string
                name:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                repositoryID:
                    format: uuid
                    type: string
            required:
                - id
                - createdAt
                - lastModifiedAt
                - repositoryID
                - code
                - name
            type: object
        RatingScaleLevel:
            properties:
                code:
                    type: string
                createdAt:
                    format: date-time
                    type: string
                customValues:
                    additionalProperties:
                        type: string
                    description: Custom field values - only declared custom fields for this entity type are allowed
                    example:
                        department: Engineering
                        employeeId: EMP-12345
                        location: Amsterdam
                    type: object
                description:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                id:
                    format: uuid
                    type: string
                lastModifiedAt:
                    format: date-time
                    type: string
                name:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                ratingScaleID:
                    format: uuid
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                scoreOrder:
                    format: int32
                    type: integer
            required:
                - id
                - createdAt
                - lastModifiedAt
                - repositoryID
                - ratingScaleID
                - scoreOrder
                - code
                - name
            type: object
        RatingScaleLevelDescriptor:
            properties:
                createdAt:
                    format: date-time
                    type: string
                description:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                id:
                    format: uuid
                    type: string
                lastModifiedAt:
                    format: date-time
                    type: string
                ratingScaleLevelID:
                    format: uuid
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                skillDefinitionID:
                    format: uuid
                    type: string
            required:
                - id
                - createdAt
                - lastModifiedAt
                - repositoryID
                - ratingScaleLevelID
                - skillDefinitionID
                - description
            type: object
        Repository:
            properties:
                code:
                    type: string
                id:
                    format: uuid
                    type: string
            required:
                - id
                - code
            type: object
        SkillDefinition:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                code:
                    type: string
                createdAt:
                    format: date-time
                    type: string
                customValues:
                    additionalProperties:
                        type: string
                    description: Custom field values - only declared custom fields for this entity type are allowed
                    example:
                        department: Engineering
                        employeeId: EMP-12345
                        location: Amsterdam
                    type: object
                description:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                id:
                    format: uuid
                    type: string
                lastModifiedAt:
                    format: date-time
                    type: string
                name:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                ratingScaleID:
                    format: uuid
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                typeID:
                    format: uuid
                    type: string
            required:
                - id
                - createdAt
                - lastModifiedAt
                - repositoryID
                - name
                - ratingScaleID
                - activePeriod
            type: object
        SkillDefinitionType:
            properties:
                code:
                    type: string
                createdAt:
                    format: date-time
                    type: string
                customValues:
                    additionalProperties:
                        type: string
                    description: Custom field values - only declared custom fields for this entity type are allowed
                    example:
                        department: Engineering
                        employeeId: EMP-12345
                        location: Amsterdam
                    type: object
                id:
                    format: uuid
                    type: string
                lastModifiedAt:
                    format: date-time
                    type: string
                name:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                repositoryID:
                    format: uuid
                    type: string
            required:
                - id
                - createdAt
                - lastModifiedAt
                - repositoryID
                - code
                - name
            type: object
        SkillPlanning:
            properties:
                closeDate:
                    format: date
                    type: string
                createdAt:
                    format: date-time
                    type: string
                customValues:
                    additionalProperties:
                        type: string
                    description: Custom field values - only declared custom fields for this entity type are allowed
                    example:
                        department: Engineering
                        employeeId: EMP-12345
                        location: Amsterdam
                    type: object
                deadlineDate:
                    format: date
                    type: string
                employeeID:
                    format: uuid
                    type: string
                fromDate:
                    format: date
                    type: string
                id:
                    format: uuid
                    type: string
                lastModifiedAt:
                    format: date-time
                    type: string
                remark:
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                skillDefinitionID:
                    format: uuid
                    type: string
                typeOfProofID:
                    format: uuid
                    type: string
            required:
                - id
                - createdAt
                - lastModifiedAt
                - repositoryID
                - employeeID
                - fromDate
                - skillDefinitionID
            type: object
        SkillResult:
            properties:
                createdAt:
                    format: date-time
                    type: string
                customValues:
                    additionalProperties:
                        type: string
                    description: Custom field values - only declared custom fields for this entity type are allowed
                    example:
                        department: Engineering
                        employeeId: EMP-12345
                        location: Amsterdam
                    type: object
                employeeID:
                    format: uuid
                    type: string
                expirationDate:
                    format: date
                    type: string
                id:
                    format: uuid
                    type: string
                issueDate:
                    format: date
                    type: string
                lastModifiedAt:
                    format: date-time
                    type: string
                remark:
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                scoreID:
                    format: uuid
                    type: string
                typeOfProofID:
                    format: uuid
                    type: string
            required:
                - id
                - createdAt
                - lastModifiedAt
                - repositoryID
                - employeeID
                - issueDate
                - typeOfProofID
            type: object
        TypeOfProof:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                code:
                    type: string
                createdAt:
                    format: date-time
                    type: string
                customValues:
                    additionalProperties:
                        type: string
                    description: Custom field values - only declared custom fields for this entity type are allowed
                    example:
                        department: Engineering
                        employeeId: EMP-12345
                        location: Amsterdam
                    type: object
                description:
                    type: string
                id:
                    format: uuid
                    type: string
                lastModifiedAt:
                    format: date-time
                    type: string
                name:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                repositoryID:
                    format: uuid
                    type: string
                skillDefinitionID:
                    format: uuid
                    type: string
            required:
                - id
                - createdAt
                - lastModifiedAt
                - repositoryID
                - name
                - skillDefinitionID
                - activePeriod
            type: object
        UpdateCreateCustomFieldDefinitionProposalRequest:
            description: Update request object. All fields are optional - omitted fields will not be changed. Only include fields you want to update. Setting a field to null will clear its value (where applicable).
            properties:
                code:
                    description: Omit this field to keep current value
                    type: string
                entityDefinitionID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                name:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys (omit to keep current value)
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                repositoryID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
            type: object
        UpdateCreateEmployeeProposalRequest:
            description: Update request object. All fields are optional - omitted fields will not be changed. Only include fields you want to update. Setting a field to null will clear its value (where applicable).
            properties:
                birthDate:
                    description: Omit this field to keep current value
                    format: date
                    type: string
                customValues:
                    additionalProperties:
                        type: string
                    description: Custom field values - only declared custom fields for this entity type are allowed (omit to keep current value)
                    example:
                        department: Engineering
                        employeeId: EMP-12345
                        location: Amsterdam
                    type: object
                email:
                    description: Omit this field to keep current value
                    format: email
                    type: string
                employeeNumber:
                    description: Omit this field to keep current value
                    type: string
                firstName:
                    description: Omit this field to keep current value
                    type: string
                initials:
                    description: Omit this field to keep current value
                    type: string
                remark:
                    description: Omit this field to keep current value
                    type: string
                repositoryID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                surname:
                    description: Omit this field to keep current value
                    type: string
            type: object
        UpdateCreateEmployeeUnavailabilityProposalRequest:
            description: Update request object. All fields are optional - omitted fields will not be changed. Only include fields you want to update. Setting a field to null will clear its value (where applicable).
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end) (omit to keep current value)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                employeeID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                reason:
                    description: Omit this field to keep current value
                    type: string
                repositoryID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
            type: object
        UpdateCreateEmploymentContractProposalRequest:
            description: Update request object. All fields are optional - omitted fields will not be changed. Only include fields you want to update. Setting a field to null will clear its value (where applicable).
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end) (omit to keep current value)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                contractTypeID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                employeeID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                repositoryID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
            type: object
        UpdateCreateEmploymentContractTypeProposalRequest:
            description: Update request object. All fields are optional - omitted fields will not be changed. Only include fields you want to update. Setting a field to null will clear its value (where applicable).
            properties:
                code:
                    description: Omit this field to keep current value
                    type: string
                name:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys (omit to keep current value)
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                repositoryID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
            type: object
        UpdateCreateEmploymentRelationProposalRequest:
            description: Update request object. All fields are optional - omitted fields will not be changed. Only include fields you want to update. Setting a field to null will clear its value (where applicable).
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end) (omit to keep current value)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                fromEmployeeID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                relationTypeID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                repositoryID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                toEmployeeID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
            type: object
        UpdateCreateEmploymentRelationTypeProposalRequest:
            description: Update request object. All fields are optional - omitted fields will not be changed. Only include fields you want to update. Setting a field to null will clear its value (where applicable).
            properties:
                code:
                    description: Omit this field to keep current value
                    type: string
                name:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys (omit to keep current value)
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                repositoryID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
            type: object
        UpdateCreateGroupingProposalRequest:
            description: Update request object. All fields are optional - omitted fields will not be changed. Only include fields you want to update. Setting a field to null will clear its value (where applicable).
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end) (omit to keep current value)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                code:
                    description: Omit this field to keep current value
                    type: string
                customValues:
                    additionalProperties:
                        type: string
                    description: Custom field values - only declared custom fields for this entity type are allowed (omit to keep current value)
                    example:
                        department: Engineering
                        employeeId: EMP-12345
                        location: Amsterdam
                    type: object
                definedInGroupingID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                description:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys (omit to keep current value)
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                name:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys (omit to keep current value)
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                repositoryID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                typeID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
            type: object
        UpdateCreateGroupingTypeProposalRequest:
            description: Update request object. All fields are optional - omitted fields will not be changed. Only include fields you want to update. Setting a field to null will clear its value (where applicable).
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end) (omit to keep current value)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                code:
                    description: Omit this field to keep current value
                    type: string
                customValues:
                    additionalProperties:
                        type: string
                    description: Custom field values - only declared custom fields for this entity type are allowed (omit to keep current value)
                    example:
                        department: Engineering
                        employeeId: EMP-12345
                        location: Amsterdam
                    type: object
                name:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys (omit to keep current value)
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                repositoryID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
            type: object
        UpdateCreateMonitoringTraceProposalRequest:
            description: Update request object. All fields are optional - omitted fields will not be changed. Only include fields you want to update. Setting a field to null will clear its value (where applicable).
            properties:
                executedAt:
                    description: Omit this field to keep current value
                    format: date-time
                    type: string
                remark:
                    description: Omit this field to keep current value
                    type: string
                repositoryID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                requestedAt:
                    description: Omit this field to keep current value
                    format: date-time
                    type: string
            type: object
        UpdateCreatePositionAssignmentProposalRequest:
            description: Update request object. All fields are optional - omitted fields will not be changed. Only include fields you want to update. Setting a field to null will clear its value (where applicable).
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end) (omit to keep current value)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                employeeID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                remark:
                    description: Omit this field to keep current value
                    type: string
                repositoryID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                tagIDs:
                    description: Omit this field to keep current value
                    items:
                        format: uuid
                        type: string
                    type: array
            type: object
        UpdateCreateRatingScaleLevelDescriptorProposalRequest:
            description: Update request object. All fields are optional - omitted fields will not be changed. Only include fields you want to update. Setting a field to null will clear its value (where applicable).
            properties:
                description:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys (omit to keep current value)
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                ratingScaleLevelID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                repositoryID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                skillDefinitionID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
            type: object
        UpdateCreateRatingScaleLevelProposalRequest:
            description: Update request object. All fields are optional - omitted fields will not be changed. Only include fields you want to update. Setting a field to null will clear its value (where applicable).
            properties:
                code:
                    description: Omit this field to keep current value
                    type: string
                customValues:
                    additionalProperties:
                        type: string
                    description: Custom field values - only declared custom fields for this entity type are allowed (omit to keep current value)
                    example:
                        department: Engineering
                        employeeId: EMP-12345
                        location: Amsterdam
                    type: object
                description:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys (omit to keep current value)
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                name:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys (omit to keep current value)
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                ratingScaleID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                repositoryID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                scoreOrder:
                    description: Omit this field to keep current value
                    format: int32
                    type: integer
            type: object
        UpdateCreateRatingScaleProposalRequest:
            description: Update request object. All fields are optional - omitted fields will not be changed. Only include fields you want to update. Setting a field to null will clear its value (where applicable).
            properties:
                code:
                    description: Omit this field to keep current value
                    type: string
                customValues:
                    additionalProperties:
                        type: string
                    description: Custom field values - only declared custom fields for this entity type are allowed (omit to keep current value)
                    example:
                        department: Engineering
                        employeeId: EMP-12345
                        location: Amsterdam
                    type: object
                name:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys (omit to keep current value)
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                repositoryID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
            type: object
        UpdateCreateSkillDefinitionProposalRequest:
            description: Update request object. All fields are optional - omitted fields will not be changed. Only include fields you want to update. Setting a field to null will clear its value (where applicable).
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end) (omit to keep current value)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                code:
                    description: Omit this field to keep current value
                    type: string
                customValues:
                    additionalProperties:
                        type: string
                    description: Custom field values - only declared custom fields for this entity type are allowed (omit to keep current value)
                    example:
                        department: Engineering
                        employeeId: EMP-12345
                        location: Amsterdam
                    type: object
                description:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys (omit to keep current value)
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                name:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys (omit to keep current value)
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                ratingScaleID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                repositoryID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                typeID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
            type: object
        UpdateCreateSkillDefinitionTypeProposalRequest:
            description: Update request object. All fields are optional - omitted fields will not be changed. Only include fields you want to update. Setting a field to null will clear its value (where applicable).
            properties:
                code:
                    description: Omit this field to keep current value
                    type: string
                customValues:
                    additionalProperties:
                        type: string
                    description: Custom field values - only declared custom fields for this entity type are allowed (omit to keep current value)
                    example:
                        department: Engineering
                        employeeId: EMP-12345
                        location: Amsterdam
                    type: object
                name:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys (omit to keep current value)
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                repositoryID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
            type: object
        UpdateCreateSkillPlanningProposalRequest:
            description: Update request object. All fields are optional - omitted fields will not be changed. Only include fields you want to update. Setting a field to null will clear its value (where applicable).
            properties:
                closeDate:
                    description: Omit this field to keep current value
                    format: date
                    type: string
                customValues:
                    additionalProperties:
                        type: string
                    description: Custom field values - only declared custom fields for this entity type are allowed (omit to keep current value)
                    example:
                        department: Engineering
                        employeeId: EMP-12345
                        location: Amsterdam
                    type: object
                deadlineDate:
                    description: Omit this field to keep current value
                    format: date
                    type: string
                employeeID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                fromDate:
                    description: Omit this field to keep current value
                    format: date
                    type: string
                remark:
                    description: Omit this field to keep current value
                    type: string
                repositoryID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                skillDefinitionID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                typeOfProofID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
            type: object
        UpdateCreateSkillResultProposalRequest:
            description: Update request object. All fields are optional - omitted fields will not be changed. Only include fields you want to update. Setting a field to null will clear its value (where applicable).
            properties:
                customValues:
                    additionalProperties:
                        type: string
                    description: Custom field values - only declared custom fields for this entity type are allowed (omit to keep current value)
                    example:
                        department: Engineering
                        employeeId: EMP-12345
                        location: Amsterdam
                    type: object
                employeeID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                expirationDate:
                    description: Omit this field to keep current value
                    format: date
                    type: string
                issueDate:
                    description: Omit this field to keep current value
                    format: date
                    type: string
                remark:
                    description: Omit this field to keep current value
                    type: string
                repositoryID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                scoreID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                typeOfProofID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
            type: object
        UpdateCreateTypeOfProofProposalRequest:
            description: Update request object. All fields are optional - omitted fields will not be changed. Only include fields you want to update. Setting a field to null will clear its value (where applicable).
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end) (omit to keep current value)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                code:
                    description: Omit this field to keep current value
                    type: string
                customValues:
                    additionalProperties:
                        type: string
                    description: Custom field values - only declared custom fields for this entity type are allowed (omit to keep current value)
                    example:
                        department: Engineering
                        employeeId: EMP-12345
                        location: Amsterdam
                    type: object
                description:
                    description: Omit this field to keep current value
                    type: string
                name:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys (omit to keep current value)
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                repositoryID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                skillDefinitionID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
            type: object
        UpdateCustomFieldDefinitionProposal:
            properties:
                code:
                    type: string
                entityDefinitionID:
                    format: uuid
                    type: string
                id:
                    format: uuid
                    type: string
                isProposalExecutionFailed:
                    readOnly: true
                    type: boolean
                isProposalResolved:
                    example: false
                    readOnly: true
                    type: boolean
                name:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                proposalExecutionErrorText:
                    readOnly: true
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestID:
                    format: uuid
                    readOnly: true
                    type: string
            required:
                - requestID
                - isProposalResolved
                - isProposalExecutionFailed
                - id
                - repositoryID
            type: object
        UpdateCustomFieldDefinitionRequest:
            description: Update request object. All fields are optional - omitted fields will not be changed. Only include fields you want to update. Setting a field to null will clear its value (where applicable).
            properties:
                code:
                    description: Omit this field to keep current value
                    type: string
                createdAt:
                    description: Omit this field to keep current value
                    format: date-time
                    type: string
                entityDefinitionID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                lastModifiedAt:
                    description: Omit this field to keep current value
                    format: date-time
                    type: string
                name:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys (omit to keep current value)
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                repositoryID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
            type: object
        UpdateDeleteCustomFieldDefinitionProposalRequest:
            description: Update request object. All fields are optional - omitted fields will not be changed. Only include fields you want to update. Setting a field to null will clear its value (where applicable).
            properties:
                id:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                repositoryID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
            type: object
        UpdateDeleteEmployeeProposalRequest:
            description: Update request object. All fields are optional - omitted fields will not be changed. Only include fields you want to update. Setting a field to null will clear its value (where applicable).
            properties:
                id:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                repositoryID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
            type: object
        UpdateDeleteEmployeeUnavailabilityProposalRequest:
            description: Update request object. All fields are optional - omitted fields will not be changed. Only include fields you want to update. Setting a field to null will clear its value (where applicable).
            properties:
                id:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                repositoryID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
            type: object
        UpdateDeleteEmploymentContractProposalRequest:
            description: Update request object. All fields are optional - omitted fields will not be changed. Only include fields you want to update. Setting a field to null will clear its value (where applicable).
            properties:
                id:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                repositoryID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
            type: object
        UpdateDeleteEmploymentContractTypeProposalRequest:
            description: Update request object. All fields are optional - omitted fields will not be changed. Only include fields you want to update. Setting a field to null will clear its value (where applicable).
            properties:
                id:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                repositoryID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
            type: object
        UpdateDeleteEmploymentRelationProposalRequest:
            description: Update request object. All fields are optional - omitted fields will not be changed. Only include fields you want to update. Setting a field to null will clear its value (where applicable).
            properties:
                id:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                repositoryID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
            type: object
        UpdateDeleteEmploymentRelationTypeProposalRequest:
            description: Update request object. All fields are optional - omitted fields will not be changed. Only include fields you want to update. Setting a field to null will clear its value (where applicable).
            properties:
                id:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                repositoryID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
            type: object
        UpdateDeleteGroupingProposalRequest:
            description: Update request object. All fields are optional - omitted fields will not be changed. Only include fields you want to update. Setting a field to null will clear its value (where applicable).
            properties:
                id:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                repositoryID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
            type: object
        UpdateDeleteGroupingTypeProposalRequest:
            description: Update request object. All fields are optional - omitted fields will not be changed. Only include fields you want to update. Setting a field to null will clear its value (where applicable).
            properties:
                id:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                repositoryID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
            type: object
        UpdateDeleteMonitoringTraceProposalRequest:
            description: Update request object. All fields are optional - omitted fields will not be changed. Only include fields you want to update. Setting a field to null will clear its value (where applicable).
            properties:
                id:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                repositoryID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
            type: object
        UpdateDeletePositionAssignmentProposalRequest:
            description: Update request object. All fields are optional - omitted fields will not be changed. Only include fields you want to update. Setting a field to null will clear its value (where applicable).
            properties:
                id:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                repositoryID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
            type: object
        UpdateDeleteRatingScaleLevelDescriptorProposalRequest:
            description: Update request object. All fields are optional - omitted fields will not be changed. Only include fields you want to update. Setting a field to null will clear its value (where applicable).
            properties:
                id:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                repositoryID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
            type: object
        UpdateDeleteRatingScaleLevelProposalRequest:
            description: Update request object. All fields are optional - omitted fields will not be changed. Only include fields you want to update. Setting a field to null will clear its value (where applicable).
            properties:
                id:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                repositoryID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
            type: object
        UpdateDeleteRatingScaleProposalRequest:
            description: Update request object. All fields are optional - omitted fields will not be changed. Only include fields you want to update. Setting a field to null will clear its value (where applicable).
            properties:
                id:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                repositoryID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
            type: object
        UpdateDeleteSkillDefinitionProposalRequest:
            description: Update request object. All fields are optional - omitted fields will not be changed. Only include fields you want to update. Setting a field to null will clear its value (where applicable).
            properties:
                id:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                repositoryID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
            type: object
        UpdateDeleteSkillDefinitionTypeProposalRequest:
            description: Update request object. All fields are optional - omitted fields will not be changed. Only include fields you want to update. Setting a field to null will clear its value (where applicable).
            properties:
                id:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                repositoryID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
            type: object
        UpdateDeleteSkillPlanningProposalRequest:
            description: Update request object. All fields are optional - omitted fields will not be changed. Only include fields you want to update. Setting a field to null will clear its value (where applicable).
            properties:
                id:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                repositoryID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
            type: object
        UpdateDeleteSkillResultProposalRequest:
            description: Update request object. All fields are optional - omitted fields will not be changed. Only include fields you want to update. Setting a field to null will clear its value (where applicable).
            properties:
                id:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                repositoryID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
            type: object
        UpdateDeleteTypeOfProofProposalRequest:
            description: Update request object. All fields are optional - omitted fields will not be changed. Only include fields you want to update. Setting a field to null will clear its value (where applicable).
            properties:
                id:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                repositoryID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
            type: object
        UpdateEmployeeProposal:
            properties:
                birthDate:
                    format: date
                    type: string
                customValues:
                    additionalProperties:
                        type: string
                    description: Custom field values - only declared custom fields for this entity type are allowed
                    example:
                        department: Engineering
                        employeeId: EMP-12345
                        location: Amsterdam
                    type: object
                email:
                    format: email
                    type: string
                employeeNumber:
                    type: string
                firstName:
                    type: string
                id:
                    format: uuid
                    type: string
                initials:
                    type: string
                isProposalExecutionFailed:
                    readOnly: true
                    type: boolean
                isProposalResolved:
                    example: false
                    readOnly: true
                    type: boolean
                proposalExecutionErrorText:
                    readOnly: true
                    type: string
                remark:
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestID:
                    format: uuid
                    readOnly: true
                    type: string
                surname:
                    type: string
            required:
                - requestID
                - isProposalResolved
                - isProposalExecutionFailed
                - id
                - repositoryID
            type: object
        UpdateEmployeeRequest:
            description: Update request object. All fields are optional - omitted fields will not be changed. Only include fields you want to update. Setting a field to null will clear its value (where applicable).
            properties:
                birthDate:
                    description: Omit this field to keep current value
                    format: date
                    type: string
                createdAt:
                    description: Omit this field to keep current value
                    format: date-time
                    type: string
                customValues:
                    additionalProperties:
                        type: string
                    description: Custom field values - only declared custom fields for this entity type are allowed (omit to keep current value)
                    example:
                        department: Engineering
                        employeeId: EMP-12345
                        location: Amsterdam
                    type: object
                email:
                    description: Omit this field to keep current value
                    format: email
                    type: string
                employeeNumber:
                    description: Omit this field to keep current value
                    type: string
                firstName:
                    description: Omit this field to keep current value
                    type: string
                initials:
                    description: Omit this field to keep current value
                    type: string
                lastModifiedAt:
                    description: Omit this field to keep current value
                    format: date-time
                    type: string
                remark:
                    description: Omit this field to keep current value
                    type: string
                repositoryID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                surname:
                    description: Omit this field to keep current value
                    type: string
            type: object
        UpdateEmployeeUnavailabilityProposal:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                employeeID:
                    format: uuid
                    type: string
                id:
                    format: uuid
                    type: string
                isProposalExecutionFailed:
                    readOnly: true
                    type: boolean
                isProposalResolved:
                    example: false
                    readOnly: true
                    type: boolean
                proposalExecutionErrorText:
                    readOnly: true
                    type: string
                reason:
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestID:
                    format: uuid
                    readOnly: true
                    type: string
            required:
                - requestID
                - isProposalResolved
                - isProposalExecutionFailed
                - id
                - repositoryID
            type: object
        UpdateEmployeeUnavailabilityRequest:
            description: Update request object. All fields are optional - omitted fields will not be changed. Only include fields you want to update. Setting a field to null will clear its value (where applicable).
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end) (omit to keep current value)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                createdAt:
                    description: Omit this field to keep current value
                    format: date-time
                    type: string
                employeeID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                lastModifiedAt:
                    description: Omit this field to keep current value
                    format: date-time
                    type: string
                reason:
                    description: Omit this field to keep current value
                    type: string
                repositoryID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
            type: object
        UpdateEmploymentContractProposal:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                contractTypeID:
                    format: uuid
                    type: string
                employeeID:
                    format: uuid
                    type: string
                id:
                    format: uuid
                    type: string
                isProposalExecutionFailed:
                    readOnly: true
                    type: boolean
                isProposalResolved:
                    example: false
                    readOnly: true
                    type: boolean
                proposalExecutionErrorText:
                    readOnly: true
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestID:
                    format: uuid
                    readOnly: true
                    type: string
            required:
                - requestID
                - isProposalResolved
                - isProposalExecutionFailed
                - id
                - repositoryID
            type: object
        UpdateEmploymentContractRequest:
            description: Update request object. All fields are optional - omitted fields will not be changed. Only include fields you want to update. Setting a field to null will clear its value (where applicable).
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end) (omit to keep current value)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                contractTypeID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                createdAt:
                    description: Omit this field to keep current value
                    format: date-time
                    type: string
                employeeID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                lastModifiedAt:
                    description: Omit this field to keep current value
                    format: date-time
                    type: string
                repositoryID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
            type: object
        UpdateEmploymentContractTypeProposal:
            properties:
                code:
                    type: string
                id:
                    format: uuid
                    type: string
                isProposalExecutionFailed:
                    readOnly: true
                    type: boolean
                isProposalResolved:
                    example: false
                    readOnly: true
                    type: boolean
                name:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                proposalExecutionErrorText:
                    readOnly: true
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestID:
                    format: uuid
                    readOnly: true
                    type: string
            required:
                - requestID
                - isProposalResolved
                - isProposalExecutionFailed
                - id
                - repositoryID
            type: object
        UpdateEmploymentContractTypeRequest:
            description: Update request object. All fields are optional - omitted fields will not be changed. Only include fields you want to update. Setting a field to null will clear its value (where applicable).
            properties:
                code:
                    description: Omit this field to keep current value
                    type: string
                createdAt:
                    description: Omit this field to keep current value
                    format: date-time
                    type: string
                lastModifiedAt:
                    description: Omit this field to keep current value
                    format: date-time
                    type: string
                name:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys (omit to keep current value)
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                repositoryID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
            type: object
        UpdateEmploymentRelationProposal:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                fromEmployeeID:
                    format: uuid
                    type: string
                id:
                    format: uuid
                    type: string
                isProposalExecutionFailed:
                    readOnly: true
                    type: boolean
                isProposalResolved:
                    example: false
                    readOnly: true
                    type: boolean
                proposalExecutionErrorText:
                    readOnly: true
                    type: string
                relationTypeID:
                    format: uuid
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestID:
                    format: uuid
                    readOnly: true
                    type: string
                toEmployeeID:
                    format: uuid
                    type: string
            required:
                - requestID
                - isProposalResolved
                - isProposalExecutionFailed
                - id
                - repositoryID
            type: object
        UpdateEmploymentRelationRequest:
            description: Update request object. All fields are optional - omitted fields will not be changed. Only include fields you want to update. Setting a field to null will clear its value (where applicable).
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end) (omit to keep current value)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                createdAt:
                    description: Omit this field to keep current value
                    format: date-time
                    type: string
                fromEmployeeID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                lastModifiedAt:
                    description: Omit this field to keep current value
                    format: date-time
                    type: string
                relationTypeID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                repositoryID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                toEmployeeID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
            type: object
        UpdateEmploymentRelationTypeProposal:
            properties:
                code:
                    type: string
                id:
                    format: uuid
                    type: string
                isProposalExecutionFailed:
                    readOnly: true
                    type: boolean
                isProposalResolved:
                    example: false
                    readOnly: true
                    type: boolean
                name:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                proposalExecutionErrorText:
                    readOnly: true
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestID:
                    format: uuid
                    readOnly: true
                    type: string
            required:
                - requestID
                - isProposalResolved
                - isProposalExecutionFailed
                - id
                - repositoryID
            type: object
        UpdateEmploymentRelationTypeRequest:
            description: Update request object. All fields are optional - omitted fields will not be changed. Only include fields you want to update. Setting a field to null will clear its value (where applicable).
            properties:
                code:
                    description: Omit this field to keep current value
                    type: string
                createdAt:
                    description: Omit this field to keep current value
                    format: date-time
                    type: string
                lastModifiedAt:
                    description: Omit this field to keep current value
                    format: date-time
                    type: string
                name:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys (omit to keep current value)
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                repositoryID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
            type: object
        UpdateEntityDefinitionRequest:
            description: Update request object. All fields are optional - omitted fields will not be changed. Only include fields you want to update. Setting a field to null will clear its value (where applicable).
            properties:
                code:
                    description: Omit this field to keep current value
                    type: string
                name:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys (omit to keep current value)
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
            type: object
        UpdateGroupingProposal:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                code:
                    type: string
                customValues:
                    additionalProperties:
                        type: string
                    description: Custom field values - only declared custom fields for this entity type are allowed
                    example:
                        department: Engineering
                        employeeId: EMP-12345
                        location: Amsterdam
                    type: object
                definedInGroupingID:
                    format: uuid
                    type: string
                description:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                id:
                    format: uuid
                    type: string
                isProposalExecutionFailed:
                    readOnly: true
                    type: boolean
                isProposalResolved:
                    example: false
                    readOnly: true
                    type: boolean
                name:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                proposalExecutionErrorText:
                    readOnly: true
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestID:
                    format: uuid
                    readOnly: true
                    type: string
                typeID:
                    format: uuid
                    type: string
            required:
                - requestID
                - isProposalResolved
                - isProposalExecutionFailed
                - id
                - repositoryID
            type: object
        UpdateGroupingRequest:
            description: Update request object. All fields are optional - omitted fields will not be changed. Only include fields you want to update. Setting a field to null will clear its value (where applicable).
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end) (omit to keep current value)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                code:
                    description: Omit this field to keep current value
                    type: string
                createdAt:
                    description: Omit this field to keep current value
                    format: date-time
                    type: string
                customValues:
                    additionalProperties:
                        type: string
                    description: Custom field values - only declared custom fields for this entity type are allowed (omit to keep current value)
                    example:
                        department: Engineering
                        employeeId: EMP-12345
                        location: Amsterdam
                    type: object
                definedInGroupingID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                description:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys (omit to keep current value)
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                lastModifiedAt:
                    description: Omit this field to keep current value
                    format: date-time
                    type: string
                name:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys (omit to keep current value)
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                repositoryID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                typeID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
            type: object
        UpdateGroupingTypeProposal:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                code:
                    type: string
                customValues:
                    additionalProperties:
                        type: string
                    description: Custom field values - only declared custom fields for this entity type are allowed
                    example:
                        department: Engineering
                        employeeId: EMP-12345
                        location: Amsterdam
                    type: object
                id:
                    format: uuid
                    type: string
                isProposalExecutionFailed:
                    readOnly: true
                    type: boolean
                isProposalResolved:
                    example: false
                    readOnly: true
                    type: boolean
                name:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                proposalExecutionErrorText:
                    readOnly: true
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestID:
                    format: uuid
                    readOnly: true
                    type: string
            required:
                - requestID
                - isProposalResolved
                - isProposalExecutionFailed
                - id
                - repositoryID
            type: object
        UpdateGroupingTypeRequest:
            description: Update request object. All fields are optional - omitted fields will not be changed. Only include fields you want to update. Setting a field to null will clear its value (where applicable).
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end) (omit to keep current value)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                code:
                    description: Omit this field to keep current value
                    type: string
                createdAt:
                    description: Omit this field to keep current value
                    format: date-time
                    type: string
                customValues:
                    additionalProperties:
                        type: string
                    description: Custom field values - only declared custom fields for this entity type are allowed (omit to keep current value)
                    example:
                        department: Engineering
                        employeeId: EMP-12345
                        location: Amsterdam
                    type: object
                lastModifiedAt:
                    description: Omit this field to keep current value
                    format: date-time
                    type: string
                name:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys (omit to keep current value)
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                repositoryID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
            type: object
        UpdateMonitoringTraceProposal:
            properties:
                executedAt:
                    format: date-time
                    type: string
                id:
                    format: uuid
                    type: string
                isProposalExecutionFailed:
                    readOnly: true
                    type: boolean
                isProposalResolved:
                    example: false
                    readOnly: true
                    type: boolean
                proposalExecutionErrorText:
                    readOnly: true
                    type: string
                remark:
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestID:
                    format: uuid
                    readOnly: true
                    type: string
                requestedAt:
                    format: date-time
                    type: string
            required:
                - requestID
                - isProposalResolved
                - isProposalExecutionFailed
                - id
                - repositoryID
            type: object
        UpdateMonitoringTraceRequest:
            description: Update request object. All fields are optional - omitted fields will not be changed. Only include fields you want to update. Setting a field to null will clear its value (where applicable).
            properties:
                createdAt:
                    description: Omit this field to keep current value
                    format: date-time
                    type: string
                executedAt:
                    description: Omit this field to keep current value
                    format: date-time
                    type: string
                lastModifiedAt:
                    description: Omit this field to keep current value
                    format: date-time
                    type: string
                remark:
                    description: Omit this field to keep current value
                    type: string
                repositoryID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                requestedAt:
                    description: Omit this field to keep current value
                    format: date-time
                    type: string
            type: object
        UpdatePositionAssignmentProposal:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                employeeID:
                    format: uuid
                    type: string
                id:
                    format: uuid
                    type: string
                isProposalExecutionFailed:
                    readOnly: true
                    type: boolean
                isProposalResolved:
                    example: false
                    readOnly: true
                    type: boolean
                proposalExecutionErrorText:
                    readOnly: true
                    type: string
                remark:
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestID:
                    format: uuid
                    readOnly: true
                    type: string
                tagIDs:
                    items:
                        format: uuid
                        type: string
                    type: array
            required:
                - requestID
                - isProposalResolved
                - isProposalExecutionFailed
                - id
                - repositoryID
            type: object
        UpdatePositionAssignmentRequest:
            description: Update request object. All fields are optional - omitted fields will not be changed. Only include fields you want to update. Setting a field to null will clear its value (where applicable).
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end) (omit to keep current value)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                createdAt:
                    description: Omit this field to keep current value
                    format: date-time
                    type: string
                employeeID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                lastModifiedAt:
                    description: Omit this field to keep current value
                    format: date-time
                    type: string
                remark:
                    description: Omit this field to keep current value
                    type: string
                repositoryID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                tagIDs:
                    description: Omit this field to keep current value
                    items:
                        format: uuid
                        type: string
                    type: array
            type: object
        UpdateRatingScaleLevelDescriptorProposal:
            properties:
                description:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                id:
                    format: uuid
                    type: string
                isProposalExecutionFailed:
                    readOnly: true
                    type: boolean
                isProposalResolved:
                    example: false
                    readOnly: true
                    type: boolean
                proposalExecutionErrorText:
                    readOnly: true
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestID:
                    format: uuid
                    readOnly: true
                    type: string
            required:
                - requestID
                - isProposalResolved
                - isProposalExecutionFailed
                - id
                - repositoryID
            type: object
        UpdateRatingScaleLevelDescriptorRequest:
            description: Update request object. All fields are optional - omitted fields will not be changed. Only include fields you want to update. Setting a field to null will clear its value (where applicable).
            properties:
                createdAt:
                    description: Omit this field to keep current value
                    format: date-time
                    type: string
                description:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys (omit to keep current value)
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                lastModifiedAt:
                    description: Omit this field to keep current value
                    format: date-time
                    type: string
                ratingScaleLevelID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                repositoryID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                skillDefinitionID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
            type: object
        UpdateRatingScaleLevelProposal:
            properties:
                code:
                    type: string
                customValues:
                    additionalProperties:
                        type: string
                    description: Custom field values - only declared custom fields for this entity type are allowed
                    example:
                        department: Engineering
                        employeeId: EMP-12345
                        location: Amsterdam
                    type: object
                description:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                id:
                    format: uuid
                    type: string
                isProposalExecutionFailed:
                    readOnly: true
                    type: boolean
                isProposalResolved:
                    example: false
                    readOnly: true
                    type: boolean
                name:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                proposalExecutionErrorText:
                    readOnly: true
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestID:
                    format: uuid
                    readOnly: true
                    type: string
            required:
                - requestID
                - isProposalResolved
                - isProposalExecutionFailed
                - id
                - repositoryID
            type: object
        UpdateRatingScaleLevelRequest:
            description: Update request object. All fields are optional - omitted fields will not be changed. Only include fields you want to update. Setting a field to null will clear its value (where applicable).
            properties:
                code:
                    description: Omit this field to keep current value
                    type: string
                createdAt:
                    description: Omit this field to keep current value
                    format: date-time
                    type: string
                customValues:
                    additionalProperties:
                        type: string
                    description: Custom field values - only declared custom fields for this entity type are allowed (omit to keep current value)
                    example:
                        department: Engineering
                        employeeId: EMP-12345
                        location: Amsterdam
                    type: object
                description:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys (omit to keep current value)
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                lastModifiedAt:
                    description: Omit this field to keep current value
                    format: date-time
                    type: string
                name:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys (omit to keep current value)
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                ratingScaleID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                repositoryID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                scoreOrder:
                    description: Omit this field to keep current value
                    format: int32
                    type: integer
            type: object
        UpdateRatingScaleProposal:
            properties:
                code:
                    type: string
                customValues:
                    additionalProperties:
                        type: string
                    description: Custom field values - only declared custom fields for this entity type are allowed
                    example:
                        department: Engineering
                        employeeId: EMP-12345
                        location: Amsterdam
                    type: object
                id:
                    format: uuid
                    type: string
                isProposalExecutionFailed:
                    readOnly: true
                    type: boolean
                isProposalResolved:
                    example: false
                    readOnly: true
                    type: boolean
                name:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                proposalExecutionErrorText:
                    readOnly: true
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestID:
                    format: uuid
                    readOnly: true
                    type: string
            required:
                - requestID
                - isProposalResolved
                - isProposalExecutionFailed
                - id
                - repositoryID
            type: object
        UpdateRatingScaleRequest:
            description: Update request object. All fields are optional - omitted fields will not be changed. Only include fields you want to update. Setting a field to null will clear its value (where applicable).
            properties:
                code:
                    description: Omit this field to keep current value
                    type: string
                createdAt:
                    description: Omit this field to keep current value
                    format: date-time
                    type: string
                customValues:
                    additionalProperties:
                        type: string
                    description: Custom field values - only declared custom fields for this entity type are allowed (omit to keep current value)
                    example:
                        department: Engineering
                        employeeId: EMP-12345
                        location: Amsterdam
                    type: object
                lastModifiedAt:
                    description: Omit this field to keep current value
                    format: date-time
                    type: string
                name:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys (omit to keep current value)
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                repositoryID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
            type: object
        UpdateRepositoryRequest:
            description: Update request object. All fields are optional - omitted fields will not be changed. Only include fields you want to update. Setting a field to null will clear its value (where applicable).
            properties:
                code:
                    description: Omit this field to keep current value
                    type: string
            type: object
        UpdateSkillDefinitionProposal:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                code:
                    type: string
                customValues:
                    additionalProperties:
                        type: string
                    description: Custom field values - only declared custom fields for this entity type are allowed
                    example:
                        department: Engineering
                        employeeId: EMP-12345
                        location: Amsterdam
                    type: object
                description:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                id:
                    format: uuid
                    type: string
                isProposalExecutionFailed:
                    readOnly: true
                    type: boolean
                isProposalResolved:
                    example: false
                    readOnly: true
                    type: boolean
                name:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                proposalExecutionErrorText:
                    readOnly: true
                    type: string
                ratingScaleID:
                    format: uuid
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestID:
                    format: uuid
                    readOnly: true
                    type: string
                typeID:
                    format: uuid
                    type: string
            required:
                - requestID
                - isProposalResolved
                - isProposalExecutionFailed
                - id
                - repositoryID
            type: object
        UpdateSkillDefinitionRequest:
            description: Update request object. All fields are optional - omitted fields will not be changed. Only include fields you want to update. Setting a field to null will clear its value (where applicable).
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end) (omit to keep current value)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                code:
                    description: Omit this field to keep current value
                    type: string
                createdAt:
                    description: Omit this field to keep current value
                    format: date-time
                    type: string
                customValues:
                    additionalProperties:
                        type: string
                    description: Custom field values - only declared custom fields for this entity type are allowed (omit to keep current value)
                    example:
                        department: Engineering
                        employeeId: EMP-12345
                        location: Amsterdam
                    type: object
                description:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys (omit to keep current value)
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                lastModifiedAt:
                    description: Omit this field to keep current value
                    format: date-time
                    type: string
                name:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys (omit to keep current value)
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                ratingScaleID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                repositoryID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                typeID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
            type: object
        UpdateSkillDefinitionTypeProposal:
            properties:
                code:
                    type: string
                customValues:
                    additionalProperties:
                        type: string
                    description: Custom field values - only declared custom fields for this entity type are allowed
                    example:
                        department: Engineering
                        employeeId: EMP-12345
                        location: Amsterdam
                    type: object
                id:
                    format: uuid
                    type: string
                isProposalExecutionFailed:
                    readOnly: true
                    type: boolean
                isProposalResolved:
                    example: false
                    readOnly: true
                    type: boolean
                name:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                proposalExecutionErrorText:
                    readOnly: true
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestID:
                    format: uuid
                    readOnly: true
                    type: string
            required:
                - requestID
                - isProposalResolved
                - isProposalExecutionFailed
                - id
                - repositoryID
            type: object
        UpdateSkillDefinitionTypeRequest:
            description: Update request object. All fields are optional - omitted fields will not be changed. Only include fields you want to update. Setting a field to null will clear its value (where applicable).
            properties:
                code:
                    description: Omit this field to keep current value
                    type: string
                createdAt:
                    description: Omit this field to keep current value
                    format: date-time
                    type: string
                customValues:
                    additionalProperties:
                        type: string
                    description: Custom field values - only declared custom fields for this entity type are allowed (omit to keep current value)
                    example:
                        department: Engineering
                        employeeId: EMP-12345
                        location: Amsterdam
                    type: object
                lastModifiedAt:
                    description: Omit this field to keep current value
                    format: date-time
                    type: string
                name:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys (omit to keep current value)
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                repositoryID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
            type: object
        UpdateSkillPlanningProposal:
            properties:
                closeDate:
                    format: date
                    type: string
                customValues:
                    additionalProperties:
                        type: string
                    description: Custom field values - only declared custom fields for this entity type are allowed
                    example:
                        department: Engineering
                        employeeId: EMP-12345
                        location: Amsterdam
                    type: object
                deadlineDate:
                    format: date
                    type: string
                employeeID:
                    format: uuid
                    type: string
                fromDate:
                    format: date
                    type: string
                id:
                    format: uuid
                    type: string
                isProposalExecutionFailed:
                    readOnly: true
                    type: boolean
                isProposalResolved:
                    example: false
                    readOnly: true
                    type: boolean
                proposalExecutionErrorText:
                    readOnly: true
                    type: string
                remark:
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestID:
                    format: uuid
                    readOnly: true
                    type: string
                skillDefinitionID:
                    format: uuid
                    type: string
                typeOfProofID:
                    format: uuid
                    type: string
            required:
                - requestID
                - isProposalResolved
                - isProposalExecutionFailed
                - id
                - repositoryID
            type: object
        UpdateSkillPlanningRequest:
            description: Update request object. All fields are optional - omitted fields will not be changed. Only include fields you want to update. Setting a field to null will clear its value (where applicable).
            properties:
                closeDate:
                    description: Omit this field to keep current value
                    format: date
                    type: string
                createdAt:
                    description: Omit this field to keep current value
                    format: date-time
                    type: string
                customValues:
                    additionalProperties:
                        type: string
                    description: Custom field values - only declared custom fields for this entity type are allowed (omit to keep current value)
                    example:
                        department: Engineering
                        employeeId: EMP-12345
                        location: Amsterdam
                    type: object
                deadlineDate:
                    description: Omit this field to keep current value
                    format: date
                    type: string
                employeeID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                fromDate:
                    description: Omit this field to keep current value
                    format: date
                    type: string
                lastModifiedAt:
                    description: Omit this field to keep current value
                    format: date-time
                    type: string
                remark:
                    description: Omit this field to keep current value
                    type: string
                repositoryID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                skillDefinitionID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                typeOfProofID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
            type: object
        UpdateSkillResultProposal:
            properties:
                customValues:
                    additionalProperties:
                        type: string
                    description: Custom field values - only declared custom fields for this entity type are allowed
                    example:
                        department: Engineering
                        employeeId: EMP-12345
                        location: Amsterdam
                    type: object
                employeeID:
                    format: uuid
                    type: string
                expirationDate:
                    format: date
                    type: string
                id:
                    format: uuid
                    type: string
                isProposalExecutionFailed:
                    readOnly: true
                    type: boolean
                isProposalResolved:
                    example: false
                    readOnly: true
                    type: boolean
                issueDate:
                    format: date
                    type: string
                proposalExecutionErrorText:
                    readOnly: true
                    type: string
                remark:
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestID:
                    format: uuid
                    readOnly: true
                    type: string
                scoreID:
                    format: uuid
                    type: string
                typeOfProofID:
                    format: uuid
                    type: string
            required:
                - requestID
                - isProposalResolved
                - isProposalExecutionFailed
                - id
                - repositoryID
            type: object
        UpdateSkillResultRequest:
            description: Update request object. All fields are optional - omitted fields will not be changed. Only include fields you want to update. Setting a field to null will clear its value (where applicable).
            properties:
                createdAt:
                    description: Omit this field to keep current value
                    format: date-time
                    type: string
                customValues:
                    additionalProperties:
                        type: string
                    description: Custom field values - only declared custom fields for this entity type are allowed (omit to keep current value)
                    example:
                        department: Engineering
                        employeeId: EMP-12345
                        location: Amsterdam
                    type: object
                employeeID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                expirationDate:
                    description: Omit this field to keep current value
                    format: date
                    type: string
                issueDate:
                    description: Omit this field to keep current value
                    format: date
                    type: string
                lastModifiedAt:
                    description: Omit this field to keep current value
                    format: date-time
                    type: string
                remark:
                    description: Omit this field to keep current value
                    type: string
                repositoryID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                scoreID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                typeOfProofID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
            type: object
        UpdateTypeOfProofProposal:
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                code:
                    type: string
                customValues:
                    additionalProperties:
                        type: string
                    description: Custom field values - only declared custom fields for this entity type are allowed
                    example:
                        department: Engineering
                        employeeId: EMP-12345
                        location: Amsterdam
                    type: object
                description:
                    type: string
                id:
                    format: uuid
                    type: string
                isProposalExecutionFailed:
                    readOnly: true
                    type: boolean
                isProposalResolved:
                    example: false
                    readOnly: true
                    type: boolean
                name:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                proposalExecutionErrorText:
                    readOnly: true
                    type: string
                repositoryID:
                    format: uuid
                    type: string
                requestID:
                    format: uuid
                    readOnly: true
                    type: string
                skillDefinitionID:
                    format: uuid
                    type: string
            required:
                - requestID
                - isProposalResolved
                - isProposalExecutionFailed
                - id
                - repositoryID
            type: object
        UpdateTypeOfProofRequest:
            description: Update request object. All fields are optional - omitted fields will not be changed. Only include fields you want to update. Setting a field to null will clear its value (where applicable).
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end) (omit to keep current value)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                code:
                    description: Omit this field to keep current value
                    type: string
                createdAt:
                    description: Omit this field to keep current value
                    format: date-time
                    type: string
                customValues:
                    additionalProperties:
                        type: string
                    description: Custom field values - only declared custom fields for this entity type are allowed (omit to keep current value)
                    example:
                        department: Engineering
                        employeeId: EMP-12345
                        location: Amsterdam
                    type: object
                description:
                    description: Omit this field to keep current value
                    type: string
                lastModifiedAt:
                    description: Omit this field to keep current value
                    format: date-time
                    type: string
                name:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys (omit to keep current value)
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                repositoryID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                skillDefinitionID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
            type: object
        UpdateUpdateCustomFieldDefinitionProposalRequest:
            description: Update request object. All fields are optional - omitted fields will not be changed. Only include fields you want to update. Setting a field to null will clear its value (where applicable).
            properties:
                code:
                    description: Omit this field to keep current value
                    type: string
                entityDefinitionID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                id:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                name:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys (omit to keep current value)
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                repositoryID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
            type: object
        UpdateUpdateEmployeeProposalRequest:
            description: Update request object. All fields are optional - omitted fields will not be changed. Only include fields you want to update. Setting a field to null will clear its value (where applicable).
            properties:
                birthDate:
                    description: Omit this field to keep current value
                    format: date
                    type: string
                customValues:
                    additionalProperties:
                        type: string
                    description: Custom field values - only declared custom fields for this entity type are allowed (omit to keep current value)
                    example:
                        department: Engineering
                        employeeId: EMP-12345
                        location: Amsterdam
                    type: object
                email:
                    description: Omit this field to keep current value
                    format: email
                    type: string
                employeeNumber:
                    description: Omit this field to keep current value
                    type: string
                firstName:
                    description: Omit this field to keep current value
                    type: string
                id:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                initials:
                    description: Omit this field to keep current value
                    type: string
                remark:
                    description: Omit this field to keep current value
                    type: string
                repositoryID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                surname:
                    description: Omit this field to keep current value
                    type: string
            type: object
        UpdateUpdateEmployeeUnavailabilityProposalRequest:
            description: Update request object. All fields are optional - omitted fields will not be changed. Only include fields you want to update. Setting a field to null will clear its value (where applicable).
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end) (omit to keep current value)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                employeeID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                id:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                reason:
                    description: Omit this field to keep current value
                    type: string
                repositoryID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
            type: object
        UpdateUpdateEmploymentContractProposalRequest:
            description: Update request object. All fields are optional - omitted fields will not be changed. Only include fields you want to update. Setting a field to null will clear its value (where applicable).
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end) (omit to keep current value)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                contractTypeID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                employeeID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                id:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                repositoryID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
            type: object
        UpdateUpdateEmploymentContractTypeProposalRequest:
            description: Update request object. All fields are optional - omitted fields will not be changed. Only include fields you want to update. Setting a field to null will clear its value (where applicable).
            properties:
                code:
                    description: Omit this field to keep current value
                    type: string
                id:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                name:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys (omit to keep current value)
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                repositoryID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
            type: object
        UpdateUpdateEmploymentRelationProposalRequest:
            description: Update request object. All fields are optional - omitted fields will not be changed. Only include fields you want to update. Setting a field to null will clear its value (where applicable).
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end) (omit to keep current value)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                fromEmployeeID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                id:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                relationTypeID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                repositoryID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                toEmployeeID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
            type: object
        UpdateUpdateEmploymentRelationTypeProposalRequest:
            description: Update request object. All fields are optional - omitted fields will not be changed. Only include fields you want to update. Setting a field to null will clear its value (where applicable).
            properties:
                code:
                    description: Omit this field to keep current value
                    type: string
                id:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                name:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys (omit to keep current value)
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                repositoryID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
            type: object
        UpdateUpdateGroupingProposalRequest:
            description: Update request object. All fields are optional - omitted fields will not be changed. Only include fields you want to update. Setting a field to null will clear its value (where applicable).
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end) (omit to keep current value)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                code:
                    description: Omit this field to keep current value
                    type: string
                customValues:
                    additionalProperties:
                        type: string
                    description: Custom field values - only declared custom fields for this entity type are allowed (omit to keep current value)
                    example:
                        department: Engineering
                        employeeId: EMP-12345
                        location: Amsterdam
                    type: object
                definedInGroupingID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                description:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys (omit to keep current value)
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                id:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                name:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys (omit to keep current value)
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                repositoryID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                typeID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
            type: object
        UpdateUpdateGroupingTypeProposalRequest:
            description: Update request object. All fields are optional - omitted fields will not be changed. Only include fields you want to update. Setting a field to null will clear its value (where applicable).
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end) (omit to keep current value)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                code:
                    description: Omit this field to keep current value
                    type: string
                customValues:
                    additionalProperties:
                        type: string
                    description: Custom field values - only declared custom fields for this entity type are allowed (omit to keep current value)
                    example:
                        department: Engineering
                        employeeId: EMP-12345
                        location: Amsterdam
                    type: object
                id:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                name:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys (omit to keep current value)
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                repositoryID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
            type: object
        UpdateUpdateMonitoringTraceProposalRequest:
            description: Update request object. All fields are optional - omitted fields will not be changed. Only include fields you want to update. Setting a field to null will clear its value (where applicable).
            properties:
                executedAt:
                    description: Omit this field to keep current value
                    format: date-time
                    type: string
                id:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                remark:
                    description: Omit this field to keep current value
                    type: string
                repositoryID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                requestedAt:
                    description: Omit this field to keep current value
                    format: date-time
                    type: string
            type: object
        UpdateUpdatePositionAssignmentProposalRequest:
            description: Update request object. All fields are optional - omitted fields will not be changed. Only include fields you want to update. Setting a field to null will clear its value (where applicable).
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end) (omit to keep current value)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                employeeID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                id:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                remark:
                    description: Omit this field to keep current value
                    type: string
                repositoryID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                tagIDs:
                    description: Omit this field to keep current value
                    items:
                        format: uuid
                        type: string
                    type: array
            type: object
        UpdateUpdateRatingScaleLevelDescriptorProposalRequest:
            description: Update request object. All fields are optional - omitted fields will not be changed. Only include fields you want to update. Setting a field to null will clear its value (where applicable).
            properties:
                description:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys (omit to keep current value)
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                id:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                repositoryID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
            type: object
        UpdateUpdateRatingScaleLevelProposalRequest:
            description: Update request object. All fields are optional - omitted fields will not be changed. Only include fields you want to update. Setting a field to null will clear its value (where applicable).
            properties:
                code:
                    description: Omit this field to keep current value
                    type: string
                customValues:
                    additionalProperties:
                        type: string
                    description: Custom field values - only declared custom fields for this entity type are allowed (omit to keep current value)
                    example:
                        department: Engineering
                        employeeId: EMP-12345
                        location: Amsterdam
                    type: object
                description:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys (omit to keep current value)
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                id:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                name:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys (omit to keep current value)
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                repositoryID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
            type: object
        UpdateUpdateRatingScaleProposalRequest:
            description: Update request object. All fields are optional - omitted fields will not be changed. Only include fields you want to update. Setting a field to null will clear its value (where applicable).
            properties:
                code:
                    description: Omit this field to keep current value
                    type: string
                customValues:
                    additionalProperties:
                        type: string
                    description: Custom field values - only declared custom fields for this entity type are allowed (omit to keep current value)
                    example:
                        department: Engineering
                        employeeId: EMP-12345
                        location: Amsterdam
                    type: object
                id:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                name:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys (omit to keep current value)
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                repositoryID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
            type: object
        UpdateUpdateSkillDefinitionProposalRequest:
            description: Update request object. All fields are optional - omitted fields will not be changed. Only include fields you want to update. Setting a field to null will clear its value (where applicable).
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end) (omit to keep current value)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                code:
                    description: Omit this field to keep current value
                    type: string
                customValues:
                    additionalProperties:
                        type: string
                    description: Custom field values - only declared custom fields for this entity type are allowed (omit to keep current value)
                    example:
                        department: Engineering
                        employeeId: EMP-12345
                        location: Amsterdam
                    type: object
                description:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys (omit to keep current value)
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                id:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                name:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys (omit to keep current value)
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                ratingScaleID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                repositoryID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                typeID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
            type: object
        UpdateUpdateSkillDefinitionTypeProposalRequest:
            description: Update request object. All fields are optional - omitted fields will not be changed. Only include fields you want to update. Setting a field to null will clear its value (where applicable).
            properties:
                code:
                    description: Omit this field to keep current value
                    type: string
                customValues:
                    additionalProperties:
                        type: string
                    description: Custom field values - only declared custom fields for this entity type are allowed (omit to keep current value)
                    example:
                        department: Engineering
                        employeeId: EMP-12345
                        location: Amsterdam
                    type: object
                id:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                name:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys (omit to keep current value)
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                repositoryID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
            type: object
        UpdateUpdateSkillPlanningProposalRequest:
            description: Update request object. All fields are optional - omitted fields will not be changed. Only include fields you want to update. Setting a field to null will clear its value (where applicable).
            properties:
                closeDate:
                    description: Omit this field to keep current value
                    format: date
                    type: string
                customValues:
                    additionalProperties:
                        type: string
                    description: Custom field values - only declared custom fields for this entity type are allowed (omit to keep current value)
                    example:
                        department: Engineering
                        employeeId: EMP-12345
                        location: Amsterdam
                    type: object
                deadlineDate:
                    description: Omit this field to keep current value
                    format: date
                    type: string
                employeeID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                fromDate:
                    description: Omit this field to keep current value
                    format: date
                    type: string
                id:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                remark:
                    description: Omit this field to keep current value
                    type: string
                repositoryID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                skillDefinitionID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                typeOfProofID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
            type: object
        UpdateUpdateSkillResultProposalRequest:
            description: Update request object. All fields are optional - omitted fields will not be changed. Only include fields you want to update. Setting a field to null will clear its value (where applicable).
            properties:
                customValues:
                    additionalProperties:
                        type: string
                    description: Custom field values - only declared custom fields for this entity type are allowed (omit to keep current value)
                    example:
                        department: Engineering
                        employeeId: EMP-12345
                        location: Amsterdam
                    type: object
                employeeID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                expirationDate:
                    description: Omit this field to keep current value
                    format: date
                    type: string
                id:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                issueDate:
                    description: Omit this field to keep current value
                    format: date
                    type: string
                remark:
                    description: Omit this field to keep current value
                    type: string
                repositoryID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                scoreID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                typeOfProofID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
            type: object
        UpdateUpdateTypeOfProofProposalRequest:
            description: Update request object. All fields are optional - omitted fields will not be changed. Only include fields you want to update. Setting a field to null will clear its value (where applicable).
            properties:
                activePeriod:
                    description: Date range in PostgreSQL format [start,end) (omit to keep current value)
                    example: '[2023-01-01,2023-12-31)'
                    type: string
                code:
                    description: Omit this field to keep current value
                    type: string
                customValues:
                    additionalProperties:
                        type: string
                    description: Custom field values - only declared custom fields for this entity type are allowed (omit to keep current value)
                    example:
                        department: Engineering
                        employeeId: EMP-12345
                        location: Amsterdam
                    type: object
                description:
                    description: Omit this field to keep current value
                    type: string
                id:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                name:
                    additionalProperties:
                        type: string
                    description: Internationalized string (IString) - object with language codes as keys (omit to keep current value)
                    example:
                        en: English text
                        nl: Nederlandse tekst
                    type: object
                repositoryID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
                skillDefinitionID:
                    description: Omit this field to keep current value
                    format: uuid
                    type: string
            type: object
    securitySchemes:
        apiKey:
            description: "API key for authentication. \n\nInclude your API key in the `X-API-Key` header with every request.\n\nExample:\n```\nX-API-Key: your-api-key-here\n```\n"
            in: header
            name: X-API-Key
            type: apiKey
info:
    contact:
        email: api-support@ag5.com
        name: AG5 API Support
        url: https://support.ag5.com
    description: "# AG5 Skills Management API\n\n## Overview\nThe AG5 Skills Management API provides a comprehensive solution for managing employee\nskills within your organization. This API supports both direct operations and a\nproposal-based workflow for changes that require approval.\n\n## Repositories\n\nThe API allows accessing all your organization's repositories through a single API account. \nWhen requesting data this means that all repositories for the API account will be combined.\nEach response item will contain a reference to the repository it lives in.\nWhen creating a new item a repository reference needs to be provided to indicate where the item should be created.\nTo find the repository references available, use the [List repositories](#get-orgkeepid-repositories) operation.\n\n## API accounts\nAn API account grants access to a number of repositories within your organization.\nEvery API account can have a number of API keys to work with.\nThe API key is used to authenticate against the API service.\nHaving multiple keys allows for easy cycling between API keys on renewal or after revocation.\n\nAn API account is bound to a single environment (aka stage).\nTypically an organization will have an API account for the acceptance environment and an additional one for the production environment.\nFor every additional environment a new API account needs to be requested.\n\n\n## Proposal System\nMany operations in this API use a proposal-based workflow:\n- **Direct Operations**: Read-only operations (GET) directly access current data\n- **Proposal Operations**: Modifications (CREATE, UPDATE, DELETE) create proposals\n- **Automatic vs Manual Approval**: Proposals may be automatically approved based on \n  system configuration or require manual approval\n\nIf a new proposal is added through the API is is not resolved instantaneously even\nif the backend is configured to automatically approve. This means that the Proposal\nwill initially be marked as not approved yet.\n\n## Authentication\nAll API endpoints require authentication using an API key.\nThe API key should be provided as a header in the request.\n\n```\nX-API-Key: <your-api-key>\n```\n\n## Rate Limiting\nAPI calls are rate-limited to ensure fair usage:\n- 1000 requests per hour per organization\n- Rate limit headers are included in all responses\n\n## Pagination\nList endpoints (a GET on a collection) use cursor-based pagination.\nPlease provide the following query parameters (both optional) to control the output:\n- `limit` to control page size (default: 10, max: 1000)\n- `cursor` to control where to start (use the `nextCursor` value from the previous response)\n\nThe following fields are present in the response for list endpoints:\n- `total` to indicate the total items available in the list\n- `count` to indicate the number of items received\n- `limit` to indicate the page size requested\n- `hasMore` to indicate more items are available in following page(s)\n- `nextCursor` to provide the starting point for the next page request\n"
    license:
        name: Commercial
        url: https://ag5.com/terms
    title: AG5 Skills Management API
    version: 0.1.0
    x-logo:
        altText: AG5 Logo
        url: https://www.ag5.com/wp-content/themes/ag5/assets/images/ag5-logo.png
openapi: 3.0.3
paths:
    /{orgkeepID}/customFieldDefinitions:
        get:
            description: |-
                List customFieldDefinitions

                **Filter Syntax:**
                - Filters use exact match only
                - Multiple filters are combined with AND logic
                - Filterable fields: entityDefinitionID
                - Example: `?entityDefinitionID=123e4567-e89b-12d3-a456-426614174000`
            operationId: listCustomFieldDefinition
            parameters:
                - description: Filter by entityDefinitionID (exact match)
                  in: query
                  name: entityDefinitionID
                  schema:
                    type: string
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination. Use the value from the 'nextCursor' field of the previous response.
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListCustomFieldDefinitionResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List customFieldDefinitions
            tags:
                - CustomFieldDefinitions
                - Querying
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
    /{orgkeepID}/customFieldDefinitions/{id}:
        get:
            description: Get a single CustomFieldDefinition by ID
            operationId: getCustomFieldDefinition
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CustomFieldDefinition'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get CustomFieldDefinition
            tags:
                - CustomFieldDefinitions
                - Querying
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
            - description: CustomFieldDefinition ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgkeepID}/createCustomFieldDefinitions:
        get:
            description: |-
                List all createCustomFieldDefinitions proposals. These are proposed changes to create new CustomFieldDefinition records that may be automatically approved or require manual approval depending on system configuration.

                **Filter Syntax:**
                - Filters use exact match only
                - Multiple filters are combined with AND logic
                - Filterable fields: entityDefinitionID
                - Example: `?entityDefinitionID=123e4567-e89b-12d3-a456-426614174000`
            operationId: listCreateCustomFieldDefinitionProposal
            parameters:
                - description: Filter by entityDefinitionID (exact match)
                  in: query
                  name: entityDefinitionID
                  schema:
                    type: string
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination. Use the value from the 'nextCursor' field of the previous response.
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListCreateCustomFieldDefinitionProposalResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List CustomFieldDefinition creation proposals
            tags:
                - CustomFieldDefinitions
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
        post:
            description: Create new proposals to add CustomFieldDefinition records. The proposals may be automatically approved or require manual approval depending on system configuration. You can submit multiple proposals in a single request.
            operationId: createCreateCustomFieldDefinitionProposal
            requestBody:
                content:
                    application/json:
                        schema:
                            items:
                                $ref: '#/components/schemas/CreateCreateCustomFieldDefinitionProposalRequest'
                            maxItems: 100
                            minItems: 1
                            type: array
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/CreateCustomFieldDefinitionProposal'
                                type: array
                    description: Created successfully
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Propose creation of CustomFieldDefinitions
            tags:
                - CustomFieldDefinitions
                - Proposals
    /{orgkeepID}/createCustomFieldDefinitions/{id}:
        get:
            description: Get details of a specific CustomFieldDefinition creation proposal by ID
            operationId: getCreateCustomFieldDefinitionProposal
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateCustomFieldDefinitionProposal'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get CustomFieldDefinition creation proposal
            tags:
                - CustomFieldDefinitions
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
            - description: CreateCustomFieldDefinitionProposal ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgkeepID}/deleteCustomFieldDefinitions:
        get:
            description: List all deleteCustomFieldDefinitions proposals. These are proposed changes to delete CustomFieldDefinition records that may be automatically approved or require manual approval depending on system configuration.
            operationId: listDeleteCustomFieldDefinitionProposal
            parameters:
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination. Use the value from the 'nextCursor' field of the previous response.
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListDeleteCustomFieldDefinitionProposalResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List CustomFieldDefinition deletion proposals
            tags:
                - CustomFieldDefinitions
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
        post:
            description: Create new proposals to delete CustomFieldDefinition records. The proposals may be automatically approved or require manual approval depending on system configuration. You can submit multiple proposals in a single request.
            operationId: createDeleteCustomFieldDefinitionProposal
            requestBody:
                content:
                    application/json:
                        schema:
                            items:
                                $ref: '#/components/schemas/CreateDeleteCustomFieldDefinitionProposalRequest'
                            maxItems: 100
                            minItems: 1
                            type: array
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/DeleteCustomFieldDefinitionProposal'
                                type: array
                    description: Created successfully
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Propose deletion of CustomFieldDefinitions
            tags:
                - CustomFieldDefinitions
                - Proposals
    /{orgkeepID}/deleteCustomFieldDefinitions/{id}:
        get:
            description: Get details of a specific CustomFieldDefinition deletion proposal by ID
            operationId: getDeleteCustomFieldDefinitionProposal
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteCustomFieldDefinitionProposal'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get CustomFieldDefinition deletion proposal
            tags:
                - CustomFieldDefinitions
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
            - description: DeleteCustomFieldDefinitionProposal ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgkeepID}/updateCustomFieldDefinitions:
        get:
            description: |-
                List all updateCustomFieldDefinitions proposals. These are proposed changes to update existing CustomFieldDefinition records that may be automatically approved or require manual approval depending on system configuration.

                **Filter Syntax:**
                - Filters use exact match only
                - Multiple filters are combined with AND logic
                - Filterable fields: entityDefinitionID
                - Example: `?entityDefinitionID=123e4567-e89b-12d3-a456-426614174000`
            operationId: listUpdateCustomFieldDefinitionProposal
            parameters:
                - description: Filter by entityDefinitionID (exact match)
                  in: query
                  name: entityDefinitionID
                  schema:
                    type: string
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination. Use the value from the 'nextCursor' field of the previous response.
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListUpdateCustomFieldDefinitionProposalResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List CustomFieldDefinition update proposals
            tags:
                - CustomFieldDefinitions
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
        post:
            description: Create new proposals to update CustomFieldDefinition records. All fields are optional - omitted fields will not be changed. Only include fields you want to update. Setting a field to null will clear its value (where applicable). The proposals may be automatically approved or require manual approval depending on system configuration. You can submit multiple proposals in a single request.
            operationId: createUpdateCustomFieldDefinitionProposal
            requestBody:
                content:
                    application/json:
                        schema:
                            items:
                                $ref: '#/components/schemas/CreateUpdateCustomFieldDefinitionProposalRequest'
                            maxItems: 100
                            minItems: 1
                            type: array
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/UpdateCustomFieldDefinitionProposal'
                                type: array
                    description: Created successfully
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Propose update of CustomFieldDefinitions
            tags:
                - CustomFieldDefinitions
                - Proposals
    /{orgkeepID}/updateCustomFieldDefinitions/{id}:
        get:
            description: Get details of a specific CustomFieldDefinition update proposal by ID
            operationId: getUpdateCustomFieldDefinitionProposal
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateCustomFieldDefinitionProposal'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get CustomFieldDefinition update proposal
            tags:
                - CustomFieldDefinitions
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
            - description: UpdateCustomFieldDefinitionProposal ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgkeepID}/employeeUnavailabilities:
        get:
            description: |-
                List employeeUnavailabilities

                **Filter Syntax:**
                - Filters use exact match only
                - Multiple filters are combined with AND logic
                - Filterable fields: employeeID
                - Example: `?employeeID=123e4567-e89b-12d3-a456-426614174000`
            operationId: listEmployeeUnavailability
            parameters:
                - description: Filter by employeeID (exact match)
                  in: query
                  name: employeeID
                  schema:
                    type: string
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination. Use the value from the 'nextCursor' field of the previous response.
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListEmployeeUnavailabilityResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List employeeUnavailabilities
            tags:
                - EmployeeUnavailabilities
                - Querying
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
    /{orgkeepID}/employeeUnavailabilities/{id}:
        get:
            description: Get a single EmployeeUnavailability by ID
            operationId: getEmployeeUnavailability
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/EmployeeUnavailability'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get EmployeeUnavailability
            tags:
                - EmployeeUnavailabilities
                - Querying
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
            - description: EmployeeUnavailability ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgkeepID}/createEmployeeUnavailabilities:
        get:
            description: |-
                List all createEmployeeUnavailabilities proposals. These are proposed changes to create new EmployeeUnavailability records that may be automatically approved or require manual approval depending on system configuration.

                **Filter Syntax:**
                - Filters use exact match only
                - Multiple filters are combined with AND logic
                - Filterable fields: employeeID
                - Example: `?employeeID=123e4567-e89b-12d3-a456-426614174000`
            operationId: listCreateEmployeeUnavailabilityProposal
            parameters:
                - description: Filter by employeeID (exact match)
                  in: query
                  name: employeeID
                  schema:
                    type: string
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination. Use the value from the 'nextCursor' field of the previous response.
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListCreateEmployeeUnavailabilityProposalResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List EmployeeUnavailability creation proposals
            tags:
                - EmployeeUnavailabilities
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
        post:
            description: Create new proposals to add EmployeeUnavailability records. The proposals may be automatically approved or require manual approval depending on system configuration. You can submit multiple proposals in a single request.
            operationId: createCreateEmployeeUnavailabilityProposal
            requestBody:
                content:
                    application/json:
                        schema:
                            items:
                                $ref: '#/components/schemas/CreateCreateEmployeeUnavailabilityProposalRequest'
                            maxItems: 100
                            minItems: 1
                            type: array
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/CreateEmployeeUnavailabilityProposal'
                                type: array
                    description: Created successfully
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Propose creation of EmployeeUnavailabilities
            tags:
                - EmployeeUnavailabilities
                - Proposals
    /{orgkeepID}/createEmployeeUnavailabilities/{id}:
        get:
            description: Get details of a specific EmployeeUnavailability creation proposal by ID
            operationId: getCreateEmployeeUnavailabilityProposal
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateEmployeeUnavailabilityProposal'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get EmployeeUnavailability creation proposal
            tags:
                - EmployeeUnavailabilities
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
            - description: CreateEmployeeUnavailabilityProposal ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgkeepID}/deleteEmployeeUnavailabilities:
        get:
            description: List all deleteEmployeeUnavailabilities proposals. These are proposed changes to delete EmployeeUnavailability records that may be automatically approved or require manual approval depending on system configuration.
            operationId: listDeleteEmployeeUnavailabilityProposal
            parameters:
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination. Use the value from the 'nextCursor' field of the previous response.
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListDeleteEmployeeUnavailabilityProposalResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List EmployeeUnavailability deletion proposals
            tags:
                - EmployeeUnavailabilities
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
        post:
            description: Create new proposals to delete EmployeeUnavailability records. The proposals may be automatically approved or require manual approval depending on system configuration. You can submit multiple proposals in a single request.
            operationId: createDeleteEmployeeUnavailabilityProposal
            requestBody:
                content:
                    application/json:
                        schema:
                            items:
                                $ref: '#/components/schemas/CreateDeleteEmployeeUnavailabilityProposalRequest'
                            maxItems: 100
                            minItems: 1
                            type: array
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/DeleteEmployeeUnavailabilityProposal'
                                type: array
                    description: Created successfully
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Propose deletion of EmployeeUnavailabilities
            tags:
                - EmployeeUnavailabilities
                - Proposals
    /{orgkeepID}/deleteEmployeeUnavailabilities/{id}:
        get:
            description: Get details of a specific EmployeeUnavailability deletion proposal by ID
            operationId: getDeleteEmployeeUnavailabilityProposal
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteEmployeeUnavailabilityProposal'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get EmployeeUnavailability deletion proposal
            tags:
                - EmployeeUnavailabilities
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
            - description: DeleteEmployeeUnavailabilityProposal ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgkeepID}/updateEmployeeUnavailabilities:
        get:
            description: |-
                List all updateEmployeeUnavailabilities proposals. These are proposed changes to update existing EmployeeUnavailability records that may be automatically approved or require manual approval depending on system configuration.

                **Filter Syntax:**
                - Filters use exact match only
                - Multiple filters are combined with AND logic
                - Filterable fields: employeeID
                - Example: `?employeeID=123e4567-e89b-12d3-a456-426614174000`
            operationId: listUpdateEmployeeUnavailabilityProposal
            parameters:
                - description: Filter by employeeID (exact match)
                  in: query
                  name: employeeID
                  schema:
                    type: string
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination. Use the value from the 'nextCursor' field of the previous response.
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListUpdateEmployeeUnavailabilityProposalResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List EmployeeUnavailability update proposals
            tags:
                - EmployeeUnavailabilities
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
        post:
            description: Create new proposals to update EmployeeUnavailability records. All fields are optional - omitted fields will not be changed. Only include fields you want to update. Setting a field to null will clear its value (where applicable). The proposals may be automatically approved or require manual approval depending on system configuration. You can submit multiple proposals in a single request.
            operationId: createUpdateEmployeeUnavailabilityProposal
            requestBody:
                content:
                    application/json:
                        schema:
                            items:
                                $ref: '#/components/schemas/CreateUpdateEmployeeUnavailabilityProposalRequest'
                            maxItems: 100
                            minItems: 1
                            type: array
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/UpdateEmployeeUnavailabilityProposal'
                                type: array
                    description: Created successfully
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Propose update of EmployeeUnavailabilities
            tags:
                - EmployeeUnavailabilities
                - Proposals
    /{orgkeepID}/updateEmployeeUnavailabilities/{id}:
        get:
            description: Get details of a specific EmployeeUnavailability update proposal by ID
            operationId: getUpdateEmployeeUnavailabilityProposal
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateEmployeeUnavailabilityProposal'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get EmployeeUnavailability update proposal
            tags:
                - EmployeeUnavailabilities
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
            - description: UpdateEmployeeUnavailabilityProposal ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgkeepID}/employees:
        get:
            description: List employees
            operationId: listEmployee
            parameters:
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination. Use the value from the 'nextCursor' field of the previous response.
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListEmployeeResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List employees
            tags:
                - Employees
                - Querying
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
    /{orgkeepID}/employees/{id}:
        get:
            description: Get a single Employee by ID
            operationId: getEmployee
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Employee'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get Employee
            tags:
                - Employees
                - Querying
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
            - description: Employee ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgkeepID}/createEmployees:
        get:
            description: List all createEmployees proposals. These are proposed changes to create new Employee records that may be automatically approved or require manual approval depending on system configuration.
            operationId: listCreateEmployeeProposal
            parameters:
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination. Use the value from the 'nextCursor' field of the previous response.
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListCreateEmployeeProposalResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List Employee creation proposals
            tags:
                - Employees
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
        post:
            description: Create new proposals to add Employee records. The proposals may be automatically approved or require manual approval depending on system configuration. You can submit multiple proposals in a single request.
            operationId: createCreateEmployeeProposal
            requestBody:
                content:
                    application/json:
                        schema:
                            items:
                                $ref: '#/components/schemas/CreateCreateEmployeeProposalRequest'
                            maxItems: 100
                            minItems: 1
                            type: array
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/CreateEmployeeProposal'
                                type: array
                    description: Created successfully
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Propose creation of Employees
            tags:
                - Employees
                - Proposals
    /{orgkeepID}/createEmployees/{id}:
        get:
            description: Get details of a specific Employee creation proposal by ID
            operationId: getCreateEmployeeProposal
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateEmployeeProposal'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get Employee creation proposal
            tags:
                - Employees
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
            - description: CreateEmployeeProposal ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgkeepID}/deleteEmployees:
        get:
            description: List all deleteEmployees proposals. These are proposed changes to delete Employee records that may be automatically approved or require manual approval depending on system configuration.
            operationId: listDeleteEmployeeProposal
            parameters:
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination. Use the value from the 'nextCursor' field of the previous response.
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListDeleteEmployeeProposalResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List Employee deletion proposals
            tags:
                - Employees
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
        post:
            description: Create new proposals to delete Employee records. The proposals may be automatically approved or require manual approval depending on system configuration. You can submit multiple proposals in a single request.
            operationId: createDeleteEmployeeProposal
            requestBody:
                content:
                    application/json:
                        schema:
                            items:
                                $ref: '#/components/schemas/CreateDeleteEmployeeProposalRequest'
                            maxItems: 100
                            minItems: 1
                            type: array
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/DeleteEmployeeProposal'
                                type: array
                    description: Created successfully
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Propose deletion of Employees
            tags:
                - Employees
                - Proposals
    /{orgkeepID}/deleteEmployees/{id}:
        get:
            description: Get details of a specific Employee deletion proposal by ID
            operationId: getDeleteEmployeeProposal
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteEmployeeProposal'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get Employee deletion proposal
            tags:
                - Employees
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
            - description: DeleteEmployeeProposal ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgkeepID}/updateEmployees:
        get:
            description: List all updateEmployees proposals. These are proposed changes to update existing Employee records that may be automatically approved or require manual approval depending on system configuration.
            operationId: listUpdateEmployeeProposal
            parameters:
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination. Use the value from the 'nextCursor' field of the previous response.
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListUpdateEmployeeProposalResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List Employee update proposals
            tags:
                - Employees
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
        post:
            description: Create new proposals to update Employee records. All fields are optional - omitted fields will not be changed. Only include fields you want to update. Setting a field to null will clear its value (where applicable). The proposals may be automatically approved or require manual approval depending on system configuration. You can submit multiple proposals in a single request.
            operationId: createUpdateEmployeeProposal
            requestBody:
                content:
                    application/json:
                        schema:
                            items:
                                $ref: '#/components/schemas/CreateUpdateEmployeeProposalRequest'
                            maxItems: 100
                            minItems: 1
                            type: array
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/UpdateEmployeeProposal'
                                type: array
                    description: Created successfully
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Propose update of Employees
            tags:
                - Employees
                - Proposals
    /{orgkeepID}/updateEmployees/{id}:
        get:
            description: Get details of a specific Employee update proposal by ID
            operationId: getUpdateEmployeeProposal
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateEmployeeProposal'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get Employee update proposal
            tags:
                - Employees
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
            - description: UpdateEmployeeProposal ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgkeepID}/employmentContractTypes:
        get:
            description: List employmentContractTypes
            operationId: listEmploymentContractType
            parameters:
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination. Use the value from the 'nextCursor' field of the previous response.
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListEmploymentContractTypeResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List employmentContractTypes
            tags:
                - EmploymentContractTypes
                - Querying
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
    /{orgkeepID}/employmentContractTypes/{id}:
        get:
            description: Get a single EmploymentContractType by ID
            operationId: getEmploymentContractType
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/EmploymentContractType'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get EmploymentContractType
            tags:
                - EmploymentContractTypes
                - Querying
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
            - description: EmploymentContractType ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgkeepID}/createEmploymentContractTypes:
        get:
            description: List all createEmploymentContractTypes proposals. These are proposed changes to create new EmploymentContractType records that may be automatically approved or require manual approval depending on system configuration.
            operationId: listCreateEmploymentContractTypeProposal
            parameters:
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination. Use the value from the 'nextCursor' field of the previous response.
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListCreateEmploymentContractTypeProposalResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List EmploymentContractType creation proposals
            tags:
                - EmploymentContractTypes
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
        post:
            description: Create new proposals to add EmploymentContractType records. The proposals may be automatically approved or require manual approval depending on system configuration. You can submit multiple proposals in a single request.
            operationId: createCreateEmploymentContractTypeProposal
            requestBody:
                content:
                    application/json:
                        schema:
                            items:
                                $ref: '#/components/schemas/CreateCreateEmploymentContractTypeProposalRequest'
                            maxItems: 100
                            minItems: 1
                            type: array
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/CreateEmploymentContractTypeProposal'
                                type: array
                    description: Created successfully
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Propose creation of EmploymentContractTypes
            tags:
                - EmploymentContractTypes
                - Proposals
    /{orgkeepID}/createEmploymentContractTypes/{id}:
        get:
            description: Get details of a specific EmploymentContractType creation proposal by ID
            operationId: getCreateEmploymentContractTypeProposal
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateEmploymentContractTypeProposal'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get EmploymentContractType creation proposal
            tags:
                - EmploymentContractTypes
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
            - description: CreateEmploymentContractTypeProposal ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgkeepID}/deleteEmploymentContractTypes:
        get:
            description: List all deleteEmploymentContractTypes proposals. These are proposed changes to delete EmploymentContractType records that may be automatically approved or require manual approval depending on system configuration.
            operationId: listDeleteEmploymentContractTypeProposal
            parameters:
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination. Use the value from the 'nextCursor' field of the previous response.
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListDeleteEmploymentContractTypeProposalResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List EmploymentContractType deletion proposals
            tags:
                - EmploymentContractTypes
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
        post:
            description: Create new proposals to delete EmploymentContractType records. The proposals may be automatically approved or require manual approval depending on system configuration. You can submit multiple proposals in a single request.
            operationId: createDeleteEmploymentContractTypeProposal
            requestBody:
                content:
                    application/json:
                        schema:
                            items:
                                $ref: '#/components/schemas/CreateDeleteEmploymentContractTypeProposalRequest'
                            maxItems: 100
                            minItems: 1
                            type: array
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/DeleteEmploymentContractTypeProposal'
                                type: array
                    description: Created successfully
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Propose deletion of EmploymentContractTypes
            tags:
                - EmploymentContractTypes
                - Proposals
    /{orgkeepID}/deleteEmploymentContractTypes/{id}:
        get:
            description: Get details of a specific EmploymentContractType deletion proposal by ID
            operationId: getDeleteEmploymentContractTypeProposal
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteEmploymentContractTypeProposal'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get EmploymentContractType deletion proposal
            tags:
                - EmploymentContractTypes
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
            - description: DeleteEmploymentContractTypeProposal ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgkeepID}/updateEmploymentContractTypes:
        get:
            description: List all updateEmploymentContractTypes proposals. These are proposed changes to update existing EmploymentContractType records that may be automatically approved or require manual approval depending on system configuration.
            operationId: listUpdateEmploymentContractTypeProposal
            parameters:
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination. Use the value from the 'nextCursor' field of the previous response.
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListUpdateEmploymentContractTypeProposalResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List EmploymentContractType update proposals
            tags:
                - EmploymentContractTypes
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
        post:
            description: Create new proposals to update EmploymentContractType records. All fields are optional - omitted fields will not be changed. Only include fields you want to update. Setting a field to null will clear its value (where applicable). The proposals may be automatically approved or require manual approval depending on system configuration. You can submit multiple proposals in a single request.
            operationId: createUpdateEmploymentContractTypeProposal
            requestBody:
                content:
                    application/json:
                        schema:
                            items:
                                $ref: '#/components/schemas/CreateUpdateEmploymentContractTypeProposalRequest'
                            maxItems: 100
                            minItems: 1
                            type: array
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/UpdateEmploymentContractTypeProposal'
                                type: array
                    description: Created successfully
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Propose update of EmploymentContractTypes
            tags:
                - EmploymentContractTypes
                - Proposals
    /{orgkeepID}/updateEmploymentContractTypes/{id}:
        get:
            description: Get details of a specific EmploymentContractType update proposal by ID
            operationId: getUpdateEmploymentContractTypeProposal
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateEmploymentContractTypeProposal'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get EmploymentContractType update proposal
            tags:
                - EmploymentContractTypes
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
            - description: UpdateEmploymentContractTypeProposal ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgkeepID}/employmentContracts:
        get:
            description: |-
                List employmentContracts

                **Filter Syntax:**
                - Filters use exact match only
                - Multiple filters are combined with AND logic
                - Filterable fields: contractTypeID, employeeID
                - Example: `?contractTypeID=123e4567-e89b-12d3-a456-426614174000&employeeID=123e4567-e89b-12d3-a456-426614174000`
            operationId: listEmploymentContract
            parameters:
                - description: Filter by contractTypeID (exact match)
                  in: query
                  name: contractTypeID
                  schema:
                    type: string
                - description: Filter by employeeID (exact match)
                  in: query
                  name: employeeID
                  schema:
                    type: string
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination. Use the value from the 'nextCursor' field of the previous response.
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListEmploymentContractResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List employmentContracts
            tags:
                - EmploymentContracts
                - Querying
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
    /{orgkeepID}/employmentContracts/{id}:
        get:
            description: Get a single EmploymentContract by ID
            operationId: getEmploymentContract
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/EmploymentContract'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get EmploymentContract
            tags:
                - EmploymentContracts
                - Querying
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
            - description: EmploymentContract ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgkeepID}/createEmploymentContracts:
        get:
            description: |-
                List all createEmploymentContracts proposals. These are proposed changes to create new EmploymentContract records that may be automatically approved or require manual approval depending on system configuration.

                **Filter Syntax:**
                - Filters use exact match only
                - Multiple filters are combined with AND logic
                - Filterable fields: contractTypeID, employeeID
                - Example: `?contractTypeID=123e4567-e89b-12d3-a456-426614174000&employeeID=123e4567-e89b-12d3-a456-426614174000`
            operationId: listCreateEmploymentContractProposal
            parameters:
                - description: Filter by contractTypeID (exact match)
                  in: query
                  name: contractTypeID
                  schema:
                    type: string
                - description: Filter by employeeID (exact match)
                  in: query
                  name: employeeID
                  schema:
                    type: string
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination. Use the value from the 'nextCursor' field of the previous response.
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListCreateEmploymentContractProposalResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List EmploymentContract creation proposals
            tags:
                - EmploymentContracts
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
        post:
            description: Create new proposals to add EmploymentContract records. The proposals may be automatically approved or require manual approval depending on system configuration. You can submit multiple proposals in a single request.
            operationId: createCreateEmploymentContractProposal
            requestBody:
                content:
                    application/json:
                        schema:
                            items:
                                $ref: '#/components/schemas/CreateCreateEmploymentContractProposalRequest'
                            maxItems: 100
                            minItems: 1
                            type: array
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/CreateEmploymentContractProposal'
                                type: array
                    description: Created successfully
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Propose creation of EmploymentContracts
            tags:
                - EmploymentContracts
                - Proposals
    /{orgkeepID}/createEmploymentContracts/{id}:
        get:
            description: Get details of a specific EmploymentContract creation proposal by ID
            operationId: getCreateEmploymentContractProposal
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateEmploymentContractProposal'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get EmploymentContract creation proposal
            tags:
                - EmploymentContracts
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
            - description: CreateEmploymentContractProposal ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgkeepID}/deleteEmploymentContracts:
        get:
            description: List all deleteEmploymentContracts proposals. These are proposed changes to delete EmploymentContract records that may be automatically approved or require manual approval depending on system configuration.
            operationId: listDeleteEmploymentContractProposal
            parameters:
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination. Use the value from the 'nextCursor' field of the previous response.
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListDeleteEmploymentContractProposalResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List EmploymentContract deletion proposals
            tags:
                - EmploymentContracts
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
        post:
            description: Create new proposals to delete EmploymentContract records. The proposals may be automatically approved or require manual approval depending on system configuration. You can submit multiple proposals in a single request.
            operationId: createDeleteEmploymentContractProposal
            requestBody:
                content:
                    application/json:
                        schema:
                            items:
                                $ref: '#/components/schemas/CreateDeleteEmploymentContractProposalRequest'
                            maxItems: 100
                            minItems: 1
                            type: array
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/DeleteEmploymentContractProposal'
                                type: array
                    description: Created successfully
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Propose deletion of EmploymentContracts
            tags:
                - EmploymentContracts
                - Proposals
    /{orgkeepID}/deleteEmploymentContracts/{id}:
        get:
            description: Get details of a specific EmploymentContract deletion proposal by ID
            operationId: getDeleteEmploymentContractProposal
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteEmploymentContractProposal'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get EmploymentContract deletion proposal
            tags:
                - EmploymentContracts
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
            - description: DeleteEmploymentContractProposal ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgkeepID}/updateEmploymentContracts:
        get:
            description: |-
                List all updateEmploymentContracts proposals. These are proposed changes to update existing EmploymentContract records that may be automatically approved or require manual approval depending on system configuration.

                **Filter Syntax:**
                - Filters use exact match only
                - Multiple filters are combined with AND logic
                - Filterable fields: contractTypeID, employeeID
                - Example: `?contractTypeID=123e4567-e89b-12d3-a456-426614174000&employeeID=123e4567-e89b-12d3-a456-426614174000`
            operationId: listUpdateEmploymentContractProposal
            parameters:
                - description: Filter by contractTypeID (exact match)
                  in: query
                  name: contractTypeID
                  schema:
                    type: string
                - description: Filter by employeeID (exact match)
                  in: query
                  name: employeeID
                  schema:
                    type: string
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination. Use the value from the 'nextCursor' field of the previous response.
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListUpdateEmploymentContractProposalResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List EmploymentContract update proposals
            tags:
                - EmploymentContracts
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
        post:
            description: Create new proposals to update EmploymentContract records. All fields are optional - omitted fields will not be changed. Only include fields you want to update. Setting a field to null will clear its value (where applicable). The proposals may be automatically approved or require manual approval depending on system configuration. You can submit multiple proposals in a single request.
            operationId: createUpdateEmploymentContractProposal
            requestBody:
                content:
                    application/json:
                        schema:
                            items:
                                $ref: '#/components/schemas/CreateUpdateEmploymentContractProposalRequest'
                            maxItems: 100
                            minItems: 1
                            type: array
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/UpdateEmploymentContractProposal'
                                type: array
                    description: Created successfully
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Propose update of EmploymentContracts
            tags:
                - EmploymentContracts
                - Proposals
    /{orgkeepID}/updateEmploymentContracts/{id}:
        get:
            description: Get details of a specific EmploymentContract update proposal by ID
            operationId: getUpdateEmploymentContractProposal
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateEmploymentContractProposal'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get EmploymentContract update proposal
            tags:
                - EmploymentContracts
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
            - description: UpdateEmploymentContractProposal ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgkeepID}/employmentRelationTypes:
        get:
            description: List employmentRelationTypes
            operationId: listEmploymentRelationType
            parameters:
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination. Use the value from the 'nextCursor' field of the previous response.
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListEmploymentRelationTypeResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List employmentRelationTypes
            tags:
                - EmploymentRelationTypes
                - Querying
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
    /{orgkeepID}/employmentRelationTypes/{id}:
        get:
            description: Get a single EmploymentRelationType by ID
            operationId: getEmploymentRelationType
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/EmploymentRelationType'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get EmploymentRelationType
            tags:
                - EmploymentRelationTypes
                - Querying
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
            - description: EmploymentRelationType ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgkeepID}/createEmploymentRelationTypes:
        get:
            description: List all createEmploymentRelationTypes proposals. These are proposed changes to create new EmploymentRelationType records that may be automatically approved or require manual approval depending on system configuration.
            operationId: listCreateEmploymentRelationTypeProposal
            parameters:
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination. Use the value from the 'nextCursor' field of the previous response.
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListCreateEmploymentRelationTypeProposalResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List EmploymentRelationType creation proposals
            tags:
                - EmploymentRelationTypes
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
        post:
            description: Create new proposals to add EmploymentRelationType records. The proposals may be automatically approved or require manual approval depending on system configuration. You can submit multiple proposals in a single request.
            operationId: createCreateEmploymentRelationTypeProposal
            requestBody:
                content:
                    application/json:
                        schema:
                            items:
                                $ref: '#/components/schemas/CreateCreateEmploymentRelationTypeProposalRequest'
                            maxItems: 100
                            minItems: 1
                            type: array
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/CreateEmploymentRelationTypeProposal'
                                type: array
                    description: Created successfully
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Propose creation of EmploymentRelationTypes
            tags:
                - EmploymentRelationTypes
                - Proposals
    /{orgkeepID}/createEmploymentRelationTypes/{id}:
        get:
            description: Get details of a specific EmploymentRelationType creation proposal by ID
            operationId: getCreateEmploymentRelationTypeProposal
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateEmploymentRelationTypeProposal'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get EmploymentRelationType creation proposal
            tags:
                - EmploymentRelationTypes
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
            - description: CreateEmploymentRelationTypeProposal ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgkeepID}/deleteEmploymentRelationTypes:
        get:
            description: List all deleteEmploymentRelationTypes proposals. These are proposed changes to delete EmploymentRelationType records that may be automatically approved or require manual approval depending on system configuration.
            operationId: listDeleteEmploymentRelationTypeProposal
            parameters:
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination. Use the value from the 'nextCursor' field of the previous response.
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListDeleteEmploymentRelationTypeProposalResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List EmploymentRelationType deletion proposals
            tags:
                - EmploymentRelationTypes
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
        post:
            description: Create new proposals to delete EmploymentRelationType records. The proposals may be automatically approved or require manual approval depending on system configuration. You can submit multiple proposals in a single request.
            operationId: createDeleteEmploymentRelationTypeProposal
            requestBody:
                content:
                    application/json:
                        schema:
                            items:
                                $ref: '#/components/schemas/CreateDeleteEmploymentRelationTypeProposalRequest'
                            maxItems: 100
                            minItems: 1
                            type: array
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/DeleteEmploymentRelationTypeProposal'
                                type: array
                    description: Created successfully
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Propose deletion of EmploymentRelationTypes
            tags:
                - EmploymentRelationTypes
                - Proposals
    /{orgkeepID}/deleteEmploymentRelationTypes/{id}:
        get:
            description: Get details of a specific EmploymentRelationType deletion proposal by ID
            operationId: getDeleteEmploymentRelationTypeProposal
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteEmploymentRelationTypeProposal'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get EmploymentRelationType deletion proposal
            tags:
                - EmploymentRelationTypes
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
            - description: DeleteEmploymentRelationTypeProposal ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgkeepID}/updateEmploymentRelationTypes:
        get:
            description: List all updateEmploymentRelationTypes proposals. These are proposed changes to update existing EmploymentRelationType records that may be automatically approved or require manual approval depending on system configuration.
            operationId: listUpdateEmploymentRelationTypeProposal
            parameters:
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination. Use the value from the 'nextCursor' field of the previous response.
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListUpdateEmploymentRelationTypeProposalResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List EmploymentRelationType update proposals
            tags:
                - EmploymentRelationTypes
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
        post:
            description: Create new proposals to update EmploymentRelationType records. All fields are optional - omitted fields will not be changed. Only include fields you want to update. Setting a field to null will clear its value (where applicable). The proposals may be automatically approved or require manual approval depending on system configuration. You can submit multiple proposals in a single request.
            operationId: createUpdateEmploymentRelationTypeProposal
            requestBody:
                content:
                    application/json:
                        schema:
                            items:
                                $ref: '#/components/schemas/CreateUpdateEmploymentRelationTypeProposalRequest'
                            maxItems: 100
                            minItems: 1
                            type: array
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/UpdateEmploymentRelationTypeProposal'
                                type: array
                    description: Created successfully
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Propose update of EmploymentRelationTypes
            tags:
                - EmploymentRelationTypes
                - Proposals
    /{orgkeepID}/updateEmploymentRelationTypes/{id}:
        get:
            description: Get details of a specific EmploymentRelationType update proposal by ID
            operationId: getUpdateEmploymentRelationTypeProposal
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateEmploymentRelationTypeProposal'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get EmploymentRelationType update proposal
            tags:
                - EmploymentRelationTypes
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
            - description: UpdateEmploymentRelationTypeProposal ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgkeepID}/employmentRelations:
        get:
            description: |-
                List employmentRelations

                **Filter Syntax:**
                - Filters use exact match only
                - Multiple filters are combined with AND logic
                - Filterable fields: toEmployeeID, fromEmployeeID, relationTypeID
                - Example: `?toEmployeeID=123e4567-e89b-12d3-a456-426614174000&fromEmployeeID=123e4567-e89b-12d3-a456-426614174000`
            operationId: listEmploymentRelation
            parameters:
                - description: Filter by toEmployeeID (exact match)
                  in: query
                  name: toEmployeeID
                  schema:
                    type: string
                - description: Filter by fromEmployeeID (exact match)
                  in: query
                  name: fromEmployeeID
                  schema:
                    type: string
                - description: Filter by relationTypeID (exact match)
                  in: query
                  name: relationTypeID
                  schema:
                    type: string
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination. Use the value from the 'nextCursor' field of the previous response.
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListEmploymentRelationResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List employmentRelations
            tags:
                - EmploymentRelations
                - Querying
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
    /{orgkeepID}/employmentRelations/{id}:
        get:
            description: Get a single EmploymentRelation by ID
            operationId: getEmploymentRelation
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/EmploymentRelation'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get EmploymentRelation
            tags:
                - EmploymentRelations
                - Querying
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
            - description: EmploymentRelation ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgkeepID}/createEmploymentRelations:
        get:
            description: |-
                List all createEmploymentRelations proposals. These are proposed changes to create new EmploymentRelation records that may be automatically approved or require manual approval depending on system configuration.

                **Filter Syntax:**
                - Filters use exact match only
                - Multiple filters are combined with AND logic
                - Filterable fields: toEmployeeID, fromEmployeeID, relationTypeID
                - Example: `?toEmployeeID=123e4567-e89b-12d3-a456-426614174000&fromEmployeeID=123e4567-e89b-12d3-a456-426614174000`
            operationId: listCreateEmploymentRelationProposal
            parameters:
                - description: Filter by toEmployeeID (exact match)
                  in: query
                  name: toEmployeeID
                  schema:
                    type: string
                - description: Filter by fromEmployeeID (exact match)
                  in: query
                  name: fromEmployeeID
                  schema:
                    type: string
                - description: Filter by relationTypeID (exact match)
                  in: query
                  name: relationTypeID
                  schema:
                    type: string
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination. Use the value from the 'nextCursor' field of the previous response.
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListCreateEmploymentRelationProposalResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List EmploymentRelation creation proposals
            tags:
                - EmploymentRelations
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
        post:
            description: Create new proposals to add EmploymentRelation records. The proposals may be automatically approved or require manual approval depending on system configuration. You can submit multiple proposals in a single request.
            operationId: createCreateEmploymentRelationProposal
            requestBody:
                content:
                    application/json:
                        schema:
                            items:
                                $ref: '#/components/schemas/CreateCreateEmploymentRelationProposalRequest'
                            maxItems: 100
                            minItems: 1
                            type: array
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/CreateEmploymentRelationProposal'
                                type: array
                    description: Created successfully
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Propose creation of EmploymentRelations
            tags:
                - EmploymentRelations
                - Proposals
    /{orgkeepID}/createEmploymentRelations/{id}:
        get:
            description: Get details of a specific EmploymentRelation creation proposal by ID
            operationId: getCreateEmploymentRelationProposal
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateEmploymentRelationProposal'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get EmploymentRelation creation proposal
            tags:
                - EmploymentRelations
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
            - description: CreateEmploymentRelationProposal ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgkeepID}/deleteEmploymentRelations:
        get:
            description: List all deleteEmploymentRelations proposals. These are proposed changes to delete EmploymentRelation records that may be automatically approved or require manual approval depending on system configuration.
            operationId: listDeleteEmploymentRelationProposal
            parameters:
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination. Use the value from the 'nextCursor' field of the previous response.
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListDeleteEmploymentRelationProposalResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List EmploymentRelation deletion proposals
            tags:
                - EmploymentRelations
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
        post:
            description: Create new proposals to delete EmploymentRelation records. The proposals may be automatically approved or require manual approval depending on system configuration. You can submit multiple proposals in a single request.
            operationId: createDeleteEmploymentRelationProposal
            requestBody:
                content:
                    application/json:
                        schema:
                            items:
                                $ref: '#/components/schemas/CreateDeleteEmploymentRelationProposalRequest'
                            maxItems: 100
                            minItems: 1
                            type: array
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/DeleteEmploymentRelationProposal'
                                type: array
                    description: Created successfully
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Propose deletion of EmploymentRelations
            tags:
                - EmploymentRelations
                - Proposals
    /{orgkeepID}/deleteEmploymentRelations/{id}:
        get:
            description: Get details of a specific EmploymentRelation deletion proposal by ID
            operationId: getDeleteEmploymentRelationProposal
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteEmploymentRelationProposal'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get EmploymentRelation deletion proposal
            tags:
                - EmploymentRelations
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
            - description: DeleteEmploymentRelationProposal ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgkeepID}/updateEmploymentRelations:
        get:
            description: |-
                List all updateEmploymentRelations proposals. These are proposed changes to update existing EmploymentRelation records that may be automatically approved or require manual approval depending on system configuration.

                **Filter Syntax:**
                - Filters use exact match only
                - Multiple filters are combined with AND logic
                - Filterable fields: toEmployeeID, fromEmployeeID, relationTypeID
                - Example: `?toEmployeeID=123e4567-e89b-12d3-a456-426614174000&fromEmployeeID=123e4567-e89b-12d3-a456-426614174000`
            operationId: listUpdateEmploymentRelationProposal
            parameters:
                - description: Filter by toEmployeeID (exact match)
                  in: query
                  name: toEmployeeID
                  schema:
                    type: string
                - description: Filter by fromEmployeeID (exact match)
                  in: query
                  name: fromEmployeeID
                  schema:
                    type: string
                - description: Filter by relationTypeID (exact match)
                  in: query
                  name: relationTypeID
                  schema:
                    type: string
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination. Use the value from the 'nextCursor' field of the previous response.
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListUpdateEmploymentRelationProposalResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List EmploymentRelation update proposals
            tags:
                - EmploymentRelations
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
        post:
            description: Create new proposals to update EmploymentRelation records. All fields are optional - omitted fields will not be changed. Only include fields you want to update. Setting a field to null will clear its value (where applicable). The proposals may be automatically approved or require manual approval depending on system configuration. You can submit multiple proposals in a single request.
            operationId: createUpdateEmploymentRelationProposal
            requestBody:
                content:
                    application/json:
                        schema:
                            items:
                                $ref: '#/components/schemas/CreateUpdateEmploymentRelationProposalRequest'
                            maxItems: 100
                            minItems: 1
                            type: array
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/UpdateEmploymentRelationProposal'
                                type: array
                    description: Created successfully
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Propose update of EmploymentRelations
            tags:
                - EmploymentRelations
                - Proposals
    /{orgkeepID}/updateEmploymentRelations/{id}:
        get:
            description: Get details of a specific EmploymentRelation update proposal by ID
            operationId: getUpdateEmploymentRelationProposal
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateEmploymentRelationProposal'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get EmploymentRelation update proposal
            tags:
                - EmploymentRelations
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
            - description: UpdateEmploymentRelationProposal ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgkeepID}/entityDefinitions:
        get:
            description: List entityDefinitions
            operationId: listEntityDefinition
            parameters:
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination. Use the value from the 'nextCursor' field of the previous response.
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListEntityDefinitionResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List entityDefinitions
            tags:
                - EntityDefinitions
                - Querying
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
    /{orgkeepID}/entityDefinitions/{id}:
        get:
            description: Get a single EntityDefinition by ID
            operationId: getEntityDefinition
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/EntityDefinition'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get EntityDefinition
            tags:
                - EntityDefinitions
                - Querying
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
            - description: EntityDefinition ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgkeepID}/groupingTypes:
        get:
            description: List groupingTypes
            operationId: listGroupingType
            parameters:
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination. Use the value from the 'nextCursor' field of the previous response.
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListGroupingTypeResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List groupingTypes
            tags:
                - GroupingTypes
                - Querying
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
    /{orgkeepID}/groupingTypes/{id}:
        get:
            description: Get a single GroupingType by ID
            operationId: getGroupingType
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GroupingType'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get GroupingType
            tags:
                - GroupingTypes
                - Querying
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
            - description: GroupingType ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgkeepID}/createGroupingTypes:
        get:
            description: List all createGroupingTypes proposals. These are proposed changes to create new GroupingType records that may be automatically approved or require manual approval depending on system configuration.
            operationId: listCreateGroupingTypeProposal
            parameters:
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination. Use the value from the 'nextCursor' field of the previous response.
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListCreateGroupingTypeProposalResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List GroupingType creation proposals
            tags:
                - GroupingTypes
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
        post:
            description: Create new proposals to add GroupingType records. The proposals may be automatically approved or require manual approval depending on system configuration. You can submit multiple proposals in a single request.
            operationId: createCreateGroupingTypeProposal
            requestBody:
                content:
                    application/json:
                        schema:
                            items:
                                $ref: '#/components/schemas/CreateCreateGroupingTypeProposalRequest'
                            maxItems: 100
                            minItems: 1
                            type: array
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/CreateGroupingTypeProposal'
                                type: array
                    description: Created successfully
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Propose creation of GroupingTypes
            tags:
                - GroupingTypes
                - Proposals
    /{orgkeepID}/createGroupingTypes/{id}:
        get:
            description: Get details of a specific GroupingType creation proposal by ID
            operationId: getCreateGroupingTypeProposal
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateGroupingTypeProposal'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get GroupingType creation proposal
            tags:
                - GroupingTypes
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
            - description: CreateGroupingTypeProposal ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgkeepID}/deleteGroupingTypes:
        get:
            description: List all deleteGroupingTypes proposals. These are proposed changes to delete GroupingType records that may be automatically approved or require manual approval depending on system configuration.
            operationId: listDeleteGroupingTypeProposal
            parameters:
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination. Use the value from the 'nextCursor' field of the previous response.
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListDeleteGroupingTypeProposalResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List GroupingType deletion proposals
            tags:
                - GroupingTypes
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
        post:
            description: Create new proposals to delete GroupingType records. The proposals may be automatically approved or require manual approval depending on system configuration. You can submit multiple proposals in a single request.
            operationId: createDeleteGroupingTypeProposal
            requestBody:
                content:
                    application/json:
                        schema:
                            items:
                                $ref: '#/components/schemas/CreateDeleteGroupingTypeProposalRequest'
                            maxItems: 100
                            minItems: 1
                            type: array
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/DeleteGroupingTypeProposal'
                                type: array
                    description: Created successfully
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Propose deletion of GroupingTypes
            tags:
                - GroupingTypes
                - Proposals
    /{orgkeepID}/deleteGroupingTypes/{id}:
        get:
            description: Get details of a specific GroupingType deletion proposal by ID
            operationId: getDeleteGroupingTypeProposal
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteGroupingTypeProposal'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get GroupingType deletion proposal
            tags:
                - GroupingTypes
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
            - description: DeleteGroupingTypeProposal ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgkeepID}/updateGroupingTypes:
        get:
            description: List all updateGroupingTypes proposals. These are proposed changes to update existing GroupingType records that may be automatically approved or require manual approval depending on system configuration.
            operationId: listUpdateGroupingTypeProposal
            parameters:
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination. Use the value from the 'nextCursor' field of the previous response.
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListUpdateGroupingTypeProposalResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List GroupingType update proposals
            tags:
                - GroupingTypes
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
        post:
            description: Create new proposals to update GroupingType records. All fields are optional - omitted fields will not be changed. Only include fields you want to update. Setting a field to null will clear its value (where applicable). The proposals may be automatically approved or require manual approval depending on system configuration. You can submit multiple proposals in a single request.
            operationId: createUpdateGroupingTypeProposal
            requestBody:
                content:
                    application/json:
                        schema:
                            items:
                                $ref: '#/components/schemas/CreateUpdateGroupingTypeProposalRequest'
                            maxItems: 100
                            minItems: 1
                            type: array
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/UpdateGroupingTypeProposal'
                                type: array
                    description: Created successfully
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Propose update of GroupingTypes
            tags:
                - GroupingTypes
                - Proposals
    /{orgkeepID}/updateGroupingTypes/{id}:
        get:
            description: Get details of a specific GroupingType update proposal by ID
            operationId: getUpdateGroupingTypeProposal
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateGroupingTypeProposal'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get GroupingType update proposal
            tags:
                - GroupingTypes
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
            - description: UpdateGroupingTypeProposal ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgkeepID}/groupings:
        get:
            description: |-
                List groupings

                **Filter Syntax:**
                - Filters use exact match only
                - Multiple filters are combined with AND logic
                - Filterable fields: typeID, definedInGroupingID
                - Example: `?typeID=123e4567-e89b-12d3-a456-426614174000&definedInGroupingID=123e4567-e89b-12d3-a456-426614174000`
            operationId: listGrouping
            parameters:
                - description: Filter by typeID (exact match)
                  in: query
                  name: typeID
                  schema:
                    type: string
                - description: Filter by definedInGroupingID (exact match)
                  in: query
                  name: definedInGroupingID
                  schema:
                    type: string
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination. Use the value from the 'nextCursor' field of the previous response.
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListGroupingResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List groupings
            tags:
                - Groupings
                - Querying
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
    /{orgkeepID}/groupings/{id}:
        get:
            description: Get a single Grouping by ID
            operationId: getGrouping
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Grouping'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get Grouping
            tags:
                - Groupings
                - Querying
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
            - description: Grouping ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgkeepID}/createGroupings:
        get:
            description: |-
                List all createGroupings proposals. These are proposed changes to create new Grouping records that may be automatically approved or require manual approval depending on system configuration.

                **Filter Syntax:**
                - Filters use exact match only
                - Multiple filters are combined with AND logic
                - Filterable fields: typeID, definedInGroupingID
                - Example: `?typeID=123e4567-e89b-12d3-a456-426614174000&definedInGroupingID=123e4567-e89b-12d3-a456-426614174000`
            operationId: listCreateGroupingProposal
            parameters:
                - description: Filter by typeID (exact match)
                  in: query
                  name: typeID
                  schema:
                    type: string
                - description: Filter by definedInGroupingID (exact match)
                  in: query
                  name: definedInGroupingID
                  schema:
                    type: string
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination. Use the value from the 'nextCursor' field of the previous response.
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListCreateGroupingProposalResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List Grouping creation proposals
            tags:
                - Groupings
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
        post:
            description: Create new proposals to add Grouping records. The proposals may be automatically approved or require manual approval depending on system configuration. You can submit multiple proposals in a single request.
            operationId: createCreateGroupingProposal
            requestBody:
                content:
                    application/json:
                        schema:
                            items:
                                $ref: '#/components/schemas/CreateCreateGroupingProposalRequest'
                            maxItems: 100
                            minItems: 1
                            type: array
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/CreateGroupingProposal'
                                type: array
                    description: Created successfully
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Propose creation of Groupings
            tags:
                - Groupings
                - Proposals
    /{orgkeepID}/createGroupings/{id}:
        get:
            description: Get details of a specific Grouping creation proposal by ID
            operationId: getCreateGroupingProposal
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateGroupingProposal'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get Grouping creation proposal
            tags:
                - Groupings
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
            - description: CreateGroupingProposal ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgkeepID}/deleteGroupings:
        get:
            description: List all deleteGroupings proposals. These are proposed changes to delete Grouping records that may be automatically approved or require manual approval depending on system configuration.
            operationId: listDeleteGroupingProposal
            parameters:
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination. Use the value from the 'nextCursor' field of the previous response.
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListDeleteGroupingProposalResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List Grouping deletion proposals
            tags:
                - Groupings
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
        post:
            description: Create new proposals to delete Grouping records. The proposals may be automatically approved or require manual approval depending on system configuration. You can submit multiple proposals in a single request.
            operationId: createDeleteGroupingProposal
            requestBody:
                content:
                    application/json:
                        schema:
                            items:
                                $ref: '#/components/schemas/CreateDeleteGroupingProposalRequest'
                            maxItems: 100
                            minItems: 1
                            type: array
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/DeleteGroupingProposal'
                                type: array
                    description: Created successfully
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Propose deletion of Groupings
            tags:
                - Groupings
                - Proposals
    /{orgkeepID}/deleteGroupings/{id}:
        get:
            description: Get details of a specific Grouping deletion proposal by ID
            operationId: getDeleteGroupingProposal
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteGroupingProposal'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get Grouping deletion proposal
            tags:
                - Groupings
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
            - description: DeleteGroupingProposal ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgkeepID}/updateGroupings:
        get:
            description: |-
                List all updateGroupings proposals. These are proposed changes to update existing Grouping records that may be automatically approved or require manual approval depending on system configuration.

                **Filter Syntax:**
                - Filters use exact match only
                - Multiple filters are combined with AND logic
                - Filterable fields: typeID, definedInGroupingID
                - Example: `?typeID=123e4567-e89b-12d3-a456-426614174000&definedInGroupingID=123e4567-e89b-12d3-a456-426614174000`
            operationId: listUpdateGroupingProposal
            parameters:
                - description: Filter by typeID (exact match)
                  in: query
                  name: typeID
                  schema:
                    type: string
                - description: Filter by definedInGroupingID (exact match)
                  in: query
                  name: definedInGroupingID
                  schema:
                    type: string
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination. Use the value from the 'nextCursor' field of the previous response.
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListUpdateGroupingProposalResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List Grouping update proposals
            tags:
                - Groupings
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
        post:
            description: Create new proposals to update Grouping records. All fields are optional - omitted fields will not be changed. Only include fields you want to update. Setting a field to null will clear its value (where applicable). The proposals may be automatically approved or require manual approval depending on system configuration. You can submit multiple proposals in a single request.
            operationId: createUpdateGroupingProposal
            requestBody:
                content:
                    application/json:
                        schema:
                            items:
                                $ref: '#/components/schemas/CreateUpdateGroupingProposalRequest'
                            maxItems: 100
                            minItems: 1
                            type: array
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/UpdateGroupingProposal'
                                type: array
                    description: Created successfully
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Propose update of Groupings
            tags:
                - Groupings
                - Proposals
    /{orgkeepID}/updateGroupings/{id}:
        get:
            description: Get details of a specific Grouping update proposal by ID
            operationId: getUpdateGroupingProposal
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateGroupingProposal'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get Grouping update proposal
            tags:
                - Groupings
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
            - description: UpdateGroupingProposal ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgkeepID}/monitoringTraces:
        get:
            description: List monitoringTraces
            operationId: listMonitoringTrace
            parameters:
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination. Use the value from the 'nextCursor' field of the previous response.
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListMonitoringTraceResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List monitoringTraces
            tags:
                - MonitoringTraces
                - Querying
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
    /{orgkeepID}/monitoringTraces/{id}:
        get:
            description: Get a single MonitoringTrace by ID
            operationId: getMonitoringTrace
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/MonitoringTrace'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get MonitoringTrace
            tags:
                - MonitoringTraces
                - Querying
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
            - description: MonitoringTrace ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgkeepID}/createMonitoringTraces:
        get:
            description: List all createMonitoringTraces proposals. These are proposed changes to create new MonitoringTrace records that may be automatically approved or require manual approval depending on system configuration.
            operationId: listCreateMonitoringTraceProposal
            parameters:
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination. Use the value from the 'nextCursor' field of the previous response.
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListCreateMonitoringTraceProposalResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List MonitoringTrace creation proposals
            tags:
                - MonitoringTraces
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
        post:
            description: Create new proposals to add MonitoringTrace records. The proposals may be automatically approved or require manual approval depending on system configuration. You can submit multiple proposals in a single request.
            operationId: createCreateMonitoringTraceProposal
            requestBody:
                content:
                    application/json:
                        schema:
                            items:
                                $ref: '#/components/schemas/CreateCreateMonitoringTraceProposalRequest'
                            maxItems: 100
                            minItems: 1
                            type: array
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/CreateMonitoringTraceProposal'
                                type: array
                    description: Created successfully
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Propose creation of MonitoringTraces
            tags:
                - MonitoringTraces
                - Proposals
    /{orgkeepID}/createMonitoringTraces/{id}:
        get:
            description: Get details of a specific MonitoringTrace creation proposal by ID
            operationId: getCreateMonitoringTraceProposal
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateMonitoringTraceProposal'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get MonitoringTrace creation proposal
            tags:
                - MonitoringTraces
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
            - description: CreateMonitoringTraceProposal ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgkeepID}/deleteMonitoringTraces:
        get:
            description: List all deleteMonitoringTraces proposals. These are proposed changes to delete MonitoringTrace records that may be automatically approved or require manual approval depending on system configuration.
            operationId: listDeleteMonitoringTraceProposal
            parameters:
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination. Use the value from the 'nextCursor' field of the previous response.
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListDeleteMonitoringTraceProposalResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List MonitoringTrace deletion proposals
            tags:
                - MonitoringTraces
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
        post:
            description: Create new proposals to delete MonitoringTrace records. The proposals may be automatically approved or require manual approval depending on system configuration. You can submit multiple proposals in a single request.
            operationId: createDeleteMonitoringTraceProposal
            requestBody:
                content:
                    application/json:
                        schema:
                            items:
                                $ref: '#/components/schemas/CreateDeleteMonitoringTraceProposalRequest'
                            maxItems: 100
                            minItems: 1
                            type: array
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/DeleteMonitoringTraceProposal'
                                type: array
                    description: Created successfully
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Propose deletion of MonitoringTraces
            tags:
                - MonitoringTraces
                - Proposals
    /{orgkeepID}/deleteMonitoringTraces/{id}:
        get:
            description: Get details of a specific MonitoringTrace deletion proposal by ID
            operationId: getDeleteMonitoringTraceProposal
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteMonitoringTraceProposal'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get MonitoringTrace deletion proposal
            tags:
                - MonitoringTraces
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
            - description: DeleteMonitoringTraceProposal ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgkeepID}/updateMonitoringTraces:
        get:
            description: List all updateMonitoringTraces proposals. These are proposed changes to update existing MonitoringTrace records that may be automatically approved or require manual approval depending on system configuration.
            operationId: listUpdateMonitoringTraceProposal
            parameters:
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination. Use the value from the 'nextCursor' field of the previous response.
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListUpdateMonitoringTraceProposalResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List MonitoringTrace update proposals
            tags:
                - MonitoringTraces
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
        post:
            description: Create new proposals to update MonitoringTrace records. All fields are optional - omitted fields will not be changed. Only include fields you want to update. Setting a field to null will clear its value (where applicable). The proposals may be automatically approved or require manual approval depending on system configuration. You can submit multiple proposals in a single request.
            operationId: createUpdateMonitoringTraceProposal
            requestBody:
                content:
                    application/json:
                        schema:
                            items:
                                $ref: '#/components/schemas/CreateUpdateMonitoringTraceProposalRequest'
                            maxItems: 100
                            minItems: 1
                            type: array
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/UpdateMonitoringTraceProposal'
                                type: array
                    description: Created successfully
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Propose update of MonitoringTraces
            tags:
                - MonitoringTraces
                - Proposals
    /{orgkeepID}/updateMonitoringTraces/{id}:
        get:
            description: Get details of a specific MonitoringTrace update proposal by ID
            operationId: getUpdateMonitoringTraceProposal
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateMonitoringTraceProposal'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get MonitoringTrace update proposal
            tags:
                - MonitoringTraces
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
            - description: UpdateMonitoringTraceProposal ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgkeepID}/positionAssignments:
        get:
            description: |-
                List positionAssignments

                **Filter Syntax:**
                - Filters use exact match only
                - Multiple filters are combined with AND logic
                - Filterable fields: employeeID
                - Example: `?employeeID=123e4567-e89b-12d3-a456-426614174000`
            operationId: listPositionAssignment
            parameters:
                - description: Filter by employeeID (exact match)
                  in: query
                  name: employeeID
                  schema:
                    type: string
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination. Use the value from the 'nextCursor' field of the previous response.
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListPositionAssignmentResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List positionAssignments
            tags:
                - PositionAssignments
                - Querying
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
    /{orgkeepID}/positionAssignments/{id}:
        get:
            description: Get a single PositionAssignment by ID
            operationId: getPositionAssignment
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PositionAssignment'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get PositionAssignment
            tags:
                - PositionAssignments
                - Querying
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
            - description: PositionAssignment ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgkeepID}/createPositionAssignments:
        get:
            description: |-
                List all createPositionAssignments proposals. These are proposed changes to create new PositionAssignment records that may be automatically approved or require manual approval depending on system configuration.

                **Filter Syntax:**
                - Filters use exact match only
                - Multiple filters are combined with AND logic
                - Filterable fields: employeeID
                - Example: `?employeeID=123e4567-e89b-12d3-a456-426614174000`
            operationId: listCreatePositionAssignmentProposal
            parameters:
                - description: Filter by employeeID (exact match)
                  in: query
                  name: employeeID
                  schema:
                    type: string
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination. Use the value from the 'nextCursor' field of the previous response.
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListCreatePositionAssignmentProposalResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List PositionAssignment creation proposals
            tags:
                - PositionAssignments
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
        post:
            description: Create new proposals to add PositionAssignment records. The proposals may be automatically approved or require manual approval depending on system configuration. You can submit multiple proposals in a single request.
            operationId: createCreatePositionAssignmentProposal
            requestBody:
                content:
                    application/json:
                        schema:
                            items:
                                $ref: '#/components/schemas/CreateCreatePositionAssignmentProposalRequest'
                            maxItems: 100
                            minItems: 1
                            type: array
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/CreatePositionAssignmentProposal'
                                type: array
                    description: Created successfully
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Propose creation of PositionAssignments
            tags:
                - PositionAssignments
                - Proposals
    /{orgkeepID}/createPositionAssignments/{id}:
        get:
            description: Get details of a specific PositionAssignment creation proposal by ID
            operationId: getCreatePositionAssignmentProposal
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreatePositionAssignmentProposal'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get PositionAssignment creation proposal
            tags:
                - PositionAssignments
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
            - description: CreatePositionAssignmentProposal ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgkeepID}/deletePositionAssignments:
        get:
            description: List all deletePositionAssignments proposals. These are proposed changes to delete PositionAssignment records that may be automatically approved or require manual approval depending on system configuration.
            operationId: listDeletePositionAssignmentProposal
            parameters:
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination. Use the value from the 'nextCursor' field of the previous response.
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListDeletePositionAssignmentProposalResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List PositionAssignment deletion proposals
            tags:
                - PositionAssignments
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
        post:
            description: Create new proposals to delete PositionAssignment records. The proposals may be automatically approved or require manual approval depending on system configuration. You can submit multiple proposals in a single request.
            operationId: createDeletePositionAssignmentProposal
            requestBody:
                content:
                    application/json:
                        schema:
                            items:
                                $ref: '#/components/schemas/CreateDeletePositionAssignmentProposalRequest'
                            maxItems: 100
                            minItems: 1
                            type: array
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/DeletePositionAssignmentProposal'
                                type: array
                    description: Created successfully
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Propose deletion of PositionAssignments
            tags:
                - PositionAssignments
                - Proposals
    /{orgkeepID}/deletePositionAssignments/{id}:
        get:
            description: Get details of a specific PositionAssignment deletion proposal by ID
            operationId: getDeletePositionAssignmentProposal
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeletePositionAssignmentProposal'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get PositionAssignment deletion proposal
            tags:
                - PositionAssignments
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
            - description: DeletePositionAssignmentProposal ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgkeepID}/updatePositionAssignments:
        get:
            description: |-
                List all updatePositionAssignments proposals. These are proposed changes to update existing PositionAssignment records that may be automatically approved or require manual approval depending on system configuration.

                **Filter Syntax:**
                - Filters use exact match only
                - Multiple filters are combined with AND logic
                - Filterable fields: employeeID
                - Example: `?employeeID=123e4567-e89b-12d3-a456-426614174000`
            operationId: listUpdatePositionAssignmentProposal
            parameters:
                - description: Filter by employeeID (exact match)
                  in: query
                  name: employeeID
                  schema:
                    type: string
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination. Use the value from the 'nextCursor' field of the previous response.
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListUpdatePositionAssignmentProposalResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List PositionAssignment update proposals
            tags:
                - PositionAssignments
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
        post:
            description: Create new proposals to update PositionAssignment records. All fields are optional - omitted fields will not be changed. Only include fields you want to update. Setting a field to null will clear its value (where applicable). The proposals may be automatically approved or require manual approval depending on system configuration. You can submit multiple proposals in a single request.
            operationId: createUpdatePositionAssignmentProposal
            requestBody:
                content:
                    application/json:
                        schema:
                            items:
                                $ref: '#/components/schemas/CreateUpdatePositionAssignmentProposalRequest'
                            maxItems: 100
                            minItems: 1
                            type: array
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/UpdatePositionAssignmentProposal'
                                type: array
                    description: Created successfully
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Propose update of PositionAssignments
            tags:
                - PositionAssignments
                - Proposals
    /{orgkeepID}/updatePositionAssignments/{id}:
        get:
            description: Get details of a specific PositionAssignment update proposal by ID
            operationId: getUpdatePositionAssignmentProposal
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdatePositionAssignmentProposal'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get PositionAssignment update proposal
            tags:
                - PositionAssignments
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
            - description: UpdatePositionAssignmentProposal ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgkeepID}/ratingScaleLevelDescriptors:
        get:
            description: |-
                List ratingScaleLevelDescriptors

                **Filter Syntax:**
                - Filters use exact match only
                - Multiple filters are combined with AND logic
                - Filterable fields: ratingScaleLevelID, skillDefinitionID
                - Example: `?ratingScaleLevelID=123e4567-e89b-12d3-a456-426614174000&skillDefinitionID=123e4567-e89b-12d3-a456-426614174000`
            operationId: listRatingScaleLevelDescriptor
            parameters:
                - description: Filter by ratingScaleLevelID (exact match)
                  in: query
                  name: ratingScaleLevelID
                  schema:
                    type: string
                - description: Filter by skillDefinitionID (exact match)
                  in: query
                  name: skillDefinitionID
                  schema:
                    type: string
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination. Use the value from the 'nextCursor' field of the previous response.
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListRatingScaleLevelDescriptorResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List ratingScaleLevelDescriptors
            tags:
                - RatingScaleLevelDescriptors
                - Querying
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
    /{orgkeepID}/ratingScaleLevelDescriptors/{id}:
        get:
            description: Get a single RatingScaleLevelDescriptor by ID
            operationId: getRatingScaleLevelDescriptor
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RatingScaleLevelDescriptor'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get RatingScaleLevelDescriptor
            tags:
                - RatingScaleLevelDescriptors
                - Querying
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
            - description: RatingScaleLevelDescriptor ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgkeepID}/createRatingScaleLevelDescriptors:
        get:
            description: |-
                List all createRatingScaleLevelDescriptors proposals. These are proposed changes to create new RatingScaleLevelDescriptor records that may be automatically approved or require manual approval depending on system configuration.

                **Filter Syntax:**
                - Filters use exact match only
                - Multiple filters are combined with AND logic
                - Filterable fields: ratingScaleLevelID, skillDefinitionID
                - Example: `?ratingScaleLevelID=123e4567-e89b-12d3-a456-426614174000&skillDefinitionID=123e4567-e89b-12d3-a456-426614174000`
            operationId: listCreateRatingScaleLevelDescriptorProposal
            parameters:
                - description: Filter by ratingScaleLevelID (exact match)
                  in: query
                  name: ratingScaleLevelID
                  schema:
                    type: string
                - description: Filter by skillDefinitionID (exact match)
                  in: query
                  name: skillDefinitionID
                  schema:
                    type: string
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination. Use the value from the 'nextCursor' field of the previous response.
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListCreateRatingScaleLevelDescriptorProposalResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List RatingScaleLevelDescriptor creation proposals
            tags:
                - RatingScaleLevelDescriptors
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
        post:
            description: Create new proposals to add RatingScaleLevelDescriptor records. The proposals may be automatically approved or require manual approval depending on system configuration. You can submit multiple proposals in a single request.
            operationId: createCreateRatingScaleLevelDescriptorProposal
            requestBody:
                content:
                    application/json:
                        schema:
                            items:
                                $ref: '#/components/schemas/CreateCreateRatingScaleLevelDescriptorProposalRequest'
                            maxItems: 100
                            minItems: 1
                            type: array
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/CreateRatingScaleLevelDescriptorProposal'
                                type: array
                    description: Created successfully
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Propose creation of RatingScaleLevelDescriptors
            tags:
                - RatingScaleLevelDescriptors
                - Proposals
    /{orgkeepID}/createRatingScaleLevelDescriptors/{id}:
        get:
            description: Get details of a specific RatingScaleLevelDescriptor creation proposal by ID
            operationId: getCreateRatingScaleLevelDescriptorProposal
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateRatingScaleLevelDescriptorProposal'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get RatingScaleLevelDescriptor creation proposal
            tags:
                - RatingScaleLevelDescriptors
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
            - description: CreateRatingScaleLevelDescriptorProposal ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgkeepID}/deleteRatingScaleLevelDescriptors:
        get:
            description: List all deleteRatingScaleLevelDescriptors proposals. These are proposed changes to delete RatingScaleLevelDescriptor records that may be automatically approved or require manual approval depending on system configuration.
            operationId: listDeleteRatingScaleLevelDescriptorProposal
            parameters:
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination. Use the value from the 'nextCursor' field of the previous response.
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListDeleteRatingScaleLevelDescriptorProposalResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List RatingScaleLevelDescriptor deletion proposals
            tags:
                - RatingScaleLevelDescriptors
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
        post:
            description: Create new proposals to delete RatingScaleLevelDescriptor records. The proposals may be automatically approved or require manual approval depending on system configuration. You can submit multiple proposals in a single request.
            operationId: createDeleteRatingScaleLevelDescriptorProposal
            requestBody:
                content:
                    application/json:
                        schema:
                            items:
                                $ref: '#/components/schemas/CreateDeleteRatingScaleLevelDescriptorProposalRequest'
                            maxItems: 100
                            minItems: 1
                            type: array
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/DeleteRatingScaleLevelDescriptorProposal'
                                type: array
                    description: Created successfully
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Propose deletion of RatingScaleLevelDescriptors
            tags:
                - RatingScaleLevelDescriptors
                - Proposals
    /{orgkeepID}/deleteRatingScaleLevelDescriptors/{id}:
        get:
            description: Get details of a specific RatingScaleLevelDescriptor deletion proposal by ID
            operationId: getDeleteRatingScaleLevelDescriptorProposal
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteRatingScaleLevelDescriptorProposal'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get RatingScaleLevelDescriptor deletion proposal
            tags:
                - RatingScaleLevelDescriptors
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
            - description: DeleteRatingScaleLevelDescriptorProposal ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgkeepID}/updateRatingScaleLevelDescriptors:
        get:
            description: List all updateRatingScaleLevelDescriptors proposals. These are proposed changes to update existing RatingScaleLevelDescriptor records that may be automatically approved or require manual approval depending on system configuration.
            operationId: listUpdateRatingScaleLevelDescriptorProposal
            parameters:
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination. Use the value from the 'nextCursor' field of the previous response.
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListUpdateRatingScaleLevelDescriptorProposalResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List RatingScaleLevelDescriptor update proposals
            tags:
                - RatingScaleLevelDescriptors
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
        post:
            description: Create new proposals to update RatingScaleLevelDescriptor records. All fields are optional - omitted fields will not be changed. Only include fields you want to update. Setting a field to null will clear its value (where applicable). The proposals may be automatically approved or require manual approval depending on system configuration. You can submit multiple proposals in a single request.
            operationId: createUpdateRatingScaleLevelDescriptorProposal
            requestBody:
                content:
                    application/json:
                        schema:
                            items:
                                $ref: '#/components/schemas/CreateUpdateRatingScaleLevelDescriptorProposalRequest'
                            maxItems: 100
                            minItems: 1
                            type: array
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/UpdateRatingScaleLevelDescriptorProposal'
                                type: array
                    description: Created successfully
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Propose update of RatingScaleLevelDescriptors
            tags:
                - RatingScaleLevelDescriptors
                - Proposals
    /{orgkeepID}/updateRatingScaleLevelDescriptors/{id}:
        get:
            description: Get details of a specific RatingScaleLevelDescriptor update proposal by ID
            operationId: getUpdateRatingScaleLevelDescriptorProposal
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateRatingScaleLevelDescriptorProposal'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get RatingScaleLevelDescriptor update proposal
            tags:
                - RatingScaleLevelDescriptors
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
            - description: UpdateRatingScaleLevelDescriptorProposal ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgkeepID}/ratingScaleLevels:
        get:
            description: |-
                List ratingScaleLevels

                **Filter Syntax:**
                - Filters use exact match only
                - Multiple filters are combined with AND logic
                - Filterable fields: ratingScaleID
                - Example: `?ratingScaleID=123e4567-e89b-12d3-a456-426614174000`
            operationId: listRatingScaleLevel
            parameters:
                - description: Filter by ratingScaleID (exact match)
                  in: query
                  name: ratingScaleID
                  schema:
                    type: string
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination. Use the value from the 'nextCursor' field of the previous response.
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListRatingScaleLevelResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List ratingScaleLevels
            tags:
                - RatingScaleLevels
                - Querying
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
    /{orgkeepID}/ratingScaleLevels/{id}:
        get:
            description: Get a single RatingScaleLevel by ID
            operationId: getRatingScaleLevel
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RatingScaleLevel'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get RatingScaleLevel
            tags:
                - RatingScaleLevels
                - Querying
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
            - description: RatingScaleLevel ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgkeepID}/createRatingScaleLevels:
        get:
            description: |-
                List all createRatingScaleLevels proposals. These are proposed changes to create new RatingScaleLevel records that may be automatically approved or require manual approval depending on system configuration.

                **Filter Syntax:**
                - Filters use exact match only
                - Multiple filters are combined with AND logic
                - Filterable fields: ratingScaleID
                - Example: `?ratingScaleID=123e4567-e89b-12d3-a456-426614174000`
            operationId: listCreateRatingScaleLevelProposal
            parameters:
                - description: Filter by ratingScaleID (exact match)
                  in: query
                  name: ratingScaleID
                  schema:
                    type: string
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination. Use the value from the 'nextCursor' field of the previous response.
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListCreateRatingScaleLevelProposalResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List RatingScaleLevel creation proposals
            tags:
                - RatingScaleLevels
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
        post:
            description: Create new proposals to add RatingScaleLevel records. The proposals may be automatically approved or require manual approval depending on system configuration. You can submit multiple proposals in a single request.
            operationId: createCreateRatingScaleLevelProposal
            requestBody:
                content:
                    application/json:
                        schema:
                            items:
                                $ref: '#/components/schemas/CreateCreateRatingScaleLevelProposalRequest'
                            maxItems: 100
                            minItems: 1
                            type: array
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/CreateRatingScaleLevelProposal'
                                type: array
                    description: Created successfully
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Propose creation of RatingScaleLevels
            tags:
                - RatingScaleLevels
                - Proposals
    /{orgkeepID}/createRatingScaleLevels/{id}:
        get:
            description: Get details of a specific RatingScaleLevel creation proposal by ID
            operationId: getCreateRatingScaleLevelProposal
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateRatingScaleLevelProposal'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get RatingScaleLevel creation proposal
            tags:
                - RatingScaleLevels
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
            - description: CreateRatingScaleLevelProposal ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgkeepID}/deleteRatingScaleLevels:
        get:
            description: List all deleteRatingScaleLevels proposals. These are proposed changes to delete RatingScaleLevel records that may be automatically approved or require manual approval depending on system configuration.
            operationId: listDeleteRatingScaleLevelProposal
            parameters:
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination. Use the value from the 'nextCursor' field of the previous response.
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListDeleteRatingScaleLevelProposalResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List RatingScaleLevel deletion proposals
            tags:
                - RatingScaleLevels
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
        post:
            description: Create new proposals to delete RatingScaleLevel records. The proposals may be automatically approved or require manual approval depending on system configuration. You can submit multiple proposals in a single request.
            operationId: createDeleteRatingScaleLevelProposal
            requestBody:
                content:
                    application/json:
                        schema:
                            items:
                                $ref: '#/components/schemas/CreateDeleteRatingScaleLevelProposalRequest'
                            maxItems: 100
                            minItems: 1
                            type: array
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/DeleteRatingScaleLevelProposal'
                                type: array
                    description: Created successfully
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Propose deletion of RatingScaleLevels
            tags:
                - RatingScaleLevels
                - Proposals
    /{orgkeepID}/deleteRatingScaleLevels/{id}:
        get:
            description: Get details of a specific RatingScaleLevel deletion proposal by ID
            operationId: getDeleteRatingScaleLevelProposal
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteRatingScaleLevelProposal'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get RatingScaleLevel deletion proposal
            tags:
                - RatingScaleLevels
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
            - description: DeleteRatingScaleLevelProposal ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgkeepID}/updateRatingScaleLevels:
        get:
            description: List all updateRatingScaleLevels proposals. These are proposed changes to update existing RatingScaleLevel records that may be automatically approved or require manual approval depending on system configuration.
            operationId: listUpdateRatingScaleLevelProposal
            parameters:
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination. Use the value from the 'nextCursor' field of the previous response.
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListUpdateRatingScaleLevelProposalResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List RatingScaleLevel update proposals
            tags:
                - RatingScaleLevels
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
        post:
            description: Create new proposals to update RatingScaleLevel records. All fields are optional - omitted fields will not be changed. Only include fields you want to update. Setting a field to null will clear its value (where applicable). The proposals may be automatically approved or require manual approval depending on system configuration. You can submit multiple proposals in a single request.
            operationId: createUpdateRatingScaleLevelProposal
            requestBody:
                content:
                    application/json:
                        schema:
                            items:
                                $ref: '#/components/schemas/CreateUpdateRatingScaleLevelProposalRequest'
                            maxItems: 100
                            minItems: 1
                            type: array
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/UpdateRatingScaleLevelProposal'
                                type: array
                    description: Created successfully
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Propose update of RatingScaleLevels
            tags:
                - RatingScaleLevels
                - Proposals
    /{orgkeepID}/updateRatingScaleLevels/{id}:
        get:
            description: Get details of a specific RatingScaleLevel update proposal by ID
            operationId: getUpdateRatingScaleLevelProposal
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateRatingScaleLevelProposal'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get RatingScaleLevel update proposal
            tags:
                - RatingScaleLevels
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
            - description: UpdateRatingScaleLevelProposal ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgkeepID}/ratingScales:
        get:
            description: List ratingScales
            operationId: listRatingScale
            parameters:
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination. Use the value from the 'nextCursor' field of the previous response.
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListRatingScaleResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List ratingScales
            tags:
                - RatingScales
                - Querying
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
    /{orgkeepID}/ratingScales/{id}:
        get:
            description: Get a single RatingScale by ID
            operationId: getRatingScale
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RatingScale'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get RatingScale
            tags:
                - RatingScales
                - Querying
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
            - description: RatingScale ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgkeepID}/createRatingScales:
        get:
            description: List all createRatingScales proposals. These are proposed changes to create new RatingScale records that may be automatically approved or require manual approval depending on system configuration.
            operationId: listCreateRatingScaleProposal
            parameters:
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination. Use the value from the 'nextCursor' field of the previous response.
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListCreateRatingScaleProposalResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List RatingScale creation proposals
            tags:
                - RatingScales
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
        post:
            description: Create new proposals to add RatingScale records. The proposals may be automatically approved or require manual approval depending on system configuration. You can submit multiple proposals in a single request.
            operationId: createCreateRatingScaleProposal
            requestBody:
                content:
                    application/json:
                        schema:
                            items:
                                $ref: '#/components/schemas/CreateCreateRatingScaleProposalRequest'
                            maxItems: 100
                            minItems: 1
                            type: array
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/CreateRatingScaleProposal'
                                type: array
                    description: Created successfully
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Propose creation of RatingScales
            tags:
                - RatingScales
                - Proposals
    /{orgkeepID}/createRatingScales/{id}:
        get:
            description: Get details of a specific RatingScale creation proposal by ID
            operationId: getCreateRatingScaleProposal
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateRatingScaleProposal'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get RatingScale creation proposal
            tags:
                - RatingScales
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
            - description: CreateRatingScaleProposal ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgkeepID}/deleteRatingScales:
        get:
            description: List all deleteRatingScales proposals. These are proposed changes to delete RatingScale records that may be automatically approved or require manual approval depending on system configuration.
            operationId: listDeleteRatingScaleProposal
            parameters:
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination. Use the value from the 'nextCursor' field of the previous response.
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListDeleteRatingScaleProposalResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List RatingScale deletion proposals
            tags:
                - RatingScales
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
        post:
            description: Create new proposals to delete RatingScale records. The proposals may be automatically approved or require manual approval depending on system configuration. You can submit multiple proposals in a single request.
            operationId: createDeleteRatingScaleProposal
            requestBody:
                content:
                    application/json:
                        schema:
                            items:
                                $ref: '#/components/schemas/CreateDeleteRatingScaleProposalRequest'
                            maxItems: 100
                            minItems: 1
                            type: array
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/DeleteRatingScaleProposal'
                                type: array
                    description: Created successfully
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Propose deletion of RatingScales
            tags:
                - RatingScales
                - Proposals
    /{orgkeepID}/deleteRatingScales/{id}:
        get:
            description: Get details of a specific RatingScale deletion proposal by ID
            operationId: getDeleteRatingScaleProposal
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteRatingScaleProposal'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get RatingScale deletion proposal
            tags:
                - RatingScales
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
            - description: DeleteRatingScaleProposal ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgkeepID}/updateRatingScales:
        get:
            description: List all updateRatingScales proposals. These are proposed changes to update existing RatingScale records that may be automatically approved or require manual approval depending on system configuration.
            operationId: listUpdateRatingScaleProposal
            parameters:
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination. Use the value from the 'nextCursor' field of the previous response.
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListUpdateRatingScaleProposalResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List RatingScale update proposals
            tags:
                - RatingScales
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
        post:
            description: Create new proposals to update RatingScale records. All fields are optional - omitted fields will not be changed. Only include fields you want to update. Setting a field to null will clear its value (where applicable). The proposals may be automatically approved or require manual approval depending on system configuration. You can submit multiple proposals in a single request.
            operationId: createUpdateRatingScaleProposal
            requestBody:
                content:
                    application/json:
                        schema:
                            items:
                                $ref: '#/components/schemas/CreateUpdateRatingScaleProposalRequest'
                            maxItems: 100
                            minItems: 1
                            type: array
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/UpdateRatingScaleProposal'
                                type: array
                    description: Created successfully
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Propose update of RatingScales
            tags:
                - RatingScales
                - Proposals
    /{orgkeepID}/updateRatingScales/{id}:
        get:
            description: Get details of a specific RatingScale update proposal by ID
            operationId: getUpdateRatingScaleProposal
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateRatingScaleProposal'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get RatingScale update proposal
            tags:
                - RatingScales
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
            - description: UpdateRatingScaleProposal ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgkeepID}/repositories:
        get:
            description: List repositories
            operationId: listRepository
            parameters:
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination. Use the value from the 'nextCursor' field of the previous response.
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListRepositoryResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List repositories
            tags:
                - Repositories
                - Querying
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
    /{orgkeepID}/repositories/{id}:
        get:
            description: Get a single Repository by ID
            operationId: getRepository
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Repository'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get Repository
            tags:
                - Repositories
                - Querying
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
            - description: Repository ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgkeepID}/skillDefinitionTypes:
        get:
            description: List skillDefinitionTypes
            operationId: listSkillDefinitionType
            parameters:
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination. Use the value from the 'nextCursor' field of the previous response.
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListSkillDefinitionTypeResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List skillDefinitionTypes
            tags:
                - SkillDefinitionTypes
                - Querying
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
    /{orgkeepID}/skillDefinitionTypes/{id}:
        get:
            description: Get a single SkillDefinitionType by ID
            operationId: getSkillDefinitionType
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SkillDefinitionType'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get SkillDefinitionType
            tags:
                - SkillDefinitionTypes
                - Querying
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
            - description: SkillDefinitionType ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgkeepID}/createSkillDefinitionTypes:
        get:
            description: List all createSkillDefinitionTypes proposals. These are proposed changes to create new SkillDefinitionType records that may be automatically approved or require manual approval depending on system configuration.
            operationId: listCreateSkillDefinitionTypeProposal
            parameters:
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination. Use the value from the 'nextCursor' field of the previous response.
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListCreateSkillDefinitionTypeProposalResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List SkillDefinitionType creation proposals
            tags:
                - SkillDefinitionTypes
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
        post:
            description: Create new proposals to add SkillDefinitionType records. The proposals may be automatically approved or require manual approval depending on system configuration. You can submit multiple proposals in a single request.
            operationId: createCreateSkillDefinitionTypeProposal
            requestBody:
                content:
                    application/json:
                        schema:
                            items:
                                $ref: '#/components/schemas/CreateCreateSkillDefinitionTypeProposalRequest'
                            maxItems: 100
                            minItems: 1
                            type: array
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/CreateSkillDefinitionTypeProposal'
                                type: array
                    description: Created successfully
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Propose creation of SkillDefinitionTypes
            tags:
                - SkillDefinitionTypes
                - Proposals
    /{orgkeepID}/createSkillDefinitionTypes/{id}:
        get:
            description: Get details of a specific SkillDefinitionType creation proposal by ID
            operationId: getCreateSkillDefinitionTypeProposal
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateSkillDefinitionTypeProposal'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get SkillDefinitionType creation proposal
            tags:
                - SkillDefinitionTypes
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
            - description: CreateSkillDefinitionTypeProposal ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgkeepID}/deleteSkillDefinitionTypes:
        get:
            description: List all deleteSkillDefinitionTypes proposals. These are proposed changes to delete SkillDefinitionType records that may be automatically approved or require manual approval depending on system configuration.
            operationId: listDeleteSkillDefinitionTypeProposal
            parameters:
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination. Use the value from the 'nextCursor' field of the previous response.
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListDeleteSkillDefinitionTypeProposalResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List SkillDefinitionType deletion proposals
            tags:
                - SkillDefinitionTypes
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
        post:
            description: Create new proposals to delete SkillDefinitionType records. The proposals may be automatically approved or require manual approval depending on system configuration. You can submit multiple proposals in a single request.
            operationId: createDeleteSkillDefinitionTypeProposal
            requestBody:
                content:
                    application/json:
                        schema:
                            items:
                                $ref: '#/components/schemas/CreateDeleteSkillDefinitionTypeProposalRequest'
                            maxItems: 100
                            minItems: 1
                            type: array
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/DeleteSkillDefinitionTypeProposal'
                                type: array
                    description: Created successfully
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Propose deletion of SkillDefinitionTypes
            tags:
                - SkillDefinitionTypes
                - Proposals
    /{orgkeepID}/deleteSkillDefinitionTypes/{id}:
        get:
            description: Get details of a specific SkillDefinitionType deletion proposal by ID
            operationId: getDeleteSkillDefinitionTypeProposal
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteSkillDefinitionTypeProposal'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get SkillDefinitionType deletion proposal
            tags:
                - SkillDefinitionTypes
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
            - description: DeleteSkillDefinitionTypeProposal ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgkeepID}/updateSkillDefinitionTypes:
        get:
            description: List all updateSkillDefinitionTypes proposals. These are proposed changes to update existing SkillDefinitionType records that may be automatically approved or require manual approval depending on system configuration.
            operationId: listUpdateSkillDefinitionTypeProposal
            parameters:
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination. Use the value from the 'nextCursor' field of the previous response.
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListUpdateSkillDefinitionTypeProposalResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List SkillDefinitionType update proposals
            tags:
                - SkillDefinitionTypes
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
        post:
            description: Create new proposals to update SkillDefinitionType records. All fields are optional - omitted fields will not be changed. Only include fields you want to update. Setting a field to null will clear its value (where applicable). The proposals may be automatically approved or require manual approval depending on system configuration. You can submit multiple proposals in a single request.
            operationId: createUpdateSkillDefinitionTypeProposal
            requestBody:
                content:
                    application/json:
                        schema:
                            items:
                                $ref: '#/components/schemas/CreateUpdateSkillDefinitionTypeProposalRequest'
                            maxItems: 100
                            minItems: 1
                            type: array
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/UpdateSkillDefinitionTypeProposal'
                                type: array
                    description: Created successfully
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Propose update of SkillDefinitionTypes
            tags:
                - SkillDefinitionTypes
                - Proposals
    /{orgkeepID}/updateSkillDefinitionTypes/{id}:
        get:
            description: Get details of a specific SkillDefinitionType update proposal by ID
            operationId: getUpdateSkillDefinitionTypeProposal
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateSkillDefinitionTypeProposal'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get SkillDefinitionType update proposal
            tags:
                - SkillDefinitionTypes
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
            - description: UpdateSkillDefinitionTypeProposal ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgkeepID}/skillDefinitions:
        get:
            description: |-
                List skillDefinitions

                **Filter Syntax:**
                - Filters use exact match only
                - Multiple filters are combined with AND logic
                - Filterable fields: ratingScaleID, typeID
                - Example: `?ratingScaleID=123e4567-e89b-12d3-a456-426614174000&typeID=123e4567-e89b-12d3-a456-426614174000`
            operationId: listSkillDefinition
            parameters:
                - description: Filter by ratingScaleID (exact match)
                  in: query
                  name: ratingScaleID
                  schema:
                    type: string
                - description: Filter by typeID (exact match)
                  in: query
                  name: typeID
                  schema:
                    type: string
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination. Use the value from the 'nextCursor' field of the previous response.
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListSkillDefinitionResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List skillDefinitions
            tags:
                - SkillDefinitions
                - Querying
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
    /{orgkeepID}/skillDefinitions/{id}:
        get:
            description: Get a single SkillDefinition by ID
            operationId: getSkillDefinition
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SkillDefinition'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get SkillDefinition
            tags:
                - SkillDefinitions
                - Querying
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
            - description: SkillDefinition ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgkeepID}/createSkillDefinitions:
        get:
            description: |-
                List all createSkillDefinitions proposals. These are proposed changes to create new SkillDefinition records that may be automatically approved or require manual approval depending on system configuration.

                **Filter Syntax:**
                - Filters use exact match only
                - Multiple filters are combined with AND logic
                - Filterable fields: ratingScaleID, typeID
                - Example: `?ratingScaleID=123e4567-e89b-12d3-a456-426614174000&typeID=123e4567-e89b-12d3-a456-426614174000`
            operationId: listCreateSkillDefinitionProposal
            parameters:
                - description: Filter by ratingScaleID (exact match)
                  in: query
                  name: ratingScaleID
                  schema:
                    type: string
                - description: Filter by typeID (exact match)
                  in: query
                  name: typeID
                  schema:
                    type: string
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination. Use the value from the 'nextCursor' field of the previous response.
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListCreateSkillDefinitionProposalResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List SkillDefinition creation proposals
            tags:
                - SkillDefinitions
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
        post:
            description: Create new proposals to add SkillDefinition records. The proposals may be automatically approved or require manual approval depending on system configuration. You can submit multiple proposals in a single request.
            operationId: createCreateSkillDefinitionProposal
            requestBody:
                content:
                    application/json:
                        schema:
                            items:
                                $ref: '#/components/schemas/CreateCreateSkillDefinitionProposalRequest'
                            maxItems: 100
                            minItems: 1
                            type: array
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/CreateSkillDefinitionProposal'
                                type: array
                    description: Created successfully
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Propose creation of SkillDefinitions
            tags:
                - SkillDefinitions
                - Proposals
    /{orgkeepID}/createSkillDefinitions/{id}:
        get:
            description: Get details of a specific SkillDefinition creation proposal by ID
            operationId: getCreateSkillDefinitionProposal
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateSkillDefinitionProposal'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get SkillDefinition creation proposal
            tags:
                - SkillDefinitions
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
            - description: CreateSkillDefinitionProposal ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgkeepID}/deleteSkillDefinitions:
        get:
            description: List all deleteSkillDefinitions proposals. These are proposed changes to delete SkillDefinition records that may be automatically approved or require manual approval depending on system configuration.
            operationId: listDeleteSkillDefinitionProposal
            parameters:
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination. Use the value from the 'nextCursor' field of the previous response.
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListDeleteSkillDefinitionProposalResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List SkillDefinition deletion proposals
            tags:
                - SkillDefinitions
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
        post:
            description: Create new proposals to delete SkillDefinition records. The proposals may be automatically approved or require manual approval depending on system configuration. You can submit multiple proposals in a single request.
            operationId: createDeleteSkillDefinitionProposal
            requestBody:
                content:
                    application/json:
                        schema:
                            items:
                                $ref: '#/components/schemas/CreateDeleteSkillDefinitionProposalRequest'
                            maxItems: 100
                            minItems: 1
                            type: array
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/DeleteSkillDefinitionProposal'
                                type: array
                    description: Created successfully
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Propose deletion of SkillDefinitions
            tags:
                - SkillDefinitions
                - Proposals
    /{orgkeepID}/deleteSkillDefinitions/{id}:
        get:
            description: Get details of a specific SkillDefinition deletion proposal by ID
            operationId: getDeleteSkillDefinitionProposal
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteSkillDefinitionProposal'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get SkillDefinition deletion proposal
            tags:
                - SkillDefinitions
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
            - description: DeleteSkillDefinitionProposal ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgkeepID}/updateSkillDefinitions:
        get:
            description: |-
                List all updateSkillDefinitions proposals. These are proposed changes to update existing SkillDefinition records that may be automatically approved or require manual approval depending on system configuration.

                **Filter Syntax:**
                - Filters use exact match only
                - Multiple filters are combined with AND logic
                - Filterable fields: ratingScaleID, typeID
                - Example: `?ratingScaleID=123e4567-e89b-12d3-a456-426614174000&typeID=123e4567-e89b-12d3-a456-426614174000`
            operationId: listUpdateSkillDefinitionProposal
            parameters:
                - description: Filter by ratingScaleID (exact match)
                  in: query
                  name: ratingScaleID
                  schema:
                    type: string
                - description: Filter by typeID (exact match)
                  in: query
                  name: typeID
                  schema:
                    type: string
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination. Use the value from the 'nextCursor' field of the previous response.
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListUpdateSkillDefinitionProposalResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List SkillDefinition update proposals
            tags:
                - SkillDefinitions
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
        post:
            description: Create new proposals to update SkillDefinition records. All fields are optional - omitted fields will not be changed. Only include fields you want to update. Setting a field to null will clear its value (where applicable). The proposals may be automatically approved or require manual approval depending on system configuration. You can submit multiple proposals in a single request.
            operationId: createUpdateSkillDefinitionProposal
            requestBody:
                content:
                    application/json:
                        schema:
                            items:
                                $ref: '#/components/schemas/CreateUpdateSkillDefinitionProposalRequest'
                            maxItems: 100
                            minItems: 1
                            type: array
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/UpdateSkillDefinitionProposal'
                                type: array
                    description: Created successfully
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Propose update of SkillDefinitions
            tags:
                - SkillDefinitions
                - Proposals
    /{orgkeepID}/updateSkillDefinitions/{id}:
        get:
            description: Get details of a specific SkillDefinition update proposal by ID
            operationId: getUpdateSkillDefinitionProposal
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateSkillDefinitionProposal'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get SkillDefinition update proposal
            tags:
                - SkillDefinitions
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
            - description: UpdateSkillDefinitionProposal ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgkeepID}/skillPlannings:
        get:
            description: List skillPlannings
            operationId: listSkillPlanning
            parameters:
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination. Use the value from the 'nextCursor' field of the previous response.
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListSkillPlanningResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List skillPlannings
            tags:
                - SkillPlannings
                - Querying
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
    /{orgkeepID}/skillPlannings/{id}:
        get:
            description: Get a single SkillPlanning by ID
            operationId: getSkillPlanning
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SkillPlanning'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get SkillPlanning
            tags:
                - SkillPlannings
                - Querying
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
            - description: SkillPlanning ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgkeepID}/createSkillPlannings:
        get:
            description: List all createSkillPlannings proposals. These are proposed changes to create new SkillPlanning records that may be automatically approved or require manual approval depending on system configuration.
            operationId: listCreateSkillPlanningProposal
            parameters:
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination. Use the value from the 'nextCursor' field of the previous response.
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListCreateSkillPlanningProposalResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List SkillPlanning creation proposals
            tags:
                - SkillPlannings
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
        post:
            description: Create new proposals to add SkillPlanning records. The proposals may be automatically approved or require manual approval depending on system configuration. You can submit multiple proposals in a single request.
            operationId: createCreateSkillPlanningProposal
            requestBody:
                content:
                    application/json:
                        schema:
                            items:
                                $ref: '#/components/schemas/CreateCreateSkillPlanningProposalRequest'
                            maxItems: 100
                            minItems: 1
                            type: array
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/CreateSkillPlanningProposal'
                                type: array
                    description: Created successfully
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Propose creation of SkillPlannings
            tags:
                - SkillPlannings
                - Proposals
    /{orgkeepID}/createSkillPlannings/{id}:
        get:
            description: Get details of a specific SkillPlanning creation proposal by ID
            operationId: getCreateSkillPlanningProposal
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateSkillPlanningProposal'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get SkillPlanning creation proposal
            tags:
                - SkillPlannings
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
            - description: CreateSkillPlanningProposal ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgkeepID}/deleteSkillPlannings:
        get:
            description: List all deleteSkillPlannings proposals. These are proposed changes to delete SkillPlanning records that may be automatically approved or require manual approval depending on system configuration.
            operationId: listDeleteSkillPlanningProposal
            parameters:
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination. Use the value from the 'nextCursor' field of the previous response.
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListDeleteSkillPlanningProposalResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List SkillPlanning deletion proposals
            tags:
                - SkillPlannings
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
        post:
            description: Create new proposals to delete SkillPlanning records. The proposals may be automatically approved or require manual approval depending on system configuration. You can submit multiple proposals in a single request.
            operationId: createDeleteSkillPlanningProposal
            requestBody:
                content:
                    application/json:
                        schema:
                            items:
                                $ref: '#/components/schemas/CreateDeleteSkillPlanningProposalRequest'
                            maxItems: 100
                            minItems: 1
                            type: array
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/DeleteSkillPlanningProposal'
                                type: array
                    description: Created successfully
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Propose deletion of SkillPlannings
            tags:
                - SkillPlannings
                - Proposals
    /{orgkeepID}/deleteSkillPlannings/{id}:
        get:
            description: Get details of a specific SkillPlanning deletion proposal by ID
            operationId: getDeleteSkillPlanningProposal
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteSkillPlanningProposal'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get SkillPlanning deletion proposal
            tags:
                - SkillPlannings
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
            - description: DeleteSkillPlanningProposal ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgkeepID}/updateSkillPlannings:
        get:
            description: List all updateSkillPlannings proposals. These are proposed changes to update existing SkillPlanning records that may be automatically approved or require manual approval depending on system configuration.
            operationId: listUpdateSkillPlanningProposal
            parameters:
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination. Use the value from the 'nextCursor' field of the previous response.
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListUpdateSkillPlanningProposalResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List SkillPlanning update proposals
            tags:
                - SkillPlannings
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
        post:
            description: Create new proposals to update SkillPlanning records. All fields are optional - omitted fields will not be changed. Only include fields you want to update. Setting a field to null will clear its value (where applicable). The proposals may be automatically approved or require manual approval depending on system configuration. You can submit multiple proposals in a single request.
            operationId: createUpdateSkillPlanningProposal
            requestBody:
                content:
                    application/json:
                        schema:
                            items:
                                $ref: '#/components/schemas/CreateUpdateSkillPlanningProposalRequest'
                            maxItems: 100
                            minItems: 1
                            type: array
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/UpdateSkillPlanningProposal'
                                type: array
                    description: Created successfully
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Propose update of SkillPlannings
            tags:
                - SkillPlannings
                - Proposals
    /{orgkeepID}/updateSkillPlannings/{id}:
        get:
            description: Get details of a specific SkillPlanning update proposal by ID
            operationId: getUpdateSkillPlanningProposal
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateSkillPlanningProposal'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get SkillPlanning update proposal
            tags:
                - SkillPlannings
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
            - description: UpdateSkillPlanningProposal ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgkeepID}/skillResults:
        get:
            description: |-
                List skillResults

                **Filter Syntax:**
                - Filters use exact match only
                - Multiple filters are combined with AND logic
                - Filterable fields: typeOfProofID, scoreID
                - Example: `?typeOfProofID=123e4567-e89b-12d3-a456-426614174000&scoreID=123e4567-e89b-12d3-a456-426614174000`
            operationId: listSkillResult
            parameters:
                - description: Filter by typeOfProofID (exact match)
                  in: query
                  name: typeOfProofID
                  schema:
                    type: string
                - description: Filter by scoreID (exact match)
                  in: query
                  name: scoreID
                  schema:
                    type: string
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination. Use the value from the 'nextCursor' field of the previous response.
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListSkillResultResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List skillResults
            tags:
                - SkillResults
                - Querying
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
    /{orgkeepID}/skillResults/{id}:
        get:
            description: Get a single SkillResult by ID
            operationId: getSkillResult
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SkillResult'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get SkillResult
            tags:
                - SkillResults
                - Querying
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
            - description: SkillResult ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgkeepID}/createSkillResults:
        get:
            description: |-
                List all createSkillResults proposals. These are proposed changes to create new SkillResult records that may be automatically approved or require manual approval depending on system configuration.

                **Filter Syntax:**
                - Filters use exact match only
                - Multiple filters are combined with AND logic
                - Filterable fields: typeOfProofID, scoreID
                - Example: `?typeOfProofID=123e4567-e89b-12d3-a456-426614174000&scoreID=123e4567-e89b-12d3-a456-426614174000`
            operationId: listCreateSkillResultProposal
            parameters:
                - description: Filter by typeOfProofID (exact match)
                  in: query
                  name: typeOfProofID
                  schema:
                    type: string
                - description: Filter by scoreID (exact match)
                  in: query
                  name: scoreID
                  schema:
                    type: string
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination. Use the value from the 'nextCursor' field of the previous response.
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListCreateSkillResultProposalResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List SkillResult creation proposals
            tags:
                - SkillResults
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
        post:
            description: Create new proposals to add SkillResult records. The proposals may be automatically approved or require manual approval depending on system configuration. You can submit multiple proposals in a single request.
            operationId: createCreateSkillResultProposal
            requestBody:
                content:
                    application/json:
                        schema:
                            items:
                                $ref: '#/components/schemas/CreateCreateSkillResultProposalRequest'
                            maxItems: 100
                            minItems: 1
                            type: array
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/CreateSkillResultProposal'
                                type: array
                    description: Created successfully
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Propose creation of SkillResults
            tags:
                - SkillResults
                - Proposals
    /{orgkeepID}/createSkillResults/{id}:
        get:
            description: Get details of a specific SkillResult creation proposal by ID
            operationId: getCreateSkillResultProposal
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateSkillResultProposal'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get SkillResult creation proposal
            tags:
                - SkillResults
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
            - description: CreateSkillResultProposal ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgkeepID}/deleteSkillResults:
        get:
            description: List all deleteSkillResults proposals. These are proposed changes to delete SkillResult records that may be automatically approved or require manual approval depending on system configuration.
            operationId: listDeleteSkillResultProposal
            parameters:
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination. Use the value from the 'nextCursor' field of the previous response.
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListDeleteSkillResultProposalResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List SkillResult deletion proposals
            tags:
                - SkillResults
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
        post:
            description: Create new proposals to delete SkillResult records. The proposals may be automatically approved or require manual approval depending on system configuration. You can submit multiple proposals in a single request.
            operationId: createDeleteSkillResultProposal
            requestBody:
                content:
                    application/json:
                        schema:
                            items:
                                $ref: '#/components/schemas/CreateDeleteSkillResultProposalRequest'
                            maxItems: 100
                            minItems: 1
                            type: array
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/DeleteSkillResultProposal'
                                type: array
                    description: Created successfully
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Propose deletion of SkillResults
            tags:
                - SkillResults
                - Proposals
    /{orgkeepID}/deleteSkillResults/{id}:
        get:
            description: Get details of a specific SkillResult deletion proposal by ID
            operationId: getDeleteSkillResultProposal
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteSkillResultProposal'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get SkillResult deletion proposal
            tags:
                - SkillResults
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
            - description: DeleteSkillResultProposal ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgkeepID}/updateSkillResults:
        get:
            description: |-
                List all updateSkillResults proposals. These are proposed changes to update existing SkillResult records that may be automatically approved or require manual approval depending on system configuration.

                **Filter Syntax:**
                - Filters use exact match only
                - Multiple filters are combined with AND logic
                - Filterable fields: typeOfProofID, scoreID
                - Example: `?typeOfProofID=123e4567-e89b-12d3-a456-426614174000&scoreID=123e4567-e89b-12d3-a456-426614174000`
            operationId: listUpdateSkillResultProposal
            parameters:
                - description: Filter by typeOfProofID (exact match)
                  in: query
                  name: typeOfProofID
                  schema:
                    type: string
                - description: Filter by scoreID (exact match)
                  in: query
                  name: scoreID
                  schema:
                    type: string
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination. Use the value from the 'nextCursor' field of the previous response.
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListUpdateSkillResultProposalResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List SkillResult update proposals
            tags:
                - SkillResults
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
        post:
            description: Create new proposals to update SkillResult records. All fields are optional - omitted fields will not be changed. Only include fields you want to update. Setting a field to null will clear its value (where applicable). The proposals may be automatically approved or require manual approval depending on system configuration. You can submit multiple proposals in a single request.
            operationId: createUpdateSkillResultProposal
            requestBody:
                content:
                    application/json:
                        schema:
                            items:
                                $ref: '#/components/schemas/CreateUpdateSkillResultProposalRequest'
                            maxItems: 100
                            minItems: 1
                            type: array
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/UpdateSkillResultProposal'
                                type: array
                    description: Created successfully
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Propose update of SkillResults
            tags:
                - SkillResults
                - Proposals
    /{orgkeepID}/updateSkillResults/{id}:
        get:
            description: Get details of a specific SkillResult update proposal by ID
            operationId: getUpdateSkillResultProposal
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateSkillResultProposal'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get SkillResult update proposal
            tags:
                - SkillResults
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
            - description: UpdateSkillResultProposal ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgkeepID}/typesOfProof:
        get:
            description: |-
                List typesOfProof

                **Filter Syntax:**
                - Filters use exact match only
                - Multiple filters are combined with AND logic
                - Filterable fields: skillDefinitionID
                - Example: `?skillDefinitionID=123e4567-e89b-12d3-a456-426614174000`
            operationId: listTypeOfProof
            parameters:
                - description: Filter by skillDefinitionID (exact match)
                  in: query
                  name: skillDefinitionID
                  schema:
                    type: string
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination. Use the value from the 'nextCursor' field of the previous response.
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListTypeOfProofResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List typesOfProof
            tags:
                - TypesOfProof
                - Querying
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
    /{orgkeepID}/typesOfProof/{id}:
        get:
            description: Get a single TypeOfProof by ID
            operationId: getTypeOfProof
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/TypeOfProof'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get TypeOfProof
            tags:
                - TypesOfProof
                - Querying
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
            - description: TypeOfProof ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgkeepID}/createTypesOfProof:
        get:
            description: |-
                List all createTypesOfProof proposals. These are proposed changes to create new TypesOfProof records that may be automatically approved or require manual approval depending on system configuration.

                **Filter Syntax:**
                - Filters use exact match only
                - Multiple filters are combined with AND logic
                - Filterable fields: skillDefinitionID
                - Example: `?skillDefinitionID=123e4567-e89b-12d3-a456-426614174000`
            operationId: listCreateTypeOfProofProposal
            parameters:
                - description: Filter by skillDefinitionID (exact match)
                  in: query
                  name: skillDefinitionID
                  schema:
                    type: string
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination. Use the value from the 'nextCursor' field of the previous response.
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListCreateTypeOfProofProposalResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List TypesOfProof creation proposals
            tags:
                - TypesOfProof
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
        post:
            description: Create new proposals to add TypesOfProof records. The proposals may be automatically approved or require manual approval depending on system configuration. You can submit multiple proposals in a single request.
            operationId: createCreateTypeOfProofProposal
            requestBody:
                content:
                    application/json:
                        schema:
                            items:
                                $ref: '#/components/schemas/CreateCreateTypeOfProofProposalRequest'
                            maxItems: 100
                            minItems: 1
                            type: array
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/CreateTypeOfProofProposal'
                                type: array
                    description: Created successfully
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Propose creation of TypesOfProofs
            tags:
                - TypesOfProof
                - Proposals
    /{orgkeepID}/createTypesOfProof/{id}:
        get:
            description: Get details of a specific TypesOfProof creation proposal by ID
            operationId: getCreateTypeOfProofProposal
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateTypeOfProofProposal'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get TypesOfProof creation proposal
            tags:
                - TypesOfProof
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
            - description: CreateTypeOfProofProposal ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgkeepID}/deleteTypesOfProof:
        get:
            description: List all deleteTypesOfProof proposals. These are proposed changes to delete TypesOfProof records that may be automatically approved or require manual approval depending on system configuration.
            operationId: listDeleteTypeOfProofProposal
            parameters:
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination. Use the value from the 'nextCursor' field of the previous response.
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListDeleteTypeOfProofProposalResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List TypesOfProof deletion proposals
            tags:
                - TypesOfProof
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
        post:
            description: Create new proposals to delete TypesOfProof records. The proposals may be automatically approved or require manual approval depending on system configuration. You can submit multiple proposals in a single request.
            operationId: createDeleteTypeOfProofProposal
            requestBody:
                content:
                    application/json:
                        schema:
                            items:
                                $ref: '#/components/schemas/CreateDeleteTypeOfProofProposalRequest'
                            maxItems: 100
                            minItems: 1
                            type: array
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/DeleteTypeOfProofProposal'
                                type: array
                    description: Created successfully
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Propose deletion of TypesOfProofs
            tags:
                - TypesOfProof
                - Proposals
    /{orgkeepID}/deleteTypesOfProof/{id}:
        get:
            description: Get details of a specific TypesOfProof deletion proposal by ID
            operationId: getDeleteTypeOfProofProposal
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteTypeOfProofProposal'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get TypesOfProof deletion proposal
            tags:
                - TypesOfProof
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
            - description: DeleteTypeOfProofProposal ID
              in: path
              name: id
              required: true
              schema:
                type: string
    /{orgkeepID}/updateTypesOfProof:
        get:
            description: |-
                List all updateTypesOfProof proposals. These are proposed changes to update existing TypesOfProof records that may be automatically approved or require manual approval depending on system configuration.

                **Filter Syntax:**
                - Filters use exact match only
                - Multiple filters are combined with AND logic
                - Filterable fields: skillDefinitionID
                - Example: `?skillDefinitionID=123e4567-e89b-12d3-a456-426614174000`
            operationId: listUpdateTypeOfProofProposal
            parameters:
                - description: Filter by skillDefinitionID (exact match)
                  in: query
                  name: skillDefinitionID
                  schema:
                    type: string
                - description: Maximum number of items to return (1-1000)
                  in: query
                  name: limit
                  schema:
                    default: 10
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: Cursor for pagination. Use the value from the 'nextCursor' field of the previous response.
                  in: query
                  name: cursor
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListUpdateTypeOfProofProposalResponse'
                    description: Successful response
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: List TypesOfProof update proposals
            tags:
                - TypesOfProof
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
        post:
            description: Create new proposals to update TypesOfProof records. All fields are optional - omitted fields will not be changed. Only include fields you want to update. Setting a field to null will clear its value (where applicable). The proposals may be automatically approved or require manual approval depending on system configuration. You can submit multiple proposals in a single request.
            operationId: createUpdateTypeOfProofProposal
            requestBody:
                content:
                    application/json:
                        schema:
                            items:
                                $ref: '#/components/schemas/CreateUpdateTypeOfProofProposalRequest'
                            maxItems: 100
                            minItems: 1
                            type: array
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/UpdateTypeOfProofProposal'
                                type: array
                    description: Created successfully
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Propose update of TypesOfProofs
            tags:
                - TypesOfProof
                - Proposals
    /{orgkeepID}/updateTypesOfProof/{id}:
        get:
            description: Get details of a specific TypesOfProof update proposal by ID
            operationId: getUpdateTypeOfProofProposal
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateTypeOfProofProposal'
                    description: Successful response
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/InternalError'
            summary: Get TypesOfProof update proposal
            tags:
                - TypesOfProof
                - Proposals
        parameters:
            - description: Organization identifier
              in: path
              name: orgkeepID
              required: true
              schema:
                type: string
            - description: UpdateTypeOfProofProposal ID
              in: path
              name: id
              required: true
              schema:
                type: string
security:
    - apiKey: []
tags:
    - description: Operations for Querying
      name: Querying
    - description: Operations for CustomFieldDefinitions
      name: CustomFieldDefinitions
    - description: Operations for EmployeeUnavailabilities
      name: EmployeeUnavailabilities
    - description: Operations for Employees
      name: Employees
    - description: Operations for EmploymentContractTypes
      name: EmploymentContractTypes
    - description: Operations for EmploymentContracts
      name: EmploymentContracts
    - description: Operations for EmploymentRelationTypes
      name: EmploymentRelationTypes
    - description: Operations for EmploymentRelations
      name: EmploymentRelations
    - description: Operations for EntityDefinitions
      name: EntityDefinitions
    - description: Operations for GroupingTypes
      name: GroupingTypes
    - description: Operations for Groupings
      name: Groupings
    - description: Operations for MonitoringTraces
      name: MonitoringTraces
    - description: Operations for PositionAssignments
      name: PositionAssignments
    - description: Operations for RatingScaleLevelDescriptors
      name: RatingScaleLevelDescriptors
    - description: Operations for RatingScaleLevels
      name: RatingScaleLevels
    - description: Operations for RatingScales
      name: RatingScales
    - description: Operations for Repositories
      name: Repositories
    - description: Operations for SkillDefinitionTypes
      name: SkillDefinitionTypes
    - description: Operations for SkillDefinitions
      name: SkillDefinitions
    - description: Operations for SkillPlannings
      name: SkillPlannings
    - description: Operations for SkillResults
      name: SkillResults
    - description: Operations for TypesOfProof
      name: TypesOfProof
    - description: API metadata operations
      name: Meta
x-webhooks:
    proposalStatusChanged:
        post:
            description: Triggered when a proposal's status changes
            requestBody:
                content:
                    application/json:
                        schema:
                            properties:
                                newStatus:
                                    type: string
                                previousStatus:
                                    type: string
                                proposalId:
                                    format: uuid
                                    type: string
                                timestamp:
                                    format: date-time
                                    type: string
                            type: object
                required: true
            summary: Proposal status changed
